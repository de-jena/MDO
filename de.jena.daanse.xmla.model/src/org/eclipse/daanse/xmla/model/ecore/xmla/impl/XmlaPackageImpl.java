/**
 */
package org.eclipse.daanse.xmla.model.ecore.xmla.impl;

import java.math.BigInteger;

import org.eclipse.daanse.xmla.model.ecore.engine.EnginePackage;

import org.eclipse.daanse.xmla.model.ecore.engine.impl.EnginePackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine100.Engine100Package;

import org.eclipse.daanse.xmla.model.ecore.engine100.impl.Engine100PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine100_100.Engine100_100Package;

import org.eclipse.daanse.xmla.model.ecore.engine100_100.impl.Engine100_100PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine2.Engine2Package;

import org.eclipse.daanse.xmla.model.ecore.engine2.impl.Engine2PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine200.Engine200Package;

import org.eclipse.daanse.xmla.model.ecore.engine200.impl.Engine200PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine200_200.Engine200_200Package;

import org.eclipse.daanse.xmla.model.ecore.engine200_200.impl.Engine200_200PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine300.Engine300Package;

import org.eclipse.daanse.xmla.model.ecore.engine300.impl.Engine300PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine300_300.Engine300_300Package;

import org.eclipse.daanse.xmla.model.ecore.engine300_300.impl.Engine300_300PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine400.Engine400Package;

import org.eclipse.daanse.xmla.model.ecore.engine400.impl.Engine400PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine600.Engine600Package;

import org.eclipse.daanse.xmla.model.ecore.engine600.impl.Engine600PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.engine800.Engine800Package;

import org.eclipse.daanse.xmla.model.ecore.engine800.impl.Engine800PackageImpl;

import org.eclipse.daanse.xmla.model.ecore.ext.ExtPackage;

import org.eclipse.daanse.xmla.model.ecore.ext.impl.ExtPackageImpl;

import org.eclipse.daanse.xmla.model.ecore.msxmla.MsxmlaPackage;

import org.eclipse.daanse.xmla.model.ecore.msxmla.impl.MsxmlaPackageImpl;

import org.eclipse.daanse.xmla.model.ecore.schema.SchemaPackage;

import org.eclipse.daanse.xmla.model.ecore.schema.impl.SchemaPackageImpl;

import org.eclipse.daanse.xmla.model.ecore.xmla.AccessType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Account;
import org.eclipse.daanse.xmla.model.ecore.xmla.AccountsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Action;
import org.eclipse.daanse.xmla.model.ecore.xmla.ActionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ActionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ActionsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregateFunctionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Aggregation;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationDesign;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationDesignAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationDesignDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationDesignsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationFunctionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationInstance;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationInstanceAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationInstanceDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationInstanceMeasure;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationInstancesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationStorageType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationUsageType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AggregationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AlgorithmParameter;
import org.eclipse.daanse.xmla.model.ecore.xmla.AlgorithmParametersType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AlgorithmType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AliasesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AllMemberAggregationUsageType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AllMemberTranslationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Alter;
import org.eclipse.daanse.xmla.model.ecore.xmla.AndOrType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Annotation;
import org.eclipse.daanse.xmla.model.ecore.xmla.AnnotationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AssembliesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AssembliesType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.Assembly;
import org.eclipse.daanse.xmla.model.ecore.xmla.Attach;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeAllMemberTranslationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeHierarchyOptimizedStateType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeHierarchyOptimizedStateType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeInsertUpdate;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributePermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributePermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributePermissionsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeRelationship;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeRelationshipsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributeTranslation;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType4;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType5;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType6;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType7;
import org.eclipse.daanse.xmla.model.ecore.xmla.AttributesType8;
import org.eclipse.daanse.xmla.model.ecore.xmla.AxisFormatType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Backup;
import org.eclipse.daanse.xmla.model.ecore.xmla.Batch;
import org.eclipse.daanse.xmla.model.ecore.xmla.BeginSessionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.BeginTransaction;
import org.eclipse.daanse.xmla.model.ecore.xmla.Binding;
import org.eclipse.daanse.xmla.model.ecore.xmla.Bindings;
import org.eclipse.daanse.xmla.model.ecore.xmla.BoolBinop;
import org.eclipse.daanse.xmla.model.ecore.xmla.BooleanExpr;
import org.eclipse.daanse.xmla.model.ecore.xmla.CacheModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CalculatedMeasureBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.CalculationPropertiesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CalculationProperty;
import org.eclipse.daanse.xmla.model.ecore.xmla.CalculationTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CalculationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Cancel;
import org.eclipse.daanse.xmla.model.ecore.xmla.CardinalityType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CardinalityType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.CatalogLocationType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Cell;
import org.eclipse.daanse.xmla.model.ecore.xmla.CellPermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.CellPermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ClassifiedColumnsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ClearCache;
import org.eclipse.daanse.xmla.model.ecore.xmla.ClearResultType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CloneDatabase;
import org.eclipse.daanse.xmla.model.ecore.xmla.ClrAssembly;
import org.eclipse.daanse.xmla.model.ecore.xmla.ClrAssemblyFile;
import org.eclipse.daanse.xmla.model.ecore.xmla.ColumnBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ColumnsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ColumnsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.ColumnsType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.ColumnsType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.ColumnsType4;
import org.eclipse.daanse.xmla.model.ecore.xmla.ComAssembly;
import org.eclipse.daanse.xmla.model.ecore.xmla.Command;
import org.eclipse.daanse.xmla.model.ecore.xmla.CommandsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CommitTransaction;
import org.eclipse.daanse.xmla.model.ecore.xmla.ComparatorType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ConnectionStringSecurityType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ContentType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ContentType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.Create;
import org.eclipse.daanse.xmla.model.ecore.xmla.Cube;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubeAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubeAttributeBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubeDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubeDimensionBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubeDimensionPermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubeHierarchy;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubePermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubePermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubeStorageModeEnumType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CubesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CurrentStorageModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CurrentStorageModeType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.CustomRollupColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.CustomRollupPropertiesColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DSVTableBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataAggregationType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataBlock;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataItem;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataMiningMeasureGroupDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataSource;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataSourcePermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataSourcePermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataSourceView;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataSourceViewBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataSourceViewsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataSourcesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DataTypeType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.Database;
import org.eclipse.daanse.xmla.model.ecore.xmla.DatabasePermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.DatabasePermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DatabasesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropConcatNullBehaviorType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropMsmdAutoExistsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropMsmdCompareCaseSensitiveStringFlagsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropMsmdMDXCompatibilityType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropMsmdSubqueriesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropNullCollationType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropOutputParameterAvailableType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropPersistentIdTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropPrepareAbortBehaviorType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropPrepareCommitBehaviorType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DbpropQuotedIdentifierCaseType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DegenerateMeasureGroupDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.Delete;
import org.eclipse.daanse.xmla.model.ecore.xmla.DesignAggregations;
import org.eclipse.daanse.xmla.model.ecore.xmla.Detach;
import org.eclipse.daanse.xmla.model.ecore.xmla.DialectType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Dimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionAttributeTypeEnumType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionCurrentStorageModeEnumType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionPermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionPermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionPermissionsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.DimensionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DiscoverResponseType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DiscoverType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DiscretizationMethodType;
import org.eclipse.daanse.xmla.model.ecore.xmla.DocumentRoot;
import org.eclipse.daanse.xmla.model.ecore.xmla.DrillThroughAction;
import org.eclipse.daanse.xmla.model.ecore.xmla.Drop;
import org.eclipse.daanse.xmla.model.ecore.xmla.DurabilityGuaranteeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EditionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EndOfDataType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EndSessionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ErrorConfiguration;
import org.eclipse.daanse.xmla.model.ecore.xmla.Event;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventCategoryType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventColumn;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventColumnID;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventColumnListType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventColumnSubclassListType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventColumnSubclassType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventListType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventSessionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.EventsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ExecuteParameter;
import org.eclipse.daanse.xmla.model.ecore.xmla.ExecuteResponseType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ExecuteType;
import org.eclipse.daanse.xmla.model.ecore.xmla.FilesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.FiscalYearNameType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Folder;
import org.eclipse.daanse.xmla.model.ecore.xmla.FoldingParameters;
import org.eclipse.daanse.xmla.model.ecore.xmla.ForeignKeyColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ForeignKeyColumnsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ForeignKeyColumnsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.FormatType;
import org.eclipse.daanse.xmla.model.ecore.xmla.FormatType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.GlobalType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Group;
import org.eclipse.daanse.xmla.model.ecore.xmla.GroupingBehaviorType;
import org.eclipse.daanse.xmla.model.ecore.xmla.GroupsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.HideMemberIfType;
import org.eclipse.daanse.xmla.model.ecore.xmla.HierarchiesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.HierarchiesType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.HierarchiesType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.Hierarchy;
import org.eclipse.daanse.xmla.model.ecore.xmla.HierarchyUniqueNameStyleType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ImageLoad;
import org.eclipse.daanse.xmla.model.ecore.xmla.ImageSave;
import org.eclipse.daanse.xmla.model.ecore.xmla.IncrementalProcessingNotification;
import org.eclipse.daanse.xmla.model.ecore.xmla.IncrementalProcessingNotificationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.InheritedBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.Insert;
import org.eclipse.daanse.xmla.model.ecore.xmla.InstanceSelectionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.InvalidXmlCharactersType;
import org.eclipse.daanse.xmla.model.ecore.xmla.InvocationType;
import org.eclipse.daanse.xmla.model.ecore.xmla.InvocationType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.InvocationType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.IsolationType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeepResultType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyColumnsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyColumnsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyColumnsType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyColumnsType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyColumnsType4;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyDuplicateType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyErrorActionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyErrorLimitActionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeyNotFoundType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeysType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KeysType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.Kpi;
import org.eclipse.daanse.xmla.model.ecore.xmla.KpisType;
import org.eclipse.daanse.xmla.model.ecore.xmla.KpisType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.Level;
import org.eclipse.daanse.xmla.model.ecore.xmla.LevelsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Location;
import org.eclipse.daanse.xmla.model.ecore.xmla.LocationBackup;
import org.eclipse.daanse.xmla.model.ecore.xmla.LocationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.LocationsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.LocationsType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.Lock;
import org.eclipse.daanse.xmla.model.ecore.xmla.MDXSupportType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MajorObject;
import org.eclipse.daanse.xmla.model.ecore.xmla.ManyToManyMeasureGroupDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.MaterializationType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdpropAggregateCellUpdateType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdpropFlatteningSupportType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdpropMdxNonMeasureExpressionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdpropMdxRangeRowsetType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdpropMdxSlicerType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdxMissingMemberModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdxMissingMemberModeType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdxScript;
import org.eclipse.daanse.xmla.model.ecore.xmla.MdxScriptsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Measure;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroup;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroupAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroupBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroupDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroupDimensionBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroupStorageModeEnumType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroupsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasureGroupsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasuresType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasuresType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.MeasuresType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.Member;
import org.eclipse.daanse.xmla.model.ecore.xmla.MemberUniqueNameStyleType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MembersType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MembersType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.MembersWithDataType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MemoryLockingModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MergePartitions;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningModel;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningModelColumn;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningModelPermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningModelPermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningModelingFlag;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningModelsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningStructure;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningStructureColumn;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningStructurePermission;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningStructurePermissionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.MiningStructuresType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ModelingFlagsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ModelingFlagsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.NameColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.NamingTemplateTranslationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.NotType;
import org.eclipse.daanse.xmla.model.ecore.xmla.NotificationTechniqueType;
import org.eclipse.daanse.xmla.model.ecore.xmla.NotificationTechniqueType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.NotifyTableChange;
import org.eclipse.daanse.xmla.model.ecore.xmla.NullKeyConvertedToUnknownType;
import org.eclipse.daanse.xmla.model.ecore.xmla.NullKeyNotAllowedType;
import org.eclipse.daanse.xmla.model.ecore.xmla.NullProcessingType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ObjectExpansion;
import org.eclipse.daanse.xmla.model.ecore.xmla.ObjectReference;
import org.eclipse.daanse.xmla.model.ecore.xmla.ObjectType;
import org.eclipse.daanse.xmla.model.ecore.xmla.OlapDataSource;
import org.eclipse.daanse.xmla.model.ecore.xmla.OnlineModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.OptimizedStateType;
import org.eclipse.daanse.xmla.model.ecore.xmla.OptionalityType;
import org.eclipse.daanse.xmla.model.ecore.xmla.OrderByType;
import org.eclipse.daanse.xmla.model.ecore.xmla.OrdinalType;
import org.eclipse.daanse.xmla.model.ecore.xmla.OutOfLineBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.OverrideBehaviorType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ParallelType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ParameterType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ParameterType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.ParameterType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.Parameters;
import org.eclipse.daanse.xmla.model.ecore.xmla.ParametersType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Partition;
import org.eclipse.daanse.xmla.model.ecore.xmla.PartitionCurrentStorageModeEnumType;
import org.eclipse.daanse.xmla.model.ecore.xmla.PartitionModes;
import org.eclipse.daanse.xmla.model.ecore.xmla.PartitionStorageModeEnumType;
import org.eclipse.daanse.xmla.model.ecore.xmla.PartitionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Permission;
import org.eclipse.daanse.xmla.model.ecore.xmla.PermissionSetType;
import org.eclipse.daanse.xmla.model.ecore.xmla.PersistenceType;
import org.eclipse.daanse.xmla.model.ecore.xmla.PersistenceType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.Perspective;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveAction;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveCalculation;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveHierarchy;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveKpi;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveMeasure;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectiveMeasureGroup;
import org.eclipse.daanse.xmla.model.ecore.xmla.PerspectivesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.PredLeaf;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProactiveCaching;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProactiveCachingBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProactiveCachingIncrementalProcessingBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProactiveCachingInheritedBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProactiveCachingObjectNotificationBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProactiveCachingQueryBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProactiveCachingTablesBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProcessingGroupType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProcessingModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProcessingModeType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProcessingModeType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProcessingModeType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProcessingStateType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Properties;
import org.eclipse.daanse.xmla.model.ecore.xmla.PropertiesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.PropertyList;
import org.eclipse.daanse.xmla.model.ecore.xmla.ProviderTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.PushedDataSource;
import org.eclipse.daanse.xmla.model.ecore.xmla.QueriesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.QueryBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.QueryNotification;
import org.eclipse.daanse.xmla.model.ecore.xmla.QueryNotificationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReadDefinitionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReadSourceDataType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReadType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReadType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReferenceMeasureGroupDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.RefreshPolicyType;
import org.eclipse.daanse.xmla.model.ecore.xmla.RefreshPolicyType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.RegularMeasureGroupDimension;
import org.eclipse.daanse.xmla.model.ecore.xmla.RelationalDataSource;
import org.eclipse.daanse.xmla.model.ecore.xmla.RelationshipTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReportAction;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReportFormatParameter;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReportFormatParametersType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReportParameter;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReportParametersType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReportingFirstWeekOfMonthType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReportingWeekToMonthPatternType;
import org.eclipse.daanse.xmla.model.ecore.xmla.RequestTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ResponseEncodingType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Restore;
import org.eclipse.daanse.xmla.model.ecore.xmla.RestrictionListType;
import org.eclipse.daanse.xmla.model.ecore.xmla.RestrictionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ResultType;
import org.eclipse.daanse.xmla.model.ecore.xmla.RetentionModes;
import org.eclipse.daanse.xmla.model.ecore.xmla.Return;
import org.eclipse.daanse.xmla.model.ecore.xmla.ReturnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Role;
import org.eclipse.daanse.xmla.model.ecore.xmla.RolesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.RolesType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.RollbackTransaction;
import org.eclipse.daanse.xmla.model.ecore.xmla.RootMemberIfType;
import org.eclipse.daanse.xmla.model.ecore.xmla.RootType;
import org.eclipse.daanse.xmla.model.ecore.xmla.RowBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.SQLQueryModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.SafetyOptionsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ScalarMiningStructureColumn;
import org.eclipse.daanse.xmla.model.ecore.xmla.Scope;
import org.eclipse.daanse.xmla.model.ecore.xmla.ScriptCacheProcessingModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ScriptErrorHandlingModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.SecuredCellValueType;
import org.eclipse.daanse.xmla.model.ecore.xmla.SecurityType;
import org.eclipse.daanse.xmla.model.ecore.xmla.SecurityType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.Server;
import org.eclipse.daanse.xmla.model.ecore.xmla.ServerPropertiesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ServerProperty;
import org.eclipse.daanse.xmla.model.ecore.xmla.SessionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.SetAuthContext;
import org.eclipse.daanse.xmla.model.ecore.xmla.ShareDimensionStorageType;
import org.eclipse.daanse.xmla.model.ecore.xmla.SkippedLevelsColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Source;
import org.eclipse.daanse.xmla.model.ecore.xmla.SourcesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.StandardAction;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateSupportType;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateType;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateType4;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateType5;
import org.eclipse.daanse.xmla.model.ecore.xmla.StateType6;
import org.eclipse.daanse.xmla.model.ecore.xmla.Statement;
import org.eclipse.daanse.xmla.model.ecore.xmla.StorageModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.StorageModeType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.StorageModeType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.StorageModeType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.Subscribe;
import org.eclipse.daanse.xmla.model.ecore.xmla.Synchronize;
import org.eclipse.daanse.xmla.model.ecore.xmla.SynchronizeSecurityType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TableBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.TableMiningStructureColumn;
import org.eclipse.daanse.xmla.model.ecore.xmla.TableNotification;
import org.eclipse.daanse.xmla.model.ecore.xmla.TableNotificationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TableNotificationsType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.TabularBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.TargetType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TargetType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.TargetTypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TargetTypeType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.TargetTypeType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.TimeAttributeBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.TimeBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.Trace;
import org.eclipse.daanse.xmla.model.ecore.xmla.TraceColumns;
import org.eclipse.daanse.xmla.model.ecore.xmla.TraceDefinitionProviderInfo;
import org.eclipse.daanse.xmla.model.ecore.xmla.TraceEvent;
import org.eclipse.daanse.xmla.model.ecore.xmla.TraceEventCategories;
import org.eclipse.daanse.xmla.model.ecore.xmla.TraceFilter;
import org.eclipse.daanse.xmla.model.ecore.xmla.TracesType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Translation;
import org.eclipse.daanse.xmla.model.ecore.xmla.TranslationInsertUpdate;
import org.eclipse.daanse.xmla.model.ecore.xmla.TranslationType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TranslationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TrimmingType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType10;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType11;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType12;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType13;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType4;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType5;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType6;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType7;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType8;
import org.eclipse.daanse.xmla.model.ecore.xmla.TypeType9;
import org.eclipse.daanse.xmla.model.ecore.xmla.UnaryExpr;
import org.eclipse.daanse.xmla.model.ecore.xmla.UnaryOperatorColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.UnknownMemberEnumType;
import org.eclipse.daanse.xmla.model.ecore.xmla.UnknownMemberTranslationsType;
import org.eclipse.daanse.xmla.model.ecore.xmla.UnknownMemberType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Unlock;
import org.eclipse.daanse.xmla.model.ecore.xmla.Unsubscribe;
import org.eclipse.daanse.xmla.model.ecore.xmla.Update;
import org.eclipse.daanse.xmla.model.ecore.xmla.UpdateCells;
import org.eclipse.daanse.xmla.model.ecore.xmla.UpdateIsolationLevelType;
import org.eclipse.daanse.xmla.model.ecore.xmla.UsageType;
import org.eclipse.daanse.xmla.model.ecore.xmla.UsageType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.UserDefinedGroupBinding;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValueColumnType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValuensType;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValuensType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValuensType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValuensType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValuensType4;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValuensType5;
import org.eclipse.daanse.xmla.model.ecore.xmla.ValuensType6;
import org.eclipse.daanse.xmla.model.ecore.xmla.VersionType;
import org.eclipse.daanse.xmla.model.ecore.xmla.VisibilityType;
import org.eclipse.daanse.xmla.model.ecore.xmla.VisualModeType;
import org.eclipse.daanse.xmla.model.ecore.xmla.Where;
import org.eclipse.daanse.xmla.model.ecore.xmla.WhereAttribute;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteBackTableCreation;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteType;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteType1;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteType2;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteType3;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteType4;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteType5;
import org.eclipse.daanse.xmla.model.ecore.xmla.WriteType6;
import org.eclipse.daanse.xmla.model.ecore.xmla.XmlaFactory;
import org.eclipse.daanse.xmla.model.ecore.xmla.XmlaPackage;

import org.eclipse.daanse.xmla.model.ecore.xmla.util.XmlaValidator;

import org.eclipse.daanse.xmla.model.ecore.xmla_empty.Xmla_emptyPackage;

import org.eclipse.daanse.xmla.model.ecore.xmla_empty.impl.Xmla_emptyPackageImpl;

import org.eclipse.daanse.xmla.model.ecore.xmla_exception.Xmla_exceptionPackage;

import org.eclipse.daanse.xmla.model.ecore.xmla_exception.impl.Xmla_exceptionPackageImpl;

import org.eclipse.daanse.xmla.model.ecore.xmla_mddataset.Xmla_mddatasetPackage;

import org.eclipse.daanse.xmla.model.ecore.xmla_mddataset.impl.Xmla_mddatasetPackageImpl;

import org.eclipse.daanse.xmla.model.ecore.xmla_multipleresults.Xmla_multipleresultsPackage;

import org.eclipse.daanse.xmla.model.ecore.xmla_multipleresults.impl.Xmla_multipleresultsPackageImpl;

import org.eclipse.daanse.xmla.model.ecore.xmla_rowset.Xmla_rowsetPackage;

import org.eclipse.daanse.xmla.model.ecore.xmla_rowset.impl.Xmla_rowsetPackageImpl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.emf.ecore.EValidator;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.emf.ecore.xml.namespace.XMLNamespacePackage;

import org.eclipse.emf.ecore.xml.type.XMLTypePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class XmlaPackageImpl extends EPackageImpl implements XmlaPackage {
	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass accountEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass accountsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass actionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass actionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass actionsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass actionTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationDesignEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationDesignAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationDesignDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationDesignsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationInstanceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationInstanceAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationInstanceDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationInstanceMeasureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationInstancesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aggregationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass algorithmParameterEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass algorithmParametersTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass aliasesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass allMemberTranslationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass alterEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass andOrTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass annotationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass annotationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass assembliesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass assembliesType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass assemblyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attachEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributeAllMemberTranslationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributeBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributeInsertUpdateEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributePermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributePermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributePermissionsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributeRelationshipEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributeRelationshipsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType3EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType4EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType5EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType6EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType7EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributesType8EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass attributeTranslationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass backupEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass batchEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass beginSessionTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass beginTransactionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass bindingsEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass boolBinopEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass booleanExprEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass calculatedMeasureBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass calculationPropertiesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass calculationPropertyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass calculationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cancelEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cellEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cellPermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cellPermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass classifiedColumnsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass clearCacheEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass clearResultTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cloneDatabaseEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass clrAssemblyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass clrAssemblyFileEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass columnBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass columnsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass columnsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass columnsType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass columnsType3EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass columnsType4EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass columnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass comAssemblyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass commandEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass commandsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass commitTransactionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass comparatorTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass createEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubeAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubeAttributeBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubeDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubeDimensionBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubeDimensionPermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubeHierarchyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubePermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubePermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass cubesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass currentStorageModeTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass currentStorageModeType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass customRollupColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass customRollupPropertiesColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass databaseEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass databasePermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass databasePermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass databasesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataBlockEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataItemEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataMiningMeasureGroupDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataSourceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataSourcePermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataSourcePermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataSourcesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataSourceViewEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataSourceViewBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataSourceViewsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dataType3EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dbccEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass degenerateMeasureGroupDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass deleteEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass designAggregationsEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass detachEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dimensionAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dimensionBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dimensionPermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dimensionPermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dimensionPermissionsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dimensionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass discoverResponseTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass discoverTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass documentRootEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass drillThroughActionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dropEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass dsvTableBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass endOfDataTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass endSessionTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass errorConfigurationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventCategoryTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventColumnEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventColumnIDEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventColumnListTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventColumnSubclassListTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventColumnSubclassTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventListTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventSessionTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass eventTypeTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass executeParameterEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass executeResponseTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass executeTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass filesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass folderEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass foldingParametersEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass foreignKeyColumnsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass foreignKeyColumnsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass foreignKeyColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass globalTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass groupEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass groupsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass hierarchiesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass hierarchiesType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass hierarchiesType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass hierarchyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass imageLoadEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass imageSaveEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass incrementalProcessingNotificationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass incrementalProcessingNotificationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass inheritedBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass insertEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keepResultTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keyColumnsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keyColumnsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keyColumnsType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keyColumnsType3EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keyColumnsType4EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keyColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keysTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass keysType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass kpiEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass kpisTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass kpisType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass levelEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass levelsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass locationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass locationBackupEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass locationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass locationsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass locationsType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass lockEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass majorObjectEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass manyToManyMeasureGroupDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass mdxScriptEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass mdxScriptsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureGroupEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureGroupAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureGroupBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureGroupDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureGroupDimensionBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureGroupsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measureGroupsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measuresTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measuresType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass measuresType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass memberEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass membersTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass membersType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass mergePartitionsEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningModelEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningModelColumnEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningModelingFlagEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningModelPermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningModelPermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningModelsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningStructureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningStructureColumnEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningStructurePermissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningStructurePermissionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass miningStructuresTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass modelingFlagsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass modelingFlagsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass nameColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass namingTemplateTranslationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass notifyTableChangeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass notTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass objectEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass objectReferenceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass objectTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass olapDataSourceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass ordinalTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass outOfLineBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass parallelTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass parametersEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass parametersTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass parameterType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass partitionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass partitionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass permissionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveActionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveCalculationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveHierarchyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveKpiEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveMeasureEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectiveMeasureGroupEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass perspectivesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass predLeafEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass proactiveCachingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass proactiveCachingBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass proactiveCachingIncrementalProcessingBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass proactiveCachingInheritedBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass proactiveCachingObjectNotificationBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass proactiveCachingQueryBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass proactiveCachingTablesBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass processEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass propertiesEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass propertiesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass propertyListEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass pushedDataSourceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass queriesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass queryBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass queryNotificationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass queryNotificationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass referenceMeasureGroupDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass regularMeasureGroupDimensionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass relationalDataSourceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass reportActionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass reportFormatParameterEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass reportFormatParametersTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass reportParameterEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass reportParametersTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass restoreEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass restrictionListTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass restrictionsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass resultTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass returnEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass returnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass roleEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass rolesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass rolesType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass rollbackTransactionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass rootTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass rowBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass scalarMiningStructureColumnEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass serverEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass serverPropertiesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass serverPropertyEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass sessionTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass setAuthContextEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass skippedLevelsColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass sourceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass sourcesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass standardActionEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass statementEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass storageModeTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass storageModeType2EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass storageModeType3EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass subscribeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass synchronizeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass tableBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass tableMiningStructureColumnEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass tableNotificationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass tableNotificationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass tableNotificationsType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass tabularBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass targetTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass targetType1EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass timeAttributeBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass timeBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass traceEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass traceColumnsEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass traceDefinitionProviderInfoEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass traceEventEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass traceEventCategoriesEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass traceFilterEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass tracesTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass translationEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass translationInsertUpdateEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass translationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass translationTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass typeType6EClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass unaryExprEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass unaryOperatorColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass unknownMemberTranslationsTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass unknownMemberTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass unlockEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass unsubscribeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass updateEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass updateCellsEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass userDefinedGroupBindingEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass valueColumnTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass versionTypeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass whereEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EClass whereAttributeEClass = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum accessTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum aggregateFunctionTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum aggregationFunctionTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum aggregationStorageTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum aggregationTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum aggregationUsageTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum algorithmTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum allMemberAggregationUsageTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum attributeHierarchyOptimizedStateTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum attributeHierarchyOptimizedStateType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum axisFormatTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum cacheModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum calculationTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum cardinalityTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum cardinalityType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum catalogLocationTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum connectionStringSecurityTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum contentTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum contentType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum cubeStorageModeEnumTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dataAggregationTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dataTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dataTypeType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropConcatNullBehaviorTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropMsmdAutoExistsTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropMsmdMDXCompatibilityTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropMsmdSubqueriesTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropNullCollationTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropOutputParameterAvailableTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropPersistentIdTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropPrepareAbortBehaviorTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropPrepareCommitBehaviorTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dbpropQuotedIdentifierCaseTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dialectTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dimensionAttributeTypeEnumTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum dimensionCurrentStorageModeEnumTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum discretizationMethodTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum durabilityGuaranteeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum editionTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum fiscalYearNameTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum formatTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum formatType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum groupingBehaviorTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum hideMemberIfTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum hierarchyUniqueNameStyleTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum instanceSelectionTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum invalidXmlCharactersTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum invocationTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum invocationType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum invocationType2EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum isolationTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum keyDuplicateTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum keyErrorActionTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum keyErrorLimitActionTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum keyNotFoundTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum materializationTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdpropAggregateCellUpdateTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdpropFlatteningSupportTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdpropMdxNonMeasureExpressionsTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdpropMdxRangeRowsetTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdpropMdxSlicerTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdxMissingMemberModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdxMissingMemberModeType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum mdxSupportTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum measureGroupStorageModeEnumTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum membersWithDataTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum memberUniqueNameStyleTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum memoryLockingModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum modeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum notificationTechniqueTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum notificationTechniqueType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum nullKeyConvertedToUnknownTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum nullKeyNotAllowedTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum nullProcessingTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum objectExpansionEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum onlineModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum optimizedStateTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum optionalityTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum orderByTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum overrideBehaviorTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum parameterTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum parameterType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum partitionCurrentStorageModeEnumTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum partitionModesEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum partitionStorageModeEnumTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum permissionSetTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum persistenceTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum persistenceType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum processingGroupTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum processingModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum processingModeType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum processingModeType2EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum processingModeType3EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum processingStateTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum providerTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum readDefinitionTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum readSourceDataTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum readTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum readType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum refreshPolicyTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum refreshPolicyType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum relationshipTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum reportingFirstWeekOfMonthTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum reportingWeekToMonthPatternTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum requestTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum responseEncodingTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum retentionModesEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum rootMemberIfTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum safetyOptionsTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum scopeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum scriptCacheProcessingModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum scriptErrorHandlingModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum securedCellValueTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum securityTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum securityType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum shareDimensionStorageTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum sqlQueryModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateSupportTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateType2EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateType3EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateType4EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateType5EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum stateType6EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum storageModeType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum synchronizeSecurityTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum targetTypeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum targetTypeType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum targetTypeType2EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum trimmingTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType2EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType3EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType4EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType5EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType7EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType8EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType9EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType10EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType11EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType12EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum typeType13EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum unknownMemberEnumTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum updateIsolationLevelTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum usageTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum usageType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum valuensTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum valuensType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum valuensType2EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum valuensType3EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum valuensType4EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum valuensType5EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum valuensType6EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum visibilityTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum visualModeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeBackTableCreationEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeTypeEEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeType1EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeType2EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeType3EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeType4EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeType5EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EEnum writeType6EEnum = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType accessTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType aggregateFunctionTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType aggregationFunctionTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType aggregationStorageTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType aggregationTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType aggregationUsageTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType algorithmTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType allMemberAggregationUsageTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType attributeHierarchyOptimizedStateTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType attributeHierarchyOptimizedStateTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType axisFormatTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType cacheModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType calculationTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType cardinalityTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType cardinalityTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType catalogLocationTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType connectionStringSecurityTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType contentTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType contentTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType cubeStorageModeEnumTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dataAggregationTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dataTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dataTypeTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropConcatNullBehaviorTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropMsmdAutoExistsTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropMsmdCompareCaseSensitiveStringFlagsTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropMsmdMDXCompatibilityTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropMsmdSubqueriesTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropNullCollationTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropOutputParameterAvailableTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropPersistentIdTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropPrepareAbortBehaviorTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropPrepareCommitBehaviorTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dbpropQuotedIdentifierCaseTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dialectTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dimensionAttributeTypeEnumTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType dimensionCurrentStorageModeEnumTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType discretizationMethodTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType durabilityGuaranteeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType editionTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType firstDayOfWeekTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType fiscalFirstDayOfMonthTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType fiscalFirstMonthTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType fiscalYearNameTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType formatTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType formatTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType groupingBehaviorTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType hideMemberIfTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType hierarchyUniqueNameStyleTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType idTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType idType1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType instanceSelectionTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType invalidXmlCharactersTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType invocationTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType invocationTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType invocationTypeObject2EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType isolationTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType keyDuplicateTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType keyErrorActionTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType keyErrorLimitActionTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType keyNotFoundTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType manufacturingExtraMonthQuarterTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType manufacturingFirstMonthTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType manufacturingFirstWeekOfMonthTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType materializationTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdpropAggregateCellUpdateTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdpropFlatteningSupportTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdpropMdxNonMeasureExpressionsTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdpropMdxRangeRowsetTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdpropMdxSlicerTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdxMissingMemberModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdxMissingMemberModeTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType mdxSupportTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType measureGroupStorageModeEnumTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType membersWithDataTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType memberUniqueNameStyleTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType memoryLockingModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType modeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType notificationTechniqueTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType notificationTechniqueTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType nullKeyConvertedToUnknownTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType nullKeyNotAllowedTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType nullProcessingTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType objectExpansionObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType onlineModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType optimizedStateTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType optionalityTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType orderByTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType overrideBehaviorTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType parameterTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType parameterTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType partitionCurrentStorageModeEnumTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType partitionModesObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType partitionStorageModeEnumTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType permissionSetTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType persistenceTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType persistenceTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType processingGroupTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType processingModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType processingModeTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType processingModeTypeObject2EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType processingModeTypeObject3EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType processingStateTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType providerTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType readDefinitionTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType readSourceDataTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType readTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType readTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType refreshPolicyTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType refreshPolicyTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType relationshipTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType reportingFirstMonthTypeEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType reportingFirstWeekOfMonthTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType reportingWeekToMonthPatternTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType requestTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType responseEncodingTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType retentionModesObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType rootMemberIfTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType safetyOptionsTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType scopeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType scriptCacheProcessingModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType scriptErrorHandlingModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType securedCellValueTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType securityTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType securityTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType shareDimensionStorageTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType sqlQueryModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateSupportTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateTypeObject2EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateTypeObject3EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateTypeObject4EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateTypeObject5EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType stateTypeObject6EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType storageModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType synchronizeSecurityTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType targetTypeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType targetTypeTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType targetTypeTypeObject2EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType trimmingTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject2EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject3EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject4EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject5EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject6EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject7EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject8EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject9EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject10EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject11EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType typeTypeObject12EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType unknownMemberEnumTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType updateIsolationLevelTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType usageTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType usageTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType valuensTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType valuensTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType valuensTypeObject2EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType valuensTypeObject3EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType valuensTypeObject4EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType valuensTypeObject5EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType valuensTypeObject6EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType visibilityTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType visualModeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeBackTableCreationObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeTypeObjectEDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeTypeObject1EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeTypeObject2EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeTypeObject3EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeTypeObject4EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeTypeObject5EDataType = null;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private EDataType writeTypeObject6EDataType = null;

	/**
	 * Creates an instance of the model <b>Package</b>, registered with
	 * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
	 * package URI value.
	 * <p>Note: the correct way to create the package is via the static
	 * factory method {@link #init init()}, which also performs
	 * initialization of the package, or returns the registered package,
	 * if one already exists.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.emf.ecore.EPackage.Registry
	 * @see org.eclipse.daanse.xmla.model.ecore.xmla.XmlaPackage#eNS_URI
	 * @see #init()
	 * @generated
	 */
	private XmlaPackageImpl() {
		super(eNS_URI, XmlaFactory.eINSTANCE);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static boolean isInited = false;

	/**
	 * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
	 *
	 * <p>This method is used to initialize {@link XmlaPackage#eINSTANCE} when that field is accessed.
	 * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #eNS_URI
	 * @see #createPackageContents()
	 * @see #initializePackageContents()
	 * @generated
	 */
	public static XmlaPackage init() {
		if (isInited) return (XmlaPackage)EPackage.Registry.INSTANCE.getEPackage(XmlaPackage.eNS_URI);

		// Obtain or create and register package
		Object registeredXmlaPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
		XmlaPackageImpl theXmlaPackage = registeredXmlaPackage instanceof XmlaPackageImpl ? (XmlaPackageImpl)registeredXmlaPackage : new XmlaPackageImpl();

		isInited = true;

		// Initialize simple dependencies
		XMLNamespacePackage.eINSTANCE.eClass();
		XMLTypePackage.eINSTANCE.eClass();

		// Obtain or create and register interdependencies
		Object registeredPackage = EPackage.Registry.INSTANCE.getEPackage(EnginePackage.eNS_URI);
		EnginePackageImpl theEnginePackage = (EnginePackageImpl)(registeredPackage instanceof EnginePackageImpl ? registeredPackage : EnginePackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine100_100Package.eNS_URI);
		Engine100_100PackageImpl theEngine100_100Package = (Engine100_100PackageImpl)(registeredPackage instanceof Engine100_100PackageImpl ? registeredPackage : Engine100_100Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine100Package.eNS_URI);
		Engine100PackageImpl theEngine100Package = (Engine100PackageImpl)(registeredPackage instanceof Engine100PackageImpl ? registeredPackage : Engine100Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine2Package.eNS_URI);
		Engine2PackageImpl theEngine2Package = (Engine2PackageImpl)(registeredPackage instanceof Engine2PackageImpl ? registeredPackage : Engine2Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine200_200Package.eNS_URI);
		Engine200_200PackageImpl theEngine200_200Package = (Engine200_200PackageImpl)(registeredPackage instanceof Engine200_200PackageImpl ? registeredPackage : Engine200_200Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine200Package.eNS_URI);
		Engine200PackageImpl theEngine200Package = (Engine200PackageImpl)(registeredPackage instanceof Engine200PackageImpl ? registeredPackage : Engine200Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine300_300Package.eNS_URI);
		Engine300_300PackageImpl theEngine300_300Package = (Engine300_300PackageImpl)(registeredPackage instanceof Engine300_300PackageImpl ? registeredPackage : Engine300_300Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine300Package.eNS_URI);
		Engine300PackageImpl theEngine300Package = (Engine300PackageImpl)(registeredPackage instanceof Engine300PackageImpl ? registeredPackage : Engine300Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine400Package.eNS_URI);
		Engine400PackageImpl theEngine400Package = (Engine400PackageImpl)(registeredPackage instanceof Engine400PackageImpl ? registeredPackage : Engine400Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine600Package.eNS_URI);
		Engine600PackageImpl theEngine600Package = (Engine600PackageImpl)(registeredPackage instanceof Engine600PackageImpl ? registeredPackage : Engine600Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Engine800Package.eNS_URI);
		Engine800PackageImpl theEngine800Package = (Engine800PackageImpl)(registeredPackage instanceof Engine800PackageImpl ? registeredPackage : Engine800Package.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(ExtPackage.eNS_URI);
		ExtPackageImpl theExtPackage = (ExtPackageImpl)(registeredPackage instanceof ExtPackageImpl ? registeredPackage : ExtPackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(MsxmlaPackage.eNS_URI);
		MsxmlaPackageImpl theMsxmlaPackage = (MsxmlaPackageImpl)(registeredPackage instanceof MsxmlaPackageImpl ? registeredPackage : MsxmlaPackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(SchemaPackage.eNS_URI);
		SchemaPackageImpl theSchemaPackage = (SchemaPackageImpl)(registeredPackage instanceof SchemaPackageImpl ? registeredPackage : SchemaPackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Xmla_emptyPackage.eNS_URI);
		Xmla_emptyPackageImpl theXmla_emptyPackage = (Xmla_emptyPackageImpl)(registeredPackage instanceof Xmla_emptyPackageImpl ? registeredPackage : Xmla_emptyPackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Xmla_exceptionPackage.eNS_URI);
		Xmla_exceptionPackageImpl theXmla_exceptionPackage = (Xmla_exceptionPackageImpl)(registeredPackage instanceof Xmla_exceptionPackageImpl ? registeredPackage : Xmla_exceptionPackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Xmla_mddatasetPackage.eNS_URI);
		Xmla_mddatasetPackageImpl theXmla_mddatasetPackage = (Xmla_mddatasetPackageImpl)(registeredPackage instanceof Xmla_mddatasetPackageImpl ? registeredPackage : Xmla_mddatasetPackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Xmla_multipleresultsPackage.eNS_URI);
		Xmla_multipleresultsPackageImpl theXmla_multipleresultsPackage = (Xmla_multipleresultsPackageImpl)(registeredPackage instanceof Xmla_multipleresultsPackageImpl ? registeredPackage : Xmla_multipleresultsPackage.eINSTANCE);
		registeredPackage = EPackage.Registry.INSTANCE.getEPackage(Xmla_rowsetPackage.eNS_URI);
		Xmla_rowsetPackageImpl theXmla_rowsetPackage = (Xmla_rowsetPackageImpl)(registeredPackage instanceof Xmla_rowsetPackageImpl ? registeredPackage : Xmla_rowsetPackage.eINSTANCE);

		// Create package meta-data objects
		theXmlaPackage.createPackageContents();
		theEnginePackage.createPackageContents();
		theEngine100_100Package.createPackageContents();
		theEngine100Package.createPackageContents();
		theEngine2Package.createPackageContents();
		theEngine200_200Package.createPackageContents();
		theEngine200Package.createPackageContents();
		theEngine300_300Package.createPackageContents();
		theEngine300Package.createPackageContents();
		theEngine400Package.createPackageContents();
		theEngine600Package.createPackageContents();
		theEngine800Package.createPackageContents();
		theExtPackage.createPackageContents();
		theMsxmlaPackage.createPackageContents();
		theSchemaPackage.createPackageContents();
		theXmla_emptyPackage.createPackageContents();
		theXmla_exceptionPackage.createPackageContents();
		theXmla_mddatasetPackage.createPackageContents();
		theXmla_multipleresultsPackage.createPackageContents();
		theXmla_rowsetPackage.createPackageContents();

		// Initialize created meta-data
		theXmlaPackage.initializePackageContents();
		theEnginePackage.initializePackageContents();
		theEngine100_100Package.initializePackageContents();
		theEngine100Package.initializePackageContents();
		theEngine2Package.initializePackageContents();
		theEngine200_200Package.initializePackageContents();
		theEngine200Package.initializePackageContents();
		theEngine300_300Package.initializePackageContents();
		theEngine300Package.initializePackageContents();
		theEngine400Package.initializePackageContents();
		theEngine600Package.initializePackageContents();
		theEngine800Package.initializePackageContents();
		theExtPackage.initializePackageContents();
		theMsxmlaPackage.initializePackageContents();
		theSchemaPackage.initializePackageContents();
		theXmla_emptyPackage.initializePackageContents();
		theXmla_exceptionPackage.initializePackageContents();
		theXmla_mddatasetPackage.initializePackageContents();
		theXmla_multipleresultsPackage.initializePackageContents();
		theXmla_rowsetPackage.initializePackageContents();

		// Register package validator
		EValidator.Registry.INSTANCE.put
			(theXmlaPackage,
			 new EValidator.Descriptor() {
				 public EValidator getEValidator() {
					 return XmlaValidator.INSTANCE;
				 }
			 });

		// Mark meta-data to indicate it can't be changed
		theXmlaPackage.freeze();

		// Update the registry and return the package
		EPackage.Registry.INSTANCE.put(XmlaPackage.eNS_URI, theXmlaPackage);
		return theXmlaPackage;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAccount() {
		return accountEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAccount_AccountType() {
		return (EAttribute)accountEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAccount_AggregationFunction() {
		return (EAttribute)accountEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAccount_Aliases() {
		return (EReference)accountEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAccount_Annotations() {
		return (EReference)accountEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAccountsType() {
		return accountsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAccountsType_Account() {
		return (EReference)accountsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAction() {
		return actionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getActionsType() {
		return actionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getActionsType_Action() {
		return (EReference)actionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getActionsType1() {
		return actionsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getActionsType1_Action() {
		return (EReference)actionsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getActionType() {
		return actionTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getActionType_Module() {
		return (EAttribute)actionTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getActionType_Name() {
		return (EAttribute)actionTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getActionType_Package() {
		return (EAttribute)actionTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregation() {
		return aggregationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregation_ID() {
		return (EAttribute)aggregationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregation_Name() {
		return (EAttribute)aggregationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregation_Dimensions() {
		return (EReference)aggregationEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregation_Annotations() {
		return (EReference)aggregationEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregation_Description() {
		return (EAttribute)aggregationEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationAttribute() {
		return aggregationAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationAttribute_AttributeID() {
		return (EAttribute)aggregationAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationAttribute_Annotations() {
		return (EReference)aggregationAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationDesign() {
		return aggregationDesignEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesign_Name() {
		return (EAttribute)aggregationDesignEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesign_ID() {
		return (EAttribute)aggregationDesignEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesign_CreatedTimestamp() {
		return (EAttribute)aggregationDesignEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesign_LastSchemaUpdate() {
		return (EAttribute)aggregationDesignEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesign_Description() {
		return (EAttribute)aggregationDesignEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDesign_Annotations() {
		return (EReference)aggregationDesignEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesign_EstimatedRows() {
		return (EAttribute)aggregationDesignEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDesign_Dimensions() {
		return (EReference)aggregationDesignEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDesign_Aggregations() {
		return (EReference)aggregationDesignEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesign_EstimatedPerformanceGain() {
		return (EAttribute)aggregationDesignEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationDesignAttribute() {
		return aggregationDesignAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesignAttribute_AttributeID() {
		return (EAttribute)aggregationDesignAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesignAttribute_EstimatedCount() {
		return (EAttribute)aggregationDesignAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationDesignDimension() {
		return aggregationDesignDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDesignDimension_CubeDimensionID() {
		return (EAttribute)aggregationDesignDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDesignDimension_Attributes() {
		return (EReference)aggregationDesignDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDesignDimension_Annotations() {
		return (EReference)aggregationDesignDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationDesignsType() {
		return aggregationDesignsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDesignsType_AggregationDesign() {
		return (EReference)aggregationDesignsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationDimension() {
		return aggregationDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationDimension_CubeDimensionID() {
		return (EAttribute)aggregationDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDimension_Attributes() {
		return (EReference)aggregationDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationDimension_Annotations() {
		return (EReference)aggregationDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationInstance() {
		return aggregationInstanceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationInstance_ID() {
		return (EAttribute)aggregationInstanceEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationInstance_Name() {
		return (EAttribute)aggregationInstanceEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationInstance_AggregationType() {
		return (EAttribute)aggregationInstanceEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstance_Source() {
		return (EReference)aggregationInstanceEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstance_Dimensions() {
		return (EReference)aggregationInstanceEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstance_Measures() {
		return (EReference)aggregationInstanceEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstance_Annotations() {
		return (EReference)aggregationInstanceEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationInstance_Description() {
		return (EAttribute)aggregationInstanceEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationInstanceAttribute() {
		return aggregationInstanceAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationInstanceAttribute_AttributeID() {
		return (EAttribute)aggregationInstanceAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstanceAttribute_KeyColumns() {
		return (EReference)aggregationInstanceAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationInstanceDimension() {
		return aggregationInstanceDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationInstanceDimension_CubeDimensionID() {
		return (EAttribute)aggregationInstanceDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstanceDimension_Attributes() {
		return (EReference)aggregationInstanceDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationInstanceMeasure() {
		return aggregationInstanceMeasureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAggregationInstanceMeasure_MeasureID() {
		return (EAttribute)aggregationInstanceMeasureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstanceMeasure_Source() {
		return (EReference)aggregationInstanceMeasureEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationInstancesType() {
		return aggregationInstancesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationInstancesType_AggregationInstance() {
		return (EReference)aggregationInstancesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAggregationsType() {
		return aggregationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAggregationsType_Aggregation() {
		return (EReference)aggregationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAlgorithmParameter() {
		return algorithmParameterEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAlgorithmParameter_Name() {
		return (EAttribute)algorithmParameterEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAlgorithmParameter_Value() {
		return (EAttribute)algorithmParameterEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAlgorithmParametersType() {
		return algorithmParametersTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAlgorithmParametersType_AlgorithmParameter() {
		return (EReference)algorithmParametersTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAliasesType() {
		return aliasesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAliasesType_Alias() {
		return (EAttribute)aliasesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAllMemberTranslationsType() {
		return allMemberTranslationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAllMemberTranslationsType_AllMemberTranslation() {
		return (EReference)allMemberTranslationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAlter() {
		return alterEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAlter_Object() {
		return (EReference)alterEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAlter_ObjectDefinition() {
		return (EReference)alterEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAlter_AllowCreate() {
		return (EAttribute)alterEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAlter_ObjectExpansion() {
		return (EAttribute)alterEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAlter_Scope() {
		return (EAttribute)alterEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAndOrType() {
		return andOrTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAndOrType_Group() {
		return (EAttribute)andOrTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_Not() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_Or() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_And() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_Equal() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_NotEqual() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_Less() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_LessOrEqual() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_Greater() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_GreaterOrEqual() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_Like() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAndOrType_NotLike() {
		return (EReference)andOrTypeEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAnnotation() {
		return annotationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAnnotation_Name() {
		return (EAttribute)annotationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAnnotation_Visibility() {
		return (EAttribute)annotationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAnnotation_Value() {
		return (EReference)annotationEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAnnotationsType() {
		return annotationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAnnotationsType_Annotation() {
		return (EReference)annotationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAssembliesType() {
		return assembliesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAssembliesType_Assembly() {
		return (EReference)assembliesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAssembliesType1() {
		return assembliesType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAssembliesType1_Assembly() {
		return (EReference)assembliesType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAssembly() {
		return assemblyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAssembly_ID() {
		return (EAttribute)assemblyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAssembly_Name() {
		return (EAttribute)assemblyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAssembly_CreatedTimestamp() {
		return (EAttribute)assemblyEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAssembly_LastSchemaUpdate() {
		return (EAttribute)assemblyEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAssembly_Description() {
		return (EAttribute)assemblyEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAssembly_Annotations() {
		return (EReference)assemblyEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAssembly_ImpersonationInfo() {
		return (EReference)assemblyEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttach() {
		return attachEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttach_Folder() {
		return (EAttribute)attachEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttach_Password() {
		return (EAttribute)attachEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttach_AllowOverwrite() {
		return (EAttribute)attachEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttach_ReadWriteMode() {
		return (EAttribute)attachEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributeAllMemberTranslationsType() {
		return attributeAllMemberTranslationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeAllMemberTranslationsType_MemberAllMemberTranslation() {
		return (EReference)attributeAllMemberTranslationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributeBinding() {
		return attributeBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeBinding_AttributeID() {
		return (EAttribute)attributeBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeBinding_Type() {
		return (EAttribute)attributeBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeBinding_Ordinal() {
		return (EAttribute)attributeBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributeInsertUpdate() {
		return attributeInsertUpdateEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeInsertUpdate_AttributeName() {
		return (EAttribute)attributeInsertUpdateEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeInsertUpdate_Name() {
		return (EAttribute)attributeInsertUpdateEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeInsertUpdate_Keys() {
		return (EReference)attributeInsertUpdateEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeInsertUpdate_Translations() {
		return (EReference)attributeInsertUpdateEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeInsertUpdate_Value() {
		return (EAttribute)attributeInsertUpdateEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeInsertUpdate_CUSTOMROLLUP() {
		return (EAttribute)attributeInsertUpdateEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeInsertUpdate_CUSTOMROLLUPPROPERTIES() {
		return (EAttribute)attributeInsertUpdateEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeInsertUpdate_UNARYOPERATOR() {
		return (EAttribute)attributeInsertUpdateEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeInsertUpdate_SKIPPEDLEVELS() {
		return (EAttribute)attributeInsertUpdateEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributePermission() {
		return attributePermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributePermission_AttributeID() {
		return (EAttribute)attributePermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributePermission_Description() {
		return (EAttribute)attributePermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributePermission_DefaultMember() {
		return (EAttribute)attributePermissionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributePermission_VisualTotals() {
		return (EAttribute)attributePermissionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributePermission_AllowedSet() {
		return (EAttribute)attributePermissionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributePermission_DeniedSet() {
		return (EAttribute)attributePermissionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributePermission_Annotations() {
		return (EReference)attributePermissionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributePermissionsType() {
		return attributePermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributePermissionsType_AttributePermission() {
		return (EReference)attributePermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributePermissionsType1() {
		return attributePermissionsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributePermissionsType1_AttributePermission() {
		return (EReference)attributePermissionsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributeRelationship() {
		return attributeRelationshipEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeRelationship_AttributeID() {
		return (EAttribute)attributeRelationshipEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeRelationship_RelationshipType() {
		return (EAttribute)attributeRelationshipEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeRelationship_Cardinality() {
		return (EAttribute)attributeRelationshipEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeRelationship_Optionality() {
		return (EAttribute)attributeRelationshipEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeRelationship_OverrideBehavior() {
		return (EAttribute)attributeRelationshipEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeRelationship_Annotations() {
		return (EReference)attributeRelationshipEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeRelationship_Name() {
		return (EAttribute)attributeRelationshipEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeRelationship_Visible() {
		return (EAttribute)attributeRelationshipEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeRelationship_Translations() {
		return (EReference)attributeRelationshipEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributeRelationshipsType() {
		return attributeRelationshipsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeRelationshipsType_AttributeRelationship() {
		return (EReference)attributeRelationshipsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType() {
		return attributesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType_Attribute() {
		return (EReference)attributesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType1() {
		return attributesType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType1_Attribute() {
		return (EReference)attributesType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType2() {
		return attributesType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType2_Attribute() {
		return (EReference)attributesType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType3() {
		return attributesType3EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType3_Attribute() {
		return (EReference)attributesType3EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType4() {
		return attributesType4EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType4_Attribute() {
		return (EReference)attributesType4EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType5() {
		return attributesType5EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType5_Attribute() {
		return (EReference)attributesType5EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType6() {
		return attributesType6EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType6_Attribute() {
		return (EReference)attributesType6EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType7() {
		return attributesType7EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType7_Attribute() {
		return (EReference)attributesType7EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributesType8() {
		return attributesType8EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributesType8_Attribute() {
		return (EReference)attributesType8EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getAttributeTranslation() {
		return attributeTranslationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeTranslation_Language() {
		return (EAttribute)attributeTranslationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeTranslation_Caption() {
		return (EAttribute)attributeTranslationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeTranslation_Description() {
		return (EAttribute)attributeTranslationEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeTranslation_DisplayFolder() {
		return (EAttribute)attributeTranslationEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeTranslation_Annotations() {
		return (EReference)attributeTranslationEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getAttributeTranslation_CaptionColumn() {
		return (EReference)attributeTranslationEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getAttributeTranslation_MembersWithDataCaption() {
		return (EAttribute)attributeTranslationEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBackup() {
		return backupEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBackup_Object() {
		return (EReference)backupEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBackup_File() {
		return (EAttribute)backupEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBackup_Security() {
		return (EAttribute)backupEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBackup_ApplyCompression() {
		return (EAttribute)backupEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBackup_AllowOverwrite() {
		return (EAttribute)backupEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBackup_Password() {
		return (EAttribute)backupEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBackup_BackupRemotePartitions() {
		return (EAttribute)backupEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBackup_Locations() {
		return (EReference)backupEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBatch() {
		return batchEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Parallel() {
		return (EReference)batchEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Bindings() {
		return (EReference)batchEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_DataSource() {
		return (EReference)batchEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_DataSourceView() {
		return (EReference)batchEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_ErrorConfiguration() {
		return (EReference)batchEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Create() {
		return (EReference)batchEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Alter() {
		return (EReference)batchEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Delete() {
		return (EReference)batchEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Process() {
		return (EReference)batchEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_MergePartitions() {
		return (EReference)batchEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_DesignAggregations() {
		return (EReference)batchEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_NotifyTableChange() {
		return (EReference)batchEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Insert() {
		return (EReference)batchEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Update() {
		return (EReference)batchEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Drop() {
		return (EReference)batchEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_UpdateCells() {
		return (EReference)batchEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Backup() {
		return (EReference)batchEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Restore() {
		return (EReference)batchEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Synchronize() {
		return (EReference)batchEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Cancel() {
		return (EReference)batchEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_BeginTransaction() {
		return (EReference)batchEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_CommitTransaction() {
		return (EReference)batchEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_RollbackTransaction() {
		return (EReference)batchEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_ClearCache() {
		return (EReference)batchEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Subscribe() {
		return (EReference)batchEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Unsubscribe() {
		return (EReference)batchEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Detach() {
		return (EReference)batchEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Attach() {
		return (EReference)batchEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Lock() {
		return (EReference)batchEClass.getEStructuralFeatures().get(28);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Unlock() {
		return (EReference)batchEClass.getEStructuralFeatures().get(29);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_ImageLoad() {
		return (EReference)batchEClass.getEStructuralFeatures().get(30);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_ImageSave() {
		return (EReference)batchEClass.getEStructuralFeatures().get(31);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_CloneDatabase() {
		return (EReference)batchEClass.getEStructuralFeatures().get(32);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_SetAuthContext() {
		return (EReference)batchEClass.getEStructuralFeatures().get(33);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_DBCC() {
		return (EReference)batchEClass.getEStructuralFeatures().get(34);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBatch_Discover() {
		return (EReference)batchEClass.getEStructuralFeatures().get(35);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBatch_ProcessAffectedObjects() {
		return (EAttribute)batchEClass.getEStructuralFeatures().get(36);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBatch_Transaction() {
		return (EAttribute)batchEClass.getEStructuralFeatures().get(37);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBeginSessionType() {
		return beginSessionTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBeginSessionType_MustUnderstand() {
		return (EAttribute)beginSessionTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBeginTransaction() {
		return beginTransactionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBinding() {
		return bindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBindings() {
		return bindingsEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBindings_Binding() {
		return (EReference)bindingsEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBoolBinop() {
		return boolBinopEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBoolBinop_ColumnID() {
		return (EAttribute)boolBinopEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getBoolBinop_Value() {
		return (EAttribute)boolBinopEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getBooleanExpr() {
		return booleanExprEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_And() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_Or() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_Not() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_Leaf() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_And1() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_Or1() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_Not1() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getBooleanExpr_Leaf1() {
		return (EReference)booleanExprEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCalculatedMeasureBinding() {
		return calculatedMeasureBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculatedMeasureBinding_MeasureName() {
		return (EAttribute)calculatedMeasureBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCalculationPropertiesType() {
		return calculationPropertiesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCalculationPropertiesType_CalculationProperty() {
		return (EReference)calculationPropertiesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCalculationProperty() {
		return calculationPropertyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_CalculationReference() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_CalculationType() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCalculationProperty_Translations() {
		return (EReference)calculationPropertyEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_Description() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_Visible() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_SolveOrder() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_FormatString() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_ForeColor() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_BackColor() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_FontName() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_FontSize() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_FontFlags() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_NonEmptyBehavior() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_AssociatedMeasureGroupID() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_DisplayFolder() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCalculationProperty_Language() {
		return (EAttribute)calculationPropertyEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCalculationProperty_VisualizationProperties() {
		return (EReference)calculationPropertyEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCalculationsType() {
		return calculationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCalculationsType_Calculation() {
		return (EReference)calculationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCancel() {
		return cancelEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCancel_ConnectionID() {
		return (EAttribute)cancelEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCancel_SessionID() {
		return (EAttribute)cancelEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCancel_SPID() {
		return (EAttribute)cancelEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCancel_CancelAssociated() {
		return (EAttribute)cancelEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCell() {
		return cellEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCell_Value() {
		return (EAttribute)cellEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCell_CellOrdinal() {
		return (EAttribute)cellEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCellPermission() {
		return cellPermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCellPermission_Access() {
		return (EAttribute)cellPermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCellPermission_Description() {
		return (EAttribute)cellPermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCellPermission_Expression() {
		return (EAttribute)cellPermissionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCellPermission_Annotations() {
		return (EReference)cellPermissionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCellPermissionsType() {
		return cellPermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCellPermissionsType_CellPermission() {
		return (EReference)cellPermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getClassifiedColumnsType() {
		return classifiedColumnsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getClassifiedColumnsType_ClassifiedColumnID() {
		return (EAttribute)classifiedColumnsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getClearCache() {
		return clearCacheEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getClearCache_Object() {
		return (EReference)clearCacheEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getClearResultType() {
		return clearResultTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getClearResultType_ResultId() {
		return (EAttribute)clearResultTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCloneDatabase() {
		return cloneDatabaseEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCloneDatabase_Object() {
		return (EReference)cloneDatabaseEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCloneDatabase_Target() {
		return (EReference)cloneDatabaseEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getClrAssembly() {
		return clrAssemblyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getClrAssembly_Files() {
		return (EReference)clrAssemblyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getClrAssembly_PermissionSet() {
		return (EAttribute)clrAssemblyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getClrAssemblyFile() {
		return clrAssemblyFileEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getClrAssemblyFile_Name() {
		return (EAttribute)clrAssemblyFileEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getClrAssemblyFile_Type() {
		return (EAttribute)clrAssemblyFileEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getClrAssemblyFile_Data() {
		return (EReference)clrAssemblyFileEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getColumnBinding() {
		return columnBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnBinding_TableID() {
		return (EAttribute)columnBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnBinding_ColumnID() {
		return (EAttribute)columnBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getColumnsType() {
		return columnsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getColumnsType_Column() {
		return (EReference)columnsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getColumnsType1() {
		return columnsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getColumnsType1_Column() {
		return (EReference)columnsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getColumnsType2() {
		return columnsType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getColumnsType2_Column() {
		return (EReference)columnsType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getColumnsType3() {
		return columnsType3EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getColumnsType3_Column() {
		return (EReference)columnsType3EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getColumnsType4() {
		return columnsType4EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getColumnsType4_Column() {
		return (EReference)columnsType4EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getColumnType() {
		return columnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnType_ID() {
		return (EAttribute)columnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnType_Type() {
		return (EAttribute)columnTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnType_Name() {
		return (EAttribute)columnTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnType_Description() {
		return (EAttribute)columnTypeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnType_Filterable() {
		return (EAttribute)columnTypeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnType_Repeatable() {
		return (EAttribute)columnTypeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getColumnType_RepeatedBase() {
		return (EAttribute)columnTypeEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getComAssembly() {
		return comAssemblyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getComAssembly_Source() {
		return (EAttribute)comAssemblyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCommand() {
		return commandEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCommand_Statement() {
		return (EAttribute)commandEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Create() {
		return (EReference)commandEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Alter() {
		return (EReference)commandEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Delete() {
		return (EReference)commandEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Process() {
		return (EReference)commandEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_MergePartitions() {
		return (EReference)commandEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_DesignAggregations() {
		return (EReference)commandEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_ClearCache() {
		return (EReference)commandEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Subscribe() {
		return (EReference)commandEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Unsubscribe() {
		return (EReference)commandEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Cancel() {
		return (EReference)commandEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_BeginTransaction() {
		return (EReference)commandEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_CommitTransaction() {
		return (EReference)commandEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_RollbackTransaction() {
		return (EReference)commandEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Lock() {
		return (EReference)commandEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Unlock() {
		return (EReference)commandEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Backup() {
		return (EReference)commandEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Restore() {
		return (EReference)commandEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Synchronize() {
		return (EReference)commandEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Attach() {
		return (EReference)commandEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Detach() {
		return (EReference)commandEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Insert() {
		return (EReference)commandEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Update() {
		return (EReference)commandEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Drop() {
		return (EReference)commandEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_UpdateCells() {
		return (EReference)commandEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_NotifyTableChange() {
		return (EReference)commandEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_Batch() {
		return (EReference)commandEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_ImageLoad() {
		return (EReference)commandEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_ImageSave() {
		return (EReference)commandEClass.getEStructuralFeatures().get(28);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_CloneDatabase() {
		return (EReference)commandEClass.getEStructuralFeatures().get(29);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_SetAuthContext() {
		return (EReference)commandEClass.getEStructuralFeatures().get(30);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommand_DBCC() {
		return (EReference)commandEClass.getEStructuralFeatures().get(31);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCommandsType() {
		return commandsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCommandsType_Command() {
		return (EReference)commandsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCommitTransaction() {
		return commitTransactionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCommitTransaction_DurabilityGuarantee() {
		return (EAttribute)commitTransactionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getComparatorType() {
		return comparatorTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getComparatorType_Module() {
		return (EAttribute)comparatorTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getComparatorType_Name() {
		return (EAttribute)comparatorTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getComparatorType_Package() {
		return (EAttribute)comparatorTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCreate() {
		return createEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCreate_ParentObject() {
		return (EReference)createEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCreate_ObjectDefinition() {
		return (EReference)createEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCreate_AllowOverwrite() {
		return (EAttribute)createEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCreate_Scope() {
		return (EAttribute)createEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCube() {
		return cubeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_Name() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_ID() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_CreatedTimestamp() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_LastSchemaUpdate() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_Description() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_Annotations() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_Language() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_Collation() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_Translations() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_Dimensions() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_CubePermissions() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_MdxScripts() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_Perspectives() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_State() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_DefaultMeasure() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_Visible() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_MeasureGroups() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_Source() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_AggregationPrefix() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_ProcessingPriority() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_StorageMode() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_ProcessingMode() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_ScriptCacheProcessingMode() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_ScriptErrorHandlingMode() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_DaxOptimizationMode() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_ProactiveCaching() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_Kpis() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_ErrorConfiguration() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCube_Actions() {
		return (EReference)cubeEClass.getEStructuralFeatures().get(28);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_StorageLocation() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(29);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_EstimatedRows() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(30);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCube_LastProcessed() {
		return (EAttribute)cubeEClass.getEStructuralFeatures().get(31);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubeAttribute() {
		return cubeAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttribute_AttributeID() {
		return (EAttribute)cubeAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttribute_AggregationUsage() {
		return (EAttribute)cubeAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttribute_AttributeHierarchyOptimizedState() {
		return (EAttribute)cubeAttributeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttribute_AttributeHierarchyEnabled() {
		return (EAttribute)cubeAttributeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttribute_AttributeHierarchyVisible() {
		return (EAttribute)cubeAttributeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeAttribute_Annotations() {
		return (EReference)cubeAttributeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubeAttributeBinding() {
		return cubeAttributeBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttributeBinding_CubeID() {
		return (EAttribute)cubeAttributeBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttributeBinding_CubeDimensionID() {
		return (EAttribute)cubeAttributeBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttributeBinding_AttributeID() {
		return (EAttribute)cubeAttributeBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeAttributeBinding_Type() {
		return (EAttribute)cubeAttributeBindingEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeAttributeBinding_Ordinal() {
		return (EReference)cubeAttributeBindingEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubeDimension() {
		return cubeDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_ID() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_Name() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_Description() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeDimension_Translations() {
		return (EReference)cubeDimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_DimensionID() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_Visible() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_AllMemberAggregationUsage() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_HierarchyUniqueNameStyle() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimension_MemberUniqueNameStyle() {
		return (EAttribute)cubeDimensionEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeDimension_Attributes() {
		return (EReference)cubeDimensionEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeDimension_Hierarchies() {
		return (EReference)cubeDimensionEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeDimension_Annotations() {
		return (EReference)cubeDimensionEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubeDimensionBinding() {
		return cubeDimensionBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionBinding_DataSourceID() {
		return (EAttribute)cubeDimensionBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionBinding_CubeID() {
		return (EAttribute)cubeDimensionBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionBinding_CubeDimensionID() {
		return (EAttribute)cubeDimensionBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionBinding_Filter() {
		return (EAttribute)cubeDimensionBindingEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubeDimensionPermission() {
		return cubeDimensionPermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionPermission_CubeDimensionID() {
		return (EAttribute)cubeDimensionPermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionPermission_Description() {
		return (EAttribute)cubeDimensionPermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionPermission_Read() {
		return (EAttribute)cubeDimensionPermissionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeDimensionPermission_Write() {
		return (EAttribute)cubeDimensionPermissionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeDimensionPermission_AttributePermissions() {
		return (EReference)cubeDimensionPermissionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeDimensionPermission_Annotations() {
		return (EReference)cubeDimensionPermissionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubeHierarchy() {
		return cubeHierarchyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeHierarchy_HierarchyID() {
		return (EAttribute)cubeHierarchyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeHierarchy_OptimizedState() {
		return (EAttribute)cubeHierarchyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeHierarchy_Visible() {
		return (EAttribute)cubeHierarchyEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubeHierarchy_Enabled() {
		return (EAttribute)cubeHierarchyEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubeHierarchy_Annotations() {
		return (EReference)cubeHierarchyEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubePermission() {
		return cubePermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubePermission_ReadSourceData() {
		return (EAttribute)cubePermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubePermission_DimensionPermissions() {
		return (EReference)cubePermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubePermission_CellPermissions() {
		return (EReference)cubePermissionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCubePermission_Write() {
		return (EAttribute)cubePermissionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubePermissionsType() {
		return cubePermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubePermissionsType_CubePermission() {
		return (EReference)cubePermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCubesType() {
		return cubesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCubesType_Cube() {
		return (EReference)cubesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCurrentStorageModeType() {
		return currentStorageModeTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCurrentStorageModeType_Value() {
		return (EAttribute)currentStorageModeTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCurrentStorageModeType_Valuens() {
		return (EAttribute)currentStorageModeTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCurrentStorageModeType1() {
		return currentStorageModeType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCurrentStorageModeType1_Value() {
		return (EAttribute)currentStorageModeType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getCurrentStorageModeType1_Valuens() {
		return (EAttribute)currentStorageModeType1EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCustomRollupColumnType() {
		return customRollupColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCustomRollupColumnType_Source() {
		return (EReference)customRollupColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getCustomRollupPropertiesColumnType() {
		return customRollupPropertiesColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getCustomRollupPropertiesColumnType_Source() {
		return (EReference)customRollupPropertiesColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDatabase() {
		return databaseEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_Name() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_ID() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_CreatedTimestamp() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_LastSchemaUpdate() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_Description() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_Annotations() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_LastUpdate() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_State() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_ReadWriteMode() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_DbStorageLocation() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_AggregationPrefix() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_ProcessingPriority() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_EstimatedSize() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_LastProcessed() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_Language() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_Collation() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_Visible() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_MasterDataSourceID() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_DataSourceImpersonationInfo() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_Accounts() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_DataSources() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_DataSourceViews() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_Dimensions() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_Cubes() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_MiningStructures() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_Roles() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_Assemblies() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_DatabasePermissions() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabase_Translations() {
		return (EReference)databaseEClass.getEStructuralFeatures().get(28);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_StorageEngineUsed() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(29);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_ImagePath() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(30);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_ImageUrl() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(31);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_ImageUniqueID() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(32);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_ImageVersion() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(33);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_Token() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(34);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_CompatibilityLevel() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(35);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabase_DirectQueryMode() {
		return (EAttribute)databaseEClass.getEStructuralFeatures().get(36);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDatabasePermission() {
		return databasePermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabasePermission_Administer() {
		return (EAttribute)databasePermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDatabasePermission_Write() {
		return (EAttribute)databasePermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDatabasePermissionsType() {
		return databasePermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabasePermissionsType_DatabasePermission() {
		return (EReference)databasePermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDatabasesType() {
		return databasesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDatabasesType_Database() {
		return (EReference)databasesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataBlock() {
		return dataBlockEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataBlock_Block() {
		return (EAttribute)dataBlockEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataItem() {
		return dataItemEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_DataType() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_DataSize() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_MimeType() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_NullProcessing() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_Trimming() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_InvalidXmlCharacters() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_Collation() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataItem_Format() {
		return (EAttribute)dataItemEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataItem_Source() {
		return (EReference)dataItemEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataItem_Annotations() {
		return (EReference)dataItemEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataMiningMeasureGroupDimension() {
		return dataMiningMeasureGroupDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataMiningMeasureGroupDimension_CubeDimensionID() {
		return (EAttribute)dataMiningMeasureGroupDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataMiningMeasureGroupDimension_Annotations() {
		return (EReference)dataMiningMeasureGroupDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataMiningMeasureGroupDimension_Source() {
		return (EReference)dataMiningMeasureGroupDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataMiningMeasureGroupDimension_CaseCubeDimensionID() {
		return (EAttribute)dataMiningMeasureGroupDimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataSource() {
		return dataSourceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_Name() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_ID() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_CreatedTimestamp() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_LastSchemaUpdate() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_Description() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSource_Annotations() {
		return (EReference)dataSourceEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_ManagedProvider() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_ConnectionString() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_ConnectionStringSecurity() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSource_ImpersonationInfo() {
		return (EReference)dataSourceEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_Isolation() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_MaxActiveConnections() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_Timeout() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSource_DataSourcePermissions() {
		return (EReference)dataSourceEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSource_QueryImpersonationInfo() {
		return (EReference)dataSourceEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSource_QueryHints() {
		return (EAttribute)dataSourceEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataSourcePermission() {
		return dataSourcePermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourcePermission_Write() {
		return (EAttribute)dataSourcePermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataSourcePermissionsType() {
		return dataSourcePermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSourcePermissionsType_DataSourcePermission() {
		return (EReference)dataSourcePermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataSourcesType() {
		return dataSourcesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSourcesType_DataSource() {
		return (EReference)dataSourcesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataSourceView() {
		return dataSourceViewEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourceView_Name() {
		return (EAttribute)dataSourceViewEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourceView_ID() {
		return (EAttribute)dataSourceViewEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourceView_CreatedTimestamp() {
		return (EAttribute)dataSourceViewEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourceView_LastSchemaUpdate() {
		return (EAttribute)dataSourceViewEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourceView_Description() {
		return (EAttribute)dataSourceViewEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSourceView_Annotations() {
		return (EReference)dataSourceViewEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourceView_DataSourceID() {
		return (EAttribute)dataSourceViewEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataSourceViewBinding() {
		return dataSourceViewBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataSourceViewBinding_DataSourceViewID() {
		return (EAttribute)dataSourceViewBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataSourceViewsType() {
		return dataSourceViewsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataSourceViewsType_DataSourceView() {
		return (EReference)dataSourceViewsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataType() {
		return dataTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataType_Column() {
		return (EReference)dataTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataType1() {
		return dataType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataType1_EventCategory() {
		return (EReference)dataType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataType2() {
		return dataType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataType2_Name() {
		return (EAttribute)dataType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDataType2_Version() {
		return (EReference)dataType2EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataType2_Type() {
		return (EAttribute)dataType2EClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataType2_Description() {
		return (EAttribute)dataType2EClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDataType3() {
		return dataType3EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDataType3_DataBlock() {
		return (EAttribute)dataType3EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDBCC() {
		return dbccEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDBCC_Object() {
		return (EReference)dbccEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDegenerateMeasureGroupDimension() {
		return degenerateMeasureGroupDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDegenerateMeasureGroupDimension_CubeDimensionID() {
		return (EAttribute)degenerateMeasureGroupDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDegenerateMeasureGroupDimension_Annotations() {
		return (EReference)degenerateMeasureGroupDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDegenerateMeasureGroupDimension_Source() {
		return (EReference)degenerateMeasureGroupDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDegenerateMeasureGroupDimension_ShareDimensionStorage() {
		return (EAttribute)degenerateMeasureGroupDimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDelete() {
		return deleteEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDelete_Object() {
		return (EReference)deleteEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDelete_IgnoreFailures() {
		return (EAttribute)deleteEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDesignAggregations() {
		return designAggregationsEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDesignAggregations_Object() {
		return (EReference)designAggregationsEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDesignAggregations_Time() {
		return (EAttribute)designAggregationsEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDesignAggregations_Steps() {
		return (EAttribute)designAggregationsEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDesignAggregations_Optimization() {
		return (EAttribute)designAggregationsEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDesignAggregations_Storage() {
		return (EAttribute)designAggregationsEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDesignAggregations_Materialize() {
		return (EAttribute)designAggregationsEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDesignAggregations_Queries() {
		return (EReference)designAggregationsEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDetach() {
		return detachEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDetach_Object() {
		return (EReference)detachEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDetach_Password() {
		return (EAttribute)detachEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDimension() {
		return dimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_Name() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_ID() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_CreatedTimestamp() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_LastSchemaUpdate() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_Description() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_Annotations() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_Source() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_MiningModelID() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_Type() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_UnknownMember() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_MdxMissingMemberMode() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_ErrorConfiguration() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_StorageMode() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_WriteEnabled() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_ProcessingPriority() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_LastProcessed() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_DimensionPermissions() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_DependsOnDimensionID() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_Language() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_Collation() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_UnknownMemberName() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_UnknownMemberTranslations() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_State() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_ProactiveCaching() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_ProcessingMode() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_ProcessingGroup() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_CurrentStorageMode() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_Translations() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_Attributes() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(28);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_AttributeAllMemberName() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(29);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_AttributeAllMemberTranslations() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(30);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_Hierarchies() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(31);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_ProcessingRecommendation() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(32);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimension_Relationships() {
		return (EReference)dimensionEClass.getEStructuralFeatures().get(33);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_StringStoresCompatibilityLevel() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(34);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimension_CurrentStringStoresCompatibilityLevel() {
		return (EAttribute)dimensionEClass.getEStructuralFeatures().get(35);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDimensionAttribute() {
		return dimensionAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_Name() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_ID() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_Description() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_Type() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_Usage() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_Source() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_EstimatedCount() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_KeyColumns() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_NameColumn() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_ValueColumn() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_Translations() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_AttributeRelationships() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_DiscretizationMethod() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_DiscretizationBucketCount() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_RootMemberIf() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_OrderBy() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_DefaultMember() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_OrderByAttributeID() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_SkippedLevelsColumn() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_NamingTemplate() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_MembersWithData() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_MembersWithDataCaption() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_NamingTemplateTranslations() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_CustomRollupColumn() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_CustomRollupPropertiesColumn() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_UnaryOperatorColumn() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_AttributeHierarchyOrdered() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_MemberNamesUnique() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_IsAggregatable() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(28);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_AttributeHierarchyEnabled() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(29);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_AttributeHierarchyOptimizedState() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(30);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_AttributeHierarchyVisible() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(31);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_AttributeHierarchyDisplayFolder() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(32);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_KeyUniquenessGuarantee() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(33);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_GroupingBehavior() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(34);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_InstanceSelection() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(35);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_Annotations() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(36);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_ProcessingState() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(37);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_AttributeHierarchyProcessingState() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(38);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionAttribute_VisualizationProperties() {
		return (EReference)dimensionAttributeEClass.getEStructuralFeatures().get(39);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionAttribute_ExtendedType() {
		return (EAttribute)dimensionAttributeEClass.getEStructuralFeatures().get(40);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDimensionBinding() {
		return dimensionBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionBinding_DataSourceID() {
		return (EAttribute)dimensionBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionBinding_DimensionID() {
		return (EAttribute)dimensionBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionBinding_Persistence() {
		return (EAttribute)dimensionBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionBinding_RefreshPolicy() {
		return (EAttribute)dimensionBindingEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionBinding_RefreshInterval() {
		return (EAttribute)dimensionBindingEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDimensionPermission() {
		return dimensionPermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionPermission_AttributePermissions() {
		return (EReference)dimensionPermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionPermission_Write() {
		return (EAttribute)dimensionPermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDimensionPermission_AllowedRowsExpression() {
		return (EAttribute)dimensionPermissionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDimensionPermissionsType() {
		return dimensionPermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionPermissionsType_DimensionPermission() {
		return (EReference)dimensionPermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDimensionPermissionsType1() {
		return dimensionPermissionsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionPermissionsType1_DimensionPermission() {
		return (EReference)dimensionPermissionsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDimensionsType() {
		return dimensionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDimensionsType_Dimension() {
		return (EReference)dimensionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDiscoverResponseType() {
		return discoverResponseTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDiscoverResponseType_Return() {
		return (EReference)discoverResponseTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDiscoverType() {
		return discoverTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDiscoverType_RequestType() {
		return (EAttribute)discoverTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDiscoverType_Restrictions() {
		return (EReference)discoverTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDiscoverType_Properties() {
		return (EReference)discoverTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDocumentRoot() {
		return documentRootEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDocumentRoot_Mixed() {
		return (EAttribute)documentRootEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_XMLNSPrefixMap() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_XSISchemaLocation() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Action() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDocumentRoot_AllowedRowsExpression() {
		return (EAttribute)documentRootEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_BeginSession() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_ClearResult() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Discover() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_DiscoverResponse() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_EndSession() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Event() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_EventSession() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_EventType() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Execute() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_ExecuteResponse() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_KeepResult() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Parameter() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Result() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Session() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDocumentRoot_ShareDimensionStorage() {
		return (EAttribute)documentRootEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDocumentRoot_Target() {
		return (EReference)documentRootEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDrillThroughAction() {
		return drillThroughActionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Name() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_ID() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Caption() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_CaptionIsMdx() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDrillThroughAction_Translations() {
		return (EReference)drillThroughActionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_TargetType() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Target() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Condition() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Type() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Invocation() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Application() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Description() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDrillThroughAction_Annotations() {
		return (EReference)drillThroughActionEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_Default() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDrillThroughAction_Columns() {
		return (EReference)drillThroughActionEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrillThroughAction_MaximumRows() {
		return (EAttribute)drillThroughActionEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDrop() {
		return dropEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDrop_Object() {
		return (EReference)dropEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDrop_DeleteWithDescendants() {
		return (EAttribute)dropEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getDrop_Where() {
		return (EReference)dropEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getDSVTableBinding() {
		return dsvTableBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDSVTableBinding_DataSourceViewID() {
		return (EAttribute)dsvTableBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDSVTableBinding_TableID() {
		return (EAttribute)dsvTableBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getDSVTableBinding_DataEmbeddingStyle() {
		return (EAttribute)dsvTableBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEndOfDataType() {
		return endOfDataTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEndOfDataType_Parameter() {
		return (EAttribute)endOfDataTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEndSessionType() {
		return endSessionTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEndSessionType_MustUnderstand() {
		return (EAttribute)endSessionTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEndSessionType_SessionId() {
		return (EAttribute)endSessionTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getErrorConfiguration() {
		return errorConfigurationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_KeyErrorLimit() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_KeyErrorLogFile() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_KeyErrorAction() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_KeyErrorLimitAction() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_KeyNotFound() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_KeyDuplicate() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_NullKeyConvertedToUnknown() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_NullKeyNotAllowed() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getErrorConfiguration_CalculationError() {
		return (EAttribute)errorConfigurationEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEvent() {
		return eventEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEvent_EventID() {
		return (EAttribute)eventEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEvent_Columns() {
		return (EReference)eventEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventCategoryType() {
		return eventCategoryTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventCategoryType_Name() {
		return (EAttribute)eventCategoryTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventCategoryType_Type() {
		return (EAttribute)eventCategoryTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventCategoryType_Description() {
		return (EAttribute)eventCategoryTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventCategoryType_EventList() {
		return (EReference)eventCategoryTypeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventColumn() {
		return eventColumnEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventColumn_ID() {
		return (EAttribute)eventColumnEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventColumn_EventColumnSubclassList() {
		return (EReference)eventColumnEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventColumnID() {
		return eventColumnIDEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventColumnID_ColumnID() {
		return (EAttribute)eventColumnIDEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventColumnListType() {
		return eventColumnListTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventColumnListType_EventColumn() {
		return (EReference)eventColumnListTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventColumnSubclassListType() {
		return eventColumnSubclassListTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventColumnSubclassListType_EventColumnSubclass() {
		return (EReference)eventColumnSubclassListTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventColumnSubclassType() {
		return eventColumnSubclassTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventColumnSubclassType_ID() {
		return (EAttribute)eventColumnSubclassTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventColumnSubclassType_Name() {
		return (EAttribute)eventColumnSubclassTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventListType() {
		return eventListTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventListType_Event() {
		return (EReference)eventListTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventSessionType() {
		return eventSessionTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_TemplateCategory() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_TemplateName() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_TemplateDescription() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventSessionType_Event() {
		return (EReference)eventSessionTypeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventSessionType_Target() {
		return (EReference)eventSessionTypeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_DispatchLatency() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_EventRetentionMode() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_MaxEventSize() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_MaxMemory() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_MemoryPartitionMode() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_Name() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventSessionType_TrackCausality() {
		return (EAttribute)eventSessionTypeEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventsType() {
		return eventsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventsType_Event() {
		return (EReference)eventsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventType() {
		return eventTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventType_Field() {
		return (EAttribute)eventTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventType_Module() {
		return (EAttribute)eventTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventType_Name() {
		return (EAttribute)eventTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventType_Package() {
		return (EAttribute)eventTypeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventType1() {
		return eventType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventType1_Action() {
		return (EReference)eventType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventType1_Parameter() {
		return (EReference)eventType1EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventType1_Predicate() {
		return (EReference)eventType1EClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventType1_Module() {
		return (EAttribute)eventType1EClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventType1_Name() {
		return (EAttribute)eventType1EClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getEventType1_Package() {
		return (EAttribute)eventType1EClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getEventTypeType() {
		return eventTypeTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventTypeType_Events() {
		return (EReference)eventTypeTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getEventTypeType_XEvent() {
		return (EReference)eventTypeTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getExecuteParameter() {
		return executeParameterEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getExecuteParameter_Name() {
		return (EAttribute)executeParameterEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getExecuteParameter_Value() {
		return (EReference)executeParameterEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getExecuteResponseType() {
		return executeResponseTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getExecuteResponseType_Return() {
		return (EReference)executeResponseTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getExecuteType() {
		return executeTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getExecuteType_Command() {
		return (EReference)executeTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getExecuteType_Properties() {
		return (EReference)executeTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getExecuteType_Parameters() {
		return (EReference)executeTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getFilesType() {
		return filesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getFilesType_File() {
		return (EReference)filesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getFolder() {
		return folderEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getFolder_Original() {
		return (EAttribute)folderEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getFolder_New() {
		return (EAttribute)folderEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getFoldingParameters() {
		return foldingParametersEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getFoldingParameters_FoldIndex() {
		return (EAttribute)foldingParametersEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getFoldingParameters_FoldCount() {
		return (EAttribute)foldingParametersEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getFoldingParameters_FoldMaxCases() {
		return (EAttribute)foldingParametersEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getFoldingParameters_FoldTargetAttribute() {
		return (EAttribute)foldingParametersEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getForeignKeyColumnsType() {
		return foreignKeyColumnsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getForeignKeyColumnsType_ForeignKeyColumn() {
		return (EReference)foreignKeyColumnsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getForeignKeyColumnsType1() {
		return foreignKeyColumnsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getForeignKeyColumnsType1_ForeignKeyColumn() {
		return (EReference)foreignKeyColumnsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getForeignKeyColumnType() {
		return foreignKeyColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getForeignKeyColumnType_Source() {
		return (EReference)foreignKeyColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getGlobalType() {
		return globalTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getGlobalType_Module() {
		return (EAttribute)globalTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getGlobalType_Name() {
		return (EAttribute)globalTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getGlobalType_Package() {
		return (EAttribute)globalTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getGroup() {
		return groupEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getGroup_Name() {
		return (EAttribute)groupEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getGroup_Members() {
		return (EReference)groupEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getGroupsType() {
		return groupsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getGroupsType_Group() {
		return (EReference)groupsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getHierarchiesType() {
		return hierarchiesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchiesType_Hierarchy() {
		return (EReference)hierarchiesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getHierarchiesType1() {
		return hierarchiesType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchiesType1_Hierarchy() {
		return (EReference)hierarchiesType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getHierarchiesType2() {
		return hierarchiesType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchiesType2_Hierarchy() {
		return (EReference)hierarchiesType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getHierarchy() {
		return hierarchyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_Name() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_ID() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_Description() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_ProcessingState() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_StructureType() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_DisplayFolder() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchy_Translations() {
		return (EReference)hierarchyEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_AllMemberName() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchy_AllMemberTranslations() {
		return (EReference)hierarchyEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_MemberNamesUnique() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_MemberKeysUnique() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getHierarchy_AllowDuplicateNames() {
		return (EAttribute)hierarchyEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchy_Levels() {
		return (EReference)hierarchyEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchy_Annotations() {
		return (EReference)hierarchyEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getHierarchy_VisualizationProperties() {
		return (EReference)hierarchyEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getImageLoad() {
		return imageLoadEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_ImagePath() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_ImageUrl() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_ImageUniqueID() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_ImageVersion() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_ReadWriteMode() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_DbStorageLocation() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_DatabaseName() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageLoad_DatabaseID() {
		return (EAttribute)imageLoadEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getImageLoad_Data() {
		return (EReference)imageLoadEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getImageSave() {
		return imageSaveEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getImageSave_Object() {
		return (EReference)imageSaveEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getImageSave_Data() {
		return (EAttribute)imageSaveEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getIncrementalProcessingNotification() {
		return incrementalProcessingNotificationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getIncrementalProcessingNotification_TableID() {
		return (EAttribute)incrementalProcessingNotificationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getIncrementalProcessingNotification_ProcessingQuery() {
		return (EAttribute)incrementalProcessingNotificationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getIncrementalProcessingNotificationsType() {
		return incrementalProcessingNotificationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getIncrementalProcessingNotificationsType_IncrementalProcessingNotification() {
		return (EReference)incrementalProcessingNotificationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getInheritedBinding() {
		return inheritedBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getInsert() {
		return insertEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getInsert_Object() {
		return (EReference)insertEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getInsert_Attributes() {
		return (EReference)insertEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeepResultType() {
		return keepResultTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeyColumnsType() {
		return keyColumnsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKeyColumnsType_KeyColumn() {
		return (EReference)keyColumnsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeyColumnsType1() {
		return keyColumnsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKeyColumnsType1_KeyColumn() {
		return (EReference)keyColumnsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeyColumnsType2() {
		return keyColumnsType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKeyColumnsType2_KeyColumn() {
		return (EReference)keyColumnsType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeyColumnsType3() {
		return keyColumnsType3EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKeyColumnsType3_KeyColumn() {
		return (EReference)keyColumnsType3EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeyColumnsType4() {
		return keyColumnsType4EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKeyColumnsType4_KeyColumn() {
		return (EReference)keyColumnsType4EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeyColumnType() {
		return keyColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKeyColumnType_Source() {
		return (EReference)keyColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeysType() {
		return keysTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKeysType_Key() {
		return (EAttribute)keysTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKeysType1() {
		return keysType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKeysType1_Key() {
		return (EAttribute)keysType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKpi() {
		return kpiEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_Name() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_ID() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_Description() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKpi_Translations() {
		return (EReference)kpiEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_DisplayFolder() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_AssociatedMeasureGroupID() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_Value() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_Goal() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_Status() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_Trend() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_Weight() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_TrendGraphic() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_StatusGraphic() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_CurrentTimeMember() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getKpi_ParentKpiID() {
		return (EAttribute)kpiEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKpi_Annotations() {
		return (EReference)kpiEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKpisType() {
		return kpisTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKpisType_Kpi() {
		return (EReference)kpisTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getKpisType1() {
		return kpisType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getKpisType1_Kpi() {
		return (EReference)kpisType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLevel() {
		return levelEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLevel_Name() {
		return (EAttribute)levelEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLevel_ID() {
		return (EAttribute)levelEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLevel_Description() {
		return (EAttribute)levelEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLevel_SourceAttributeID() {
		return (EAttribute)levelEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLevel_HideMemberIf() {
		return (EAttribute)levelEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getLevel_Translations() {
		return (EReference)levelEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getLevel_Annotations() {
		return (EReference)levelEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLevelsType() {
		return levelsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getLevelsType_Level() {
		return (EReference)levelsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLocation() {
		return locationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLocationBackup() {
		return locationBackupEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLocationBackup_File() {
		return (EAttribute)locationBackupEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLocationBackup_DataSourceID() {
		return (EAttribute)locationBackupEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLocationsType() {
		return locationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getLocationsType_Location() {
		return (EReference)locationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLocationsType1() {
		return locationsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getLocationsType1_Location() {
		return (EReference)locationsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLocationsType2() {
		return locationsType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getLocationsType2_Location() {
		return (EReference)locationsType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getLock() {
		return lockEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLock_ID() {
		return (EAttribute)lockEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getLock_Object() {
		return (EReference)lockEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getLock_Mode() {
		return (EAttribute)lockEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMajorObject() {
		return majorObjectEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_AggregationDesign() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Assembly() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Cube() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Database() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_DataSource() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_DataSourceView() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Dimension() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_MdxScript() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_MeasureGroup() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_MiningModel() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_MiningStructure() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Partition() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Permission() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Perspective() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Role() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Server() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMajorObject_Trace() {
		return (EReference)majorObjectEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getManyToManyMeasureGroupDimension() {
		return manyToManyMeasureGroupDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getManyToManyMeasureGroupDimension_CubeDimensionID() {
		return (EAttribute)manyToManyMeasureGroupDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getManyToManyMeasureGroupDimension_Annotations() {
		return (EReference)manyToManyMeasureGroupDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getManyToManyMeasureGroupDimension_Source() {
		return (EReference)manyToManyMeasureGroupDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getManyToManyMeasureGroupDimension_MeasureGroupID() {
		return (EAttribute)manyToManyMeasureGroupDimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getManyToManyMeasureGroupDimension_DirectSlice() {
		return (EAttribute)manyToManyMeasureGroupDimensionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMdxScript() {
		return mdxScriptEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMdxScript_Name() {
		return (EAttribute)mdxScriptEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMdxScript_ID() {
		return (EAttribute)mdxScriptEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMdxScript_CreatedTimestamp() {
		return (EAttribute)mdxScriptEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMdxScript_LastSchemaUpdate() {
		return (EAttribute)mdxScriptEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMdxScript_Description() {
		return (EAttribute)mdxScriptEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMdxScript_Annotations() {
		return (EReference)mdxScriptEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMdxScript_Commands() {
		return (EReference)mdxScriptEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMdxScript_DefaultScript() {
		return (EAttribute)mdxScriptEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMdxScript_CalculationProperties() {
		return (EReference)mdxScriptEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMdxScriptsType() {
		return mdxScriptsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMdxScriptsType_MdxScript() {
		return (EReference)mdxScriptsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasure() {
		return measureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_Name() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_ID() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_Description() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_AggregateFunction() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_DataType() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasure_Source() {
		return (EReference)measureEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_Visible() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_MeasureExpression() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_DisplayFolder() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_FormatString() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_BackColor() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_ForeColor() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_FontName() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_FontSize() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasure_FontFlags() {
		return (EAttribute)measureEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasure_Translations() {
		return (EReference)measureEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasure_Annotations() {
		return (EReference)measureEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureBinding() {
		return measureBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureBinding_MeasureID() {
		return (EAttribute)measureBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureGroup() {
		return measureGroupEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_Name() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_ID() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_CreatedTimestamp() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_LastSchemaUpdate() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_Description() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_Annotations() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_LastProcessed() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_Translations() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_Type() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_State() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_Measures() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_DataAggregation() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_Source() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_StorageMode() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_StorageLocation() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_IgnoreUnrelatedDimensions() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_ProactiveCaching() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_EstimatedRows() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_ErrorConfiguration() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_EstimatedSize() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_ProcessingMode() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_Dimensions() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_Partitions() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_AggregationPrefix() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroup_ProcessingPriority() {
		return (EAttribute)measureGroupEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroup_AggregationDesigns() {
		return (EReference)measureGroupEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureGroupAttribute() {
		return measureGroupAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupAttribute_AttributeID() {
		return (EAttribute)measureGroupAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroupAttribute_KeyColumns() {
		return (EReference)measureGroupAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupAttribute_Type() {
		return (EAttribute)measureGroupAttributeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroupAttribute_Annotations() {
		return (EReference)measureGroupAttributeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureGroupBinding() {
		return measureGroupBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupBinding_DataSourceID() {
		return (EAttribute)measureGroupBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupBinding_CubeID() {
		return (EAttribute)measureGroupBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupBinding_MeasureGroupID() {
		return (EAttribute)measureGroupBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupBinding_Persistence() {
		return (EAttribute)measureGroupBindingEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupBinding_RefreshPolicy() {
		return (EAttribute)measureGroupBindingEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupBinding_RefreshInterval() {
		return (EAttribute)measureGroupBindingEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupBinding_Filter() {
		return (EAttribute)measureGroupBindingEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureGroupDimension() {
		return measureGroupDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureGroupDimensionBinding() {
		return measureGroupDimensionBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMeasureGroupDimensionBinding_CubeDimensionID() {
		return (EAttribute)measureGroupDimensionBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureGroupsType() {
		return measureGroupsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroupsType_MeasureGroup() {
		return (EReference)measureGroupsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasureGroupsType1() {
		return measureGroupsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasureGroupsType1_MeasureGroup() {
		return (EReference)measureGroupsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasuresType() {
		return measuresTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasuresType_Measure() {
		return (EReference)measuresTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasuresType1() {
		return measuresType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasuresType1_Measure() {
		return (EReference)measuresType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMeasuresType2() {
		return measuresType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMeasuresType2_Measure() {
		return (EReference)measuresType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMember() {
		return memberEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMember_Name() {
		return (EAttribute)memberEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMember_Sid() {
		return (EAttribute)memberEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMembersType() {
		return membersTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMembersType_Member() {
		return (EAttribute)membersTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMembersType1() {
		return membersType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMembersType1_Member() {
		return (EReference)membersType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMergePartitions() {
		return mergePartitionsEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMergePartitions_Sources() {
		return (EReference)mergePartitionsEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMergePartitions_Target() {
		return (EReference)mergePartitionsEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningModel() {
		return miningModelEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_Name() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_ID() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_CreatedTimestamp() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_LastSchemaUpdate() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_Description() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModel_Annotations() {
		return (EReference)miningModelEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_Algorithm() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_LastProcessed() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModel_AlgorithmParameters() {
		return (EReference)miningModelEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_AllowDrillThrough() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModel_Translations() {
		return (EReference)miningModelEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModel_Columns() {
		return (EReference)miningModelEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_State() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModel_FoldingParameters() {
		return (EReference)miningModelEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_Filter() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModel_MiningModelPermissions() {
		return (EReference)miningModelEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_Language() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModel_Collation() {
		return (EAttribute)miningModelEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningModelColumn() {
		return miningModelColumnEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelColumn_Name() {
		return (EAttribute)miningModelColumnEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelColumn_ID() {
		return (EAttribute)miningModelColumnEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelColumn_Description() {
		return (EAttribute)miningModelColumnEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelColumn_SourceColumnID() {
		return (EAttribute)miningModelColumnEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelColumn_Usage() {
		return (EAttribute)miningModelColumnEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelColumn_Filter() {
		return (EAttribute)miningModelColumnEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModelColumn_Translations() {
		return (EReference)miningModelColumnEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModelColumn_Columns() {
		return (EReference)miningModelColumnEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModelColumn_ModelingFlags() {
		return (EReference)miningModelColumnEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModelColumn_Annotations() {
		return (EReference)miningModelColumnEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningModelingFlag() {
		return miningModelingFlagEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelingFlag_ModelingFlag() {
		return (EAttribute)miningModelingFlagEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningModelPermission() {
		return miningModelPermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelPermission_AllowDrillThrough() {
		return (EAttribute)miningModelPermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelPermission_AllowBrowsing() {
		return (EAttribute)miningModelPermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningModelPermission_Write() {
		return (EAttribute)miningModelPermissionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningModelPermissionsType() {
		return miningModelPermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModelPermissionsType_MiningModelPermission() {
		return (EReference)miningModelPermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningModelsType() {
		return miningModelsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningModelsType_MiningModel() {
		return (EReference)miningModelsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningStructure() {
		return miningStructureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_Name() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_ID() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_CreatedTimestamp() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_LastSchemaUpdate() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_Description() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructure_Annotations() {
		return (EReference)miningStructureEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructure_Source() {
		return (EReference)miningStructureEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_LastProcessed() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructure_Translations() {
		return (EReference)miningStructureEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_Language() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_Collation() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructure_ErrorConfiguration() {
		return (EReference)miningStructureEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_CacheMode() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_HoldoutMaxPercent() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_HoldoutMaxCases() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_HoldoutSeed() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_HoldoutActualSize() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructure_Columns() {
		return (EReference)miningStructureEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructure_State() {
		return (EAttribute)miningStructureEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructure_MiningStructurePermissions() {
		return (EReference)miningStructureEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructure_MiningModels() {
		return (EReference)miningStructureEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningStructureColumn() {
		return miningStructureColumnEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningStructurePermission() {
		return miningStructurePermissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructurePermission_AllowDrillThrough() {
		return (EAttribute)miningStructurePermissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getMiningStructurePermission_Write() {
		return (EAttribute)miningStructurePermissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningStructurePermissionsType() {
		return miningStructurePermissionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructurePermissionsType_MiningStructurePermission() {
		return (EReference)miningStructurePermissionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getMiningStructuresType() {
		return miningStructuresTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getMiningStructuresType_MiningStructure() {
		return (EReference)miningStructuresTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getModelingFlagsType() {
		return modelingFlagsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getModelingFlagsType_ModelingFlag() {
		return (EReference)modelingFlagsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getModelingFlagsType1() {
		return modelingFlagsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getModelingFlagsType1_ModelingFlag() {
		return (EReference)modelingFlagsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getNameColumnType() {
		return nameColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNameColumnType_Source() {
		return (EReference)nameColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getNamingTemplateTranslationsType() {
		return namingTemplateTranslationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNamingTemplateTranslationsType_NamingTemplateTranslation() {
		return (EReference)namingTemplateTranslationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getNotifyTableChange() {
		return notifyTableChangeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotifyTableChange_Object() {
		return (EReference)notifyTableChangeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotifyTableChange_TableNotifications() {
		return (EReference)notifyTableChangeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getNotType() {
		return notTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_Not() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_Or() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_And() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_Equal() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_NotEqual() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_Less() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_LessOrEqual() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_Greater() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_GreaterOrEqual() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_Like() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getNotType_NotLike() {
		return (EReference)notTypeEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getObject() {
		return objectEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObject_Database() {
		return (EAttribute)objectEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObject_Cube() {
		return (EAttribute)objectEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObject_Dimension() {
		return (EAttribute)objectEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getObjectReference() {
		return objectReferenceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_ServerID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_DatabaseID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_RoleID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_TraceID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_AssemblyID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_DimensionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_DimensionPermissionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_DataSourceID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_DataSourcePermissionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_DatabasePermissionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_DataSourceViewID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_CubeID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_MiningStructureID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_MeasureGroupID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_PerspectiveID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_CubePermissionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_MdxScriptID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_PartitionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_AggregationDesignID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_MiningModelID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_MiningModelPermissionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getObjectReference_MiningStructurePermissionID() {
		return (EAttribute)objectReferenceEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getObjectType() {
		return objectTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getObjectType_DatabaseID() {
		return (EReference)objectTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getOlapDataSource() {
		return olapDataSourceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getOrdinalType() {
		return ordinalTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOrdinalType_Ordinal() {
		return (EAttribute)ordinalTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getOutOfLineBinding() {
		return outOfLineBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_DatabaseID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_DimensionID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_CubeID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_MeasureGroupID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_PartitionID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_MiningModelID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_MiningStructureID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_AttributeID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_CubeDimensionID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_MeasureID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_ParentColumnID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getOutOfLineBinding_ColumnID() {
		return (EAttribute)outOfLineBindingEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_Source() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_NameColumn() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_SkippedLevelsColumn() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_CustomRollupColumn() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_CustomRollupPropertiesColumn() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_ValueColumn() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_UnaryOperatorColumn() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_KeyColumns() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_ForeignKeyColumns() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getOutOfLineBinding_Translations() {
		return (EReference)outOfLineBindingEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getParallelType() {
		return parallelTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getParallelType_Process() {
		return (EReference)parallelTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getParallelType_MaxParallel() {
		return (EAttribute)parallelTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getParameters() {
		return parametersEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getParameters_Parameter() {
		return (EReference)parametersEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getParametersType() {
		return parametersTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getParametersType_Parameter() {
		return (EReference)parametersTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getParameterType2() {
		return parameterType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getParameterType2_Name() {
		return (EAttribute)parameterType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getParameterType2_Value() {
		return (EAttribute)parameterType2EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPartition() {
		return partitionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_Name() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_ID() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_CreatedTimestamp() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_LastSchemaUpdate() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_Description() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_Annotations() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_Source() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_ProcessingPriority() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_AggregationPrefix() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_StorageMode() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_ProcessingMode() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_ErrorConfiguration() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_StorageLocation() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_RemoteDatasourceID() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_Slice() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_ProactiveCaching() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_Type() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_EstimatedSize() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_EstimatedRows() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_CurrentStorageMode() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_AggregationDesignID() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_AggregationInstances() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartition_AggregationInstanceSource() {
		return (EReference)partitionEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_LastProcessed() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_State() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_StringStoresCompatibilityLevel() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_CurrentStringStoresCompatibilityLevel() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPartition_DirectQueryUsage() {
		return (EAttribute)partitionEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPartitionsType() {
		return partitionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPartitionsType_Partition() {
		return (EReference)partitionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPermission() {
		return permissionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_Name() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_ID() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_CreatedTimestamp() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_LastSchemaUpdate() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_Description() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPermission_Annotations() {
		return (EReference)permissionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_RoleID() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_Process() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_ReadDefinition() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPermission_Read() {
		return (EAttribute)permissionEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspective() {
		return perspectiveEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspective_Name() {
		return (EAttribute)perspectiveEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspective_ID() {
		return (EAttribute)perspectiveEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspective_CreatedTimestamp() {
		return (EAttribute)perspectiveEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspective_LastSchemaUpdate() {
		return (EAttribute)perspectiveEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspective_Description() {
		return (EAttribute)perspectiveEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspective_Annotations() {
		return (EReference)perspectiveEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspective_Translations() {
		return (EReference)perspectiveEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspective_DefaultMeasure() {
		return (EAttribute)perspectiveEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspective_Dimensions() {
		return (EReference)perspectiveEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspective_MeasureGroups() {
		return (EReference)perspectiveEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspective_Calculations() {
		return (EReference)perspectiveEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspective_Kpis() {
		return (EReference)perspectiveEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspective_Actions() {
		return (EReference)perspectiveEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveAction() {
		return perspectiveActionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveAction_ActionID() {
		return (EAttribute)perspectiveActionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveAction_Annotations() {
		return (EReference)perspectiveActionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveAttribute() {
		return perspectiveAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveAttribute_AttributeID() {
		return (EAttribute)perspectiveAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveAttribute_AttributeHierarchyVisible() {
		return (EAttribute)perspectiveAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveAttribute_DefaultMember() {
		return (EAttribute)perspectiveAttributeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveAttribute_Annotations() {
		return (EReference)perspectiveAttributeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveCalculation() {
		return perspectiveCalculationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveCalculation_Name() {
		return (EAttribute)perspectiveCalculationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveCalculation_Type() {
		return (EAttribute)perspectiveCalculationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveCalculation_Annotations() {
		return (EReference)perspectiveCalculationEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveDimension() {
		return perspectiveDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveDimension_CubeDimensionID() {
		return (EAttribute)perspectiveDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveDimension_Attributes() {
		return (EReference)perspectiveDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveDimension_Hierarchies() {
		return (EReference)perspectiveDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveDimension_Annotations() {
		return (EReference)perspectiveDimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveHierarchy() {
		return perspectiveHierarchyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveHierarchy_HierarchyID() {
		return (EAttribute)perspectiveHierarchyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveHierarchy_Annotations() {
		return (EReference)perspectiveHierarchyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveKpi() {
		return perspectiveKpiEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveKpi_KpiID() {
		return (EAttribute)perspectiveKpiEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveKpi_Annotations() {
		return (EReference)perspectiveKpiEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveMeasure() {
		return perspectiveMeasureEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveMeasure_MeasureID() {
		return (EAttribute)perspectiveMeasureEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveMeasure_Annotations() {
		return (EReference)perspectiveMeasureEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectiveMeasureGroup() {
		return perspectiveMeasureGroupEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPerspectiveMeasureGroup_MeasureGroupID() {
		return (EAttribute)perspectiveMeasureGroupEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveMeasureGroup_Measures() {
		return (EReference)perspectiveMeasureGroupEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectiveMeasureGroup_Annotations() {
		return (EReference)perspectiveMeasureGroupEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPerspectivesType() {
		return perspectivesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPerspectivesType_Perspective() {
		return (EReference)perspectivesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPredLeaf() {
		return predLeafEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPredLeaf_Comparator() {
		return (EReference)predLeafEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPredLeaf_Event() {
		return (EReference)predLeafEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPredLeaf_Global() {
		return (EReference)predLeafEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPredLeaf_Value() {
		return (EReference)predLeafEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProactiveCaching() {
		return proactiveCachingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCaching_OnlineMode() {
		return (EAttribute)proactiveCachingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCaching_AggregationStorage() {
		return (EAttribute)proactiveCachingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProactiveCaching_Source() {
		return (EReference)proactiveCachingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCaching_SilenceInterval() {
		return (EAttribute)proactiveCachingEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCaching_Latency() {
		return (EAttribute)proactiveCachingEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCaching_SilenceOverrideInterval() {
		return (EAttribute)proactiveCachingEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCaching_ForceRebuildInterval() {
		return (EAttribute)proactiveCachingEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCaching_Enabled() {
		return (EAttribute)proactiveCachingEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProactiveCachingBinding() {
		return proactiveCachingBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProactiveCachingIncrementalProcessingBinding() {
		return proactiveCachingIncrementalProcessingBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCachingIncrementalProcessingBinding_RefreshInterval() {
		return (EAttribute)proactiveCachingIncrementalProcessingBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProactiveCachingIncrementalProcessingBinding_IncrementalProcessingNotifications() {
		return (EReference)proactiveCachingIncrementalProcessingBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProactiveCachingInheritedBinding() {
		return proactiveCachingInheritedBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCachingInheritedBinding_NotificationTechnique() {
		return (EAttribute)proactiveCachingInheritedBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProactiveCachingObjectNotificationBinding() {
		return proactiveCachingObjectNotificationBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProactiveCachingQueryBinding() {
		return proactiveCachingQueryBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCachingQueryBinding_RefreshInterval() {
		return (EAttribute)proactiveCachingQueryBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProactiveCachingQueryBinding_QueryNotifications() {
		return (EReference)proactiveCachingQueryBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProactiveCachingTablesBinding() {
		return proactiveCachingTablesBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProactiveCachingTablesBinding_NotificationTechnique() {
		return (EAttribute)proactiveCachingTablesBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProactiveCachingTablesBinding_TableNotifications() {
		return (EReference)proactiveCachingTablesBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProcess() {
		return processEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProcess_Type() {
		return (EAttribute)processEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProcess_Object() {
		return (EReference)processEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProcess_Bindings() {
		return (EReference)processEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProcess_DataSource() {
		return (EReference)processEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProcess_DataSourceView() {
		return (EReference)processEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProcess_ErrorConfiguration() {
		return (EReference)processEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getProcess_WriteBackTableCreation() {
		return (EAttribute)processEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getProperties() {
		return propertiesEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getProperties_PropertyList() {
		return (EReference)propertiesEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPropertiesType() {
		return propertiesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPropertiesType_PropertyList() {
		return (EReference)propertiesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPropertyList() {
		return propertyListEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DataSourceInfo() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Timeout() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_UserName() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Password() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_LocaleIdentifier() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Catalog() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_StateSupport() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Content() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Format() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_AxisFormat() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_BeginRange() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_EndRange() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MDXSupport() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ProviderName() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ProviderVersion() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DBMSVersion() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ProviderType() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ShowHiddenCubes() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_SQLSupport() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_TransactionDDL() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(19);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MaximumRows() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(20);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Roles() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(21);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_VisualMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(22);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_EffectiveRoles() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(23);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_EffectiveUserName() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(24);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ServerName() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(25);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_CatalogLocation() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(26);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropCatalogTerm() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(27);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropCatalogUsage() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(28);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropColumnDefinition() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(29);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropConcatNullBehavior() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(30);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropDataSourceReadOnly() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(31);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropGroupBy() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(32);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropHeterogeneousTables() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(33);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropIdentifierCase() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(34);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMaxIndexSize() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(35);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMaxOpenChapters() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(36);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMaxRowSize() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(37);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMaxRowSizeIncludeBlob() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(38);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMaxTablesInSelect() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(39);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMultiTableUpdate() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(40);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropNullCollation() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(41);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropOrderByColumnsInSelect() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(42);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropOutputParameterAvailable() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(43);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropPersistentIdType() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(44);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropPrepareAbortBehavior() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(45);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropPrepareCommitBehavior() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(46);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropProcedureTerm() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(47);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropQuotedIdentifierCase() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(48);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropSchemaUsage() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(49);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropSqlSupport() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(50);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropSubqueries() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(51);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropSupportedTxnDdl() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(52);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxSubqueries() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(53);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropSupportedTxnIsoLevels() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(54);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropSupportedTxnIsoRetain() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(55);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropTableTerm() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(56);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropAggregateCellUpdate() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(57);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropAxes() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(58);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropFlatteningSupport() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(59);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxCaseSupport() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(60);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxDescFlags() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(61);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxDrillFunctions() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(62);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxFormulas() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(63);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxJoinCubes() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(64);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxMemberFunctions() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(65);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxNonMeasureExpressions() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(66);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxNumericFunctions() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(67);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxObjQualification() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(68);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxOuterReference() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(69);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxQueryByProperty() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(70);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxRangeRowset() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(71);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxSetFunctions() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(72);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxSlicer() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(73);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxStringCompop() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(74);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropNamedLevels() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(75);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdMDXCompatibility() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(76);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdSQLCompatibility() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(77);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdMDXUniqueNameStyle() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(78);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdCachePolicy() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(79);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdCacheRatio() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(80);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdCacheMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(81);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdCompareCaseSensitiveStringFlags() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(82);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdCompareCaseNotSensitiveStringFlags() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(83);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdFlattened2() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(84);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropInitMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(85);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_SspropInitAppName() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(86);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_SspropInitWsid() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(87);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_SspropInitPacketsize() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(88);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ReadOnlySession() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(89);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_SecuredCellValue() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(90);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_NonEmptyThreshold() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(91);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_SafetyOptions() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(92);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdCacheRatio2() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(93);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdUseFormulaCache() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(94);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdDynamicDebugLimit() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(95);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdDebugMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(96);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Dialect() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(97);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ImpactAnalysis() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(98);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_SQLQueryMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(99);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ClientProcessID() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(100);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_Cube() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(101);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ReturnCellProperties() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(102);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_CommitTimeout() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(103);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ForceCommitTimeout() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(104);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ExecutionMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(105);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_RealTimeOlap() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(106);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdxMissingMemberMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(107);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxNamedSets() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(108);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdSubqueries() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(109);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdAutoExists() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(110);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_CustomData() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(111);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DisablePrefetchFacts() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(112);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_UpdateIsolationLevel() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(113);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdErrorMessageMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(114);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MdpropMdxDdlExtensions() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(115);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ResponseEncoding() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(116);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_MemoryLockingMode() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(117);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdOptimizeResponse() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(118);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdActivityID() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(119);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdRequestID() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(120);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ReturnAffectedObjects() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(121);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_DbpropMsmdRequestMemoryLimit() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(122);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getPropertyList_ApplicationContext() {
		return (EAttribute)propertyListEClass.getEStructuralFeatures().get(123);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getPushedDataSource() {
		return pushedDataSourceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPushedDataSource_Root() {
		return (EReference)pushedDataSourceEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getPushedDataSource_EndOfData() {
		return (EReference)pushedDataSourceEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getQueriesType() {
		return queriesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getQueriesType_Query() {
		return (EAttribute)queriesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getQueryBinding() {
		return queryBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getQueryBinding_DataSourceID() {
		return (EAttribute)queryBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getQueryBinding_QueryDefinition() {
		return (EAttribute)queryBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getQueryNotification() {
		return queryNotificationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getQueryNotification_Query() {
		return (EAttribute)queryNotificationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getQueryNotificationsType() {
		return queryNotificationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getQueryNotificationsType_QueryNotification() {
		return (EReference)queryNotificationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReferenceMeasureGroupDimension() {
		return referenceMeasureGroupDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReferenceMeasureGroupDimension_CubeDimensionID() {
		return (EAttribute)referenceMeasureGroupDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReferenceMeasureGroupDimension_Annotations() {
		return (EReference)referenceMeasureGroupDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReferenceMeasureGroupDimension_Source() {
		return (EReference)referenceMeasureGroupDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReferenceMeasureGroupDimension_IntermediateCubeDimensionID() {
		return (EAttribute)referenceMeasureGroupDimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReferenceMeasureGroupDimension_IntermediateGranularityAttributeID() {
		return (EAttribute)referenceMeasureGroupDimensionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReferenceMeasureGroupDimension_Materialization() {
		return (EAttribute)referenceMeasureGroupDimensionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReferenceMeasureGroupDimension_ProcessingState() {
		return (EAttribute)referenceMeasureGroupDimensionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRegularMeasureGroupDimension() {
		return regularMeasureGroupDimensionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRegularMeasureGroupDimension_CubeDimensionID() {
		return (EAttribute)regularMeasureGroupDimensionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRegularMeasureGroupDimension_Annotations() {
		return (EReference)regularMeasureGroupDimensionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRegularMeasureGroupDimension_Source() {
		return (EReference)regularMeasureGroupDimensionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRegularMeasureGroupDimension_Cardinality() {
		return (EAttribute)regularMeasureGroupDimensionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRegularMeasureGroupDimension_Attributes() {
		return (EReference)regularMeasureGroupDimensionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRelationalDataSource() {
		return relationalDataSourceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReportAction() {
		return reportActionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Name() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_ID() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Caption() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_CaptionIsMdx() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReportAction_Translations() {
		return (EReference)reportActionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_TargetType() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Target() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Condition() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Type() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Invocation() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Application() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Description() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReportAction_Annotations() {
		return (EReference)reportActionEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_ReportServer() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportAction_Path() {
		return (EAttribute)reportActionEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReportAction_ReportParameters() {
		return (EReference)reportActionEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReportAction_ReportFormatParameters() {
		return (EReference)reportActionEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReportFormatParameter() {
		return reportFormatParameterEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportFormatParameter_Name() {
		return (EAttribute)reportFormatParameterEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportFormatParameter_Value() {
		return (EAttribute)reportFormatParameterEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReportFormatParametersType() {
		return reportFormatParametersTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReportFormatParametersType_ReportFormatParameter() {
		return (EReference)reportFormatParametersTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReportParameter() {
		return reportParameterEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportParameter_Name() {
		return (EAttribute)reportParameterEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getReportParameter_Value() {
		return (EAttribute)reportParameterEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReportParametersType() {
		return reportParametersTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReportParametersType_ReportParameter() {
		return (EReference)reportParametersTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRestore() {
		return restoreEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_DatabaseName() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_DatabaseID() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_File() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_Security() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_AllowOverwrite() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_Password() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_DbStorageLocation() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestore_ReadWriteMode() {
		return (EAttribute)restoreEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRestore_Locations() {
		return (EReference)restoreEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRestrictionListType() {
		return restrictionListTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRestrictionListType_Any() {
		return (EAttribute)restrictionListTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRestrictionsType() {
		return restrictionsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRestrictionsType_RestrictionList() {
		return (EReference)restrictionsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getResultType() {
		return resultTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getResultType_ResultId() {
		return (EAttribute)resultTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReturn() {
		return returnEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReturn_Root() {
		return (EReference)returnEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReturn_Root1() {
		return (EReference)returnEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReturn_Root2() {
		return (EReference)returnEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReturn_Results() {
		return (EReference)returnEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getReturnType() {
		return returnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getReturnType_Root() {
		return (EReference)returnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRole() {
		return roleEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRole_Name() {
		return (EAttribute)roleEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRole_ID() {
		return (EAttribute)roleEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRole_CreatedTimestamp() {
		return (EAttribute)roleEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRole_LastSchemaUpdate() {
		return (EAttribute)roleEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRole_Description() {
		return (EAttribute)roleEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRole_Annotations() {
		return (EReference)roleEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRole_Members() {
		return (EReference)roleEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRolesType() {
		return rolesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRolesType_Role() {
		return (EReference)rolesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRolesType1() {
		return rolesType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getRolesType1_Role() {
		return (EReference)rolesType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRollbackTransaction() {
		return rollbackTransactionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRootType() {
		return rootTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRootType_Parameter() {
		return (EAttribute)rootTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getRowBinding() {
		return rowBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getRowBinding_TableID() {
		return (EAttribute)rowBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getScalarMiningStructureColumn() {
		return scalarMiningStructureColumnEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_Name() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_ID() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_Description() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_Type() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getScalarMiningStructureColumn_Annotations() {
		return (EReference)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_IsKey() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getScalarMiningStructureColumn_Source() {
		return (EReference)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_Distribution() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getScalarMiningStructureColumn_ModelingFlags() {
		return (EReference)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_Content() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getScalarMiningStructureColumn_ClassifiedColumns() {
		return (EReference)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_DiscretizationMethod() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getScalarMiningStructureColumn_DiscretizationBucketCount() {
		return (EAttribute)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getScalarMiningStructureColumn_KeyColumns() {
		return (EReference)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getScalarMiningStructureColumn_NameColumn() {
		return (EReference)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getScalarMiningStructureColumn_Translations() {
		return (EReference)scalarMiningStructureColumnEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getServer() {
		return serverEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_Name() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_ID() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_CreatedTimestamp() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_LastSchemaUpdate() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_Description() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getServer_Annotations() {
		return (EReference)serverEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_ProductName() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_Edition() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_EditionID() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_Version() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_ServerMode() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_ProductLevel() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_DefaultCompatibilityLevel() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServer_SupportedCompatibilityLevels() {
		return (EAttribute)serverEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getServer_Databases() {
		return (EReference)serverEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getServer_Assemblies() {
		return (EReference)serverEClass.getEStructuralFeatures().get(15);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getServer_Traces() {
		return (EReference)serverEClass.getEStructuralFeatures().get(16);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getServer_Roles() {
		return (EReference)serverEClass.getEStructuralFeatures().get(17);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getServer_ServerProperties() {
		return (EReference)serverEClass.getEStructuralFeatures().get(18);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getServerPropertiesType() {
		return serverPropertiesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getServerPropertiesType_ServerProperty() {
		return (EReference)serverPropertiesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getServerProperty() {
		return serverPropertyEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServerProperty_Name() {
		return (EAttribute)serverPropertyEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServerProperty_Value() {
		return (EAttribute)serverPropertyEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServerProperty_RequiresRestart() {
		return (EAttribute)serverPropertyEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServerProperty_PendingValue() {
		return (EAttribute)serverPropertyEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServerProperty_DefaultValue() {
		return (EAttribute)serverPropertyEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServerProperty_DisplayFlag() {
		return (EAttribute)serverPropertyEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getServerProperty_Type() {
		return (EAttribute)serverPropertyEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getSessionType() {
		return sessionTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSessionType_MustUnderstand() {
		return (EAttribute)sessionTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSessionType_SessionId() {
		return (EAttribute)sessionTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getSetAuthContext() {
		return setAuthContextEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSetAuthContext_Token() {
		return (EAttribute)setAuthContextEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSetAuthContext_DatabaseID() {
		return (EAttribute)setAuthContextEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getSkippedLevelsColumnType() {
		return skippedLevelsColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getSkippedLevelsColumnType_Source() {
		return (EReference)skippedLevelsColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getSource() {
		return sourceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getSource_Object() {
		return (EReference)sourceEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSource_ConnectionString() {
		return (EAttribute)sourceEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getSourcesType() {
		return sourcesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getSourcesType_Source() {
		return (EReference)sourcesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getStandardAction() {
		return standardActionEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Name() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_ID() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Caption() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_CaptionIsMdx() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getStandardAction_Translations() {
		return (EReference)standardActionEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_TargetType() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Target() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Condition() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Type() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Invocation() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Application() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Description() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getStandardAction_Annotations() {
		return (EReference)standardActionEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStandardAction_Expression() {
		return (EAttribute)standardActionEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getStatement() {
		return statementEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStatement_Statement() {
		return (EAttribute)statementEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getStorageModeType() {
		return storageModeTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStorageModeType_Value() {
		return (EAttribute)storageModeTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStorageModeType_Valuens() {
		return (EAttribute)storageModeTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getStorageModeType2() {
		return storageModeType2EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStorageModeType2_Value() {
		return (EAttribute)storageModeType2EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStorageModeType2_Valuens() {
		return (EAttribute)storageModeType2EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getStorageModeType3() {
		return storageModeType3EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStorageModeType3_Value() {
		return (EAttribute)storageModeType3EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getStorageModeType3_Valuens() {
		return (EAttribute)storageModeType3EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getSubscribe() {
		return subscribeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getSubscribe_Object() {
		return (EReference)subscribeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSubscribe_SubscriptionId() {
		return (EAttribute)subscribeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getSynchronize() {
		return synchronizeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getSynchronize_Source() {
		return (EReference)synchronizeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSynchronize_SynchronizeSecurity() {
		return (EAttribute)synchronizeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSynchronize_ApplyCompression() {
		return (EAttribute)synchronizeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getSynchronize_DbStorageLocation() {
		return (EAttribute)synchronizeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getSynchronize_Locations() {
		return (EReference)synchronizeEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTableBinding() {
		return tableBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTableBinding_DataSourceID() {
		return (EAttribute)tableBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTableBinding_DbTableName() {
		return (EAttribute)tableBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTableBinding_DbSchemaName() {
		return (EAttribute)tableBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTableMiningStructureColumn() {
		return tableMiningStructureColumnEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTableMiningStructureColumn_ForeignKeyColumns() {
		return (EReference)tableMiningStructureColumnEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTableMiningStructureColumn_SourceMeasureGroup() {
		return (EReference)tableMiningStructureColumnEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTableMiningStructureColumn_Columns() {
		return (EReference)tableMiningStructureColumnEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTableMiningStructureColumn_Translations() {
		return (EReference)tableMiningStructureColumnEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTableNotification() {
		return tableNotificationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTableNotification_DbTableName() {
		return (EAttribute)tableNotificationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTableNotification_DbSchemaName() {
		return (EAttribute)tableNotificationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTableNotificationsType() {
		return tableNotificationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTableNotificationsType_TableNotification() {
		return (EReference)tableNotificationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTableNotificationsType1() {
		return tableNotificationsType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTableNotificationsType1_TableNotification() {
		return (EReference)tableNotificationsType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTabularBinding() {
		return tabularBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTargetType() {
		return targetTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTargetType_Parameter() {
		return (EReference)targetTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTargetType_Module() {
		return (EAttribute)targetTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTargetType_Name() {
		return (EAttribute)targetTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTargetType_Package() {
		return (EAttribute)targetTypeEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTargetType1() {
		return targetType1EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTargetType1_DbStorageLocation() {
		return (EAttribute)targetType1EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTargetType1_DatabaseName() {
		return (EAttribute)targetType1EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTargetType1_DatabaseID() {
		return (EAttribute)targetType1EClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTimeAttributeBinding() {
		return timeAttributeBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTimeBinding() {
		return timeBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_CalendarStartDate() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_CalendarEndDate() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_FirstDayOfWeek() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_CalendarLanguage() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_FiscalFirstMonth() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_FiscalFirstDayOfMonth() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_FiscalYearName() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_ReportingFirstMonth() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_ReportingFirstWeekOfMonth() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_ReportingWeekToMonthPattern() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_ManufacturingFirstMonth() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_ManufacturingFirstWeekOfMonth() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTimeBinding_ManufacturingExtraMonthQuarter() {
		return (EAttribute)timeBindingEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTrace() {
		return traceEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_Name() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_ID() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_CreatedTimestamp() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_LastSchemaUpdate() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_Description() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTrace_Annotations() {
		return (EReference)traceEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_LogFileName() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_LogFileAppend() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_LogFileSize() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_Audit() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_LogFileRollover() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_AutoRestart() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(11);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTrace_StopTime() {
		return (EAttribute)traceEClass.getEStructuralFeatures().get(12);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTrace_Filter() {
		return (EReference)traceEClass.getEStructuralFeatures().get(13);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTrace_EventType() {
		return (EReference)traceEClass.getEStructuralFeatures().get(14);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTraceColumns() {
		return traceColumnsEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceColumns_Data() {
		return (EReference)traceColumnsEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTraceDefinitionProviderInfo() {
		return traceDefinitionProviderInfoEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceDefinitionProviderInfo_Data() {
		return (EReference)traceDefinitionProviderInfoEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTraceEvent() {
		return traceEventEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTraceEvent_ID() {
		return (EAttribute)traceEventEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTraceEvent_Name() {
		return (EAttribute)traceEventEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTraceEvent_Description() {
		return (EAttribute)traceEventEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceEvent_EventColumnList() {
		return (EReference)traceEventEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTraceEventCategories() {
		return traceEventCategoriesEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceEventCategories_Data() {
		return (EReference)traceEventCategoriesEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTraceFilter() {
		return traceFilterEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_Not() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_Or() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_And() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_Equal() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_NotEqual() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_Less() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(5);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_LessOrEqual() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_Greater() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(7);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_GreaterOrEqual() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(8);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_Like() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(9);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTraceFilter_NotLike() {
		return (EReference)traceFilterEClass.getEStructuralFeatures().get(10);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTracesType() {
		return tracesTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTracesType_Trace() {
		return (EReference)tracesTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTranslation() {
		return translationEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTranslation_Language() {
		return (EAttribute)translationEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTranslation_Caption() {
		return (EAttribute)translationEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTranslation_Description() {
		return (EAttribute)translationEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTranslation_DisplayFolder() {
		return (EAttribute)translationEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTranslation_Annotations() {
		return (EReference)translationEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTranslationInsertUpdate() {
		return translationInsertUpdateEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTranslationInsertUpdate_Language() {
		return (EAttribute)translationInsertUpdateEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTranslationInsertUpdate_Name() {
		return (EAttribute)translationInsertUpdateEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTranslationsType() {
		return translationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTranslationsType_Translation() {
		return (EReference)translationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTranslationType() {
		return translationTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTranslationType_Language() {
		return (EAttribute)translationTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getTranslationType_Source() {
		return (EReference)translationTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getTypeType6() {
		return typeType6EClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTypeType6_Value() {
		return (EAttribute)typeType6EClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getTypeType6_Valuens() {
		return (EAttribute)typeType6EClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUnaryExpr() {
		return unaryExprEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUnaryExpr_Not() {
		return (EReference)unaryExprEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUnaryExpr_And() {
		return (EReference)unaryExprEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUnaryExpr_Or() {
		return (EReference)unaryExprEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUnaryExpr_Leaf() {
		return (EReference)unaryExprEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUnaryOperatorColumnType() {
		return unaryOperatorColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUnaryOperatorColumnType_Source() {
		return (EReference)unaryOperatorColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUnknownMemberTranslationsType() {
		return unknownMemberTranslationsTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUnknownMemberTranslationsType_UnknownMemberTranslation() {
		return (EReference)unknownMemberTranslationsTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUnknownMemberType() {
		return unknownMemberTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getUnknownMemberType_Value() {
		return (EAttribute)unknownMemberTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getUnknownMemberType_Valuens() {
		return (EAttribute)unknownMemberTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUnlock() {
		return unlockEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getUnlock_ID() {
		return (EAttribute)unlockEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUnsubscribe() {
		return unsubscribeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getUnsubscribe_SubscriptionId() {
		return (EAttribute)unsubscribeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUpdate() {
		return updateEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUpdate_Object() {
		return (EReference)updateEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUpdate_Attributes() {
		return (EReference)updateEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getUpdate_MoveWithDescendants() {
		return (EAttribute)updateEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getUpdate_MoveToRoot() {
		return (EAttribute)updateEClass.getEStructuralFeatures().get(3);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUpdate_Where() {
		return (EReference)updateEClass.getEStructuralFeatures().get(4);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUpdateCells() {
		return updateCellsEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUpdateCells_Cell() {
		return (EReference)updateCellsEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getUserDefinedGroupBinding() {
		return userDefinedGroupBindingEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getUserDefinedGroupBinding_AttributeID() {
		return (EAttribute)userDefinedGroupBindingEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getUserDefinedGroupBinding_Groups() {
		return (EReference)userDefinedGroupBindingEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getValueColumnType() {
		return valueColumnTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getValueColumnType_Source() {
		return (EReference)valueColumnTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getVersionType() {
		return versionTypeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getVersionType_Major() {
		return (EAttribute)versionTypeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getVersionType_Minor() {
		return (EAttribute)versionTypeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getVersionType_BuildNumber() {
		return (EAttribute)versionTypeEClass.getEStructuralFeatures().get(2);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getWhere() {
		return whereEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getWhere_Attribute() {
		return (EReference)whereEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EClass getWhereAttribute() {
		return whereAttributeEClass;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EAttribute getWhereAttribute_AttributeName() {
		return (EAttribute)whereAttributeEClass.getEStructuralFeatures().get(0);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EReference getWhereAttribute_Keys() {
		return (EReference)whereAttributeEClass.getEStructuralFeatures().get(1);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAccessType() {
		return accessTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAggregateFunctionType() {
		return aggregateFunctionTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAggregationFunctionType() {
		return aggregationFunctionTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAggregationStorageType() {
		return aggregationStorageTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAggregationTypeType() {
		return aggregationTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAggregationUsageType() {
		return aggregationUsageTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAlgorithmType() {
		return algorithmTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAllMemberAggregationUsageType() {
		return allMemberAggregationUsageTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAttributeHierarchyOptimizedStateType() {
		return attributeHierarchyOptimizedStateTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAttributeHierarchyOptimizedStateType1() {
		return attributeHierarchyOptimizedStateType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getAxisFormatType() {
		return axisFormatTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getCacheModeType() {
		return cacheModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getCalculationTypeType() {
		return calculationTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getCardinalityType() {
		return cardinalityTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getCardinalityType1() {
		return cardinalityType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getCatalogLocationType() {
		return catalogLocationTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getConnectionStringSecurityType() {
		return connectionStringSecurityTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getContentType() {
		return contentTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getContentType1() {
		return contentType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getCubeStorageModeEnumType() {
		return cubeStorageModeEnumTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDataAggregationType() {
		return dataAggregationTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDataTypeType() {
		return dataTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDataTypeType1() {
		return dataTypeType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropConcatNullBehaviorType() {
		return dbpropConcatNullBehaviorTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropMsmdAutoExistsType() {
		return dbpropMsmdAutoExistsTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropMsmdCompareCaseSensitiveStringFlagsType() {
		return dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropMsmdMDXCompatibilityType() {
		return dbpropMsmdMDXCompatibilityTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropMsmdSubqueriesType() {
		return dbpropMsmdSubqueriesTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropNullCollationType() {
		return dbpropNullCollationTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropOutputParameterAvailableType() {
		return dbpropOutputParameterAvailableTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropPersistentIdTypeType() {
		return dbpropPersistentIdTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropPrepareAbortBehaviorType() {
		return dbpropPrepareAbortBehaviorTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropPrepareCommitBehaviorType() {
		return dbpropPrepareCommitBehaviorTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDbpropQuotedIdentifierCaseType() {
		return dbpropQuotedIdentifierCaseTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDialectType() {
		return dialectTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDimensionAttributeTypeEnumType() {
		return dimensionAttributeTypeEnumTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDimensionCurrentStorageModeEnumType() {
		return dimensionCurrentStorageModeEnumTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDiscretizationMethodType() {
		return discretizationMethodTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getDurabilityGuaranteeType() {
		return durabilityGuaranteeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getEditionType() {
		return editionTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getFiscalYearNameType() {
		return fiscalYearNameTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getFormatType() {
		return formatTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getFormatType1() {
		return formatType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getGroupingBehaviorType() {
		return groupingBehaviorTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getHideMemberIfType() {
		return hideMemberIfTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getHierarchyUniqueNameStyleType() {
		return hierarchyUniqueNameStyleTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getInstanceSelectionType() {
		return instanceSelectionTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getInvalidXmlCharactersType() {
		return invalidXmlCharactersTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getInvocationType() {
		return invocationTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getInvocationType1() {
		return invocationType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getInvocationType2() {
		return invocationType2EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getIsolationType() {
		return isolationTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getKeyDuplicateType() {
		return keyDuplicateTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getKeyErrorActionType() {
		return keyErrorActionTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getKeyErrorLimitActionType() {
		return keyErrorLimitActionTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getKeyNotFoundType() {
		return keyNotFoundTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMaterializationType() {
		return materializationTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMdpropAggregateCellUpdateType() {
		return mdpropAggregateCellUpdateTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMdpropFlatteningSupportType() {
		return mdpropFlatteningSupportTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMdpropMdxNonMeasureExpressionsType() {
		return mdpropMdxNonMeasureExpressionsTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMdpropMdxRangeRowsetType() {
		return mdpropMdxRangeRowsetTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMdpropMdxSlicerType() {
		return mdpropMdxSlicerTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMdxMissingMemberModeType() {
		return mdxMissingMemberModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMdxMissingMemberModeType1() {
		return mdxMissingMemberModeType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMDXSupportType() {
		return mdxSupportTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMeasureGroupStorageModeEnumType() {
		return measureGroupStorageModeEnumTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMembersWithDataType() {
		return membersWithDataTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMemberUniqueNameStyleType() {
		return memberUniqueNameStyleTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getMemoryLockingModeType() {
		return memoryLockingModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getModeType() {
		return modeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getNotificationTechniqueType() {
		return notificationTechniqueTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getNotificationTechniqueType1() {
		return notificationTechniqueType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getNullKeyConvertedToUnknownType() {
		return nullKeyConvertedToUnknownTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getNullKeyNotAllowedType() {
		return nullKeyNotAllowedTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getNullProcessingType() {
		return nullProcessingTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getObjectExpansion() {
		return objectExpansionEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getOnlineModeType() {
		return onlineModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getOptimizedStateType() {
		return optimizedStateTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getOptionalityType() {
		return optionalityTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getOrderByType() {
		return orderByTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getOverrideBehaviorType() {
		return overrideBehaviorTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getParameterType() {
		return parameterTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getParameterType1() {
		return parameterType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getPartitionCurrentStorageModeEnumType() {
		return partitionCurrentStorageModeEnumTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getPartitionModes() {
		return partitionModesEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getPartitionStorageModeEnumType() {
		return partitionStorageModeEnumTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getPermissionSetType() {
		return permissionSetTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getPersistenceType() {
		return persistenceTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getPersistenceType1() {
		return persistenceType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getProcessingGroupType() {
		return processingGroupTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getProcessingModeType() {
		return processingModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getProcessingModeType1() {
		return processingModeType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getProcessingModeType2() {
		return processingModeType2EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getProcessingModeType3() {
		return processingModeType3EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getProcessingStateType() {
		return processingStateTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getProviderTypeType() {
		return providerTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getReadDefinitionType() {
		return readDefinitionTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getReadSourceDataType() {
		return readSourceDataTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getReadType() {
		return readTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getReadType1() {
		return readType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getRefreshPolicyType() {
		return refreshPolicyTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getRefreshPolicyType1() {
		return refreshPolicyType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getRelationshipTypeType() {
		return relationshipTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getReportingFirstWeekOfMonthType() {
		return reportingFirstWeekOfMonthTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getReportingWeekToMonthPatternType() {
		return reportingWeekToMonthPatternTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getRequestTypeType() {
		return requestTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getResponseEncodingType() {
		return responseEncodingTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getRetentionModes() {
		return retentionModesEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getRootMemberIfType() {
		return rootMemberIfTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getSafetyOptionsType() {
		return safetyOptionsTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getScope() {
		return scopeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getScriptCacheProcessingModeType() {
		return scriptCacheProcessingModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getScriptErrorHandlingModeType() {
		return scriptErrorHandlingModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getSecuredCellValueType() {
		return securedCellValueTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getSecurityType() {
		return securityTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getSecurityType1() {
		return securityType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getShareDimensionStorageType() {
		return shareDimensionStorageTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getSQLQueryModeType() {
		return sqlQueryModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateSupportType() {
		return stateSupportTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateType() {
		return stateTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateType1() {
		return stateType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateType2() {
		return stateType2EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateType3() {
		return stateType3EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateType4() {
		return stateType4EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateType5() {
		return stateType5EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStateType6() {
		return stateType6EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getStorageModeType1() {
		return storageModeType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getSynchronizeSecurityType() {
		return synchronizeSecurityTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTargetTypeType() {
		return targetTypeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTargetTypeType1() {
		return targetTypeType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTargetTypeType2() {
		return targetTypeType2EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTrimmingType() {
		return trimmingTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType() {
		return typeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType1() {
		return typeType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType2() {
		return typeType2EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType3() {
		return typeType3EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType4() {
		return typeType4EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType5() {
		return typeType5EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType7() {
		return typeType7EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType8() {
		return typeType8EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType9() {
		return typeType9EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType10() {
		return typeType10EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType11() {
		return typeType11EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType12() {
		return typeType12EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getTypeType13() {
		return typeType13EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getUnknownMemberEnumType() {
		return unknownMemberEnumTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getUpdateIsolationLevelType() {
		return updateIsolationLevelTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getUsageType() {
		return usageTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getUsageType1() {
		return usageType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getValuensType() {
		return valuensTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getValuensType1() {
		return valuensType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getValuensType2() {
		return valuensType2EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getValuensType3() {
		return valuensType3EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getValuensType4() {
		return valuensType4EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getValuensType5() {
		return valuensType5EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getValuensType6() {
		return valuensType6EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getVisibilityType() {
		return visibilityTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getVisualModeType() {
		return visualModeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteBackTableCreation() {
		return writeBackTableCreationEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteType() {
		return writeTypeEEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteType1() {
		return writeType1EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteType2() {
		return writeType2EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteType3() {
		return writeType3EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteType4() {
		return writeType4EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteType5() {
		return writeType5EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EEnum getWriteType6() {
		return writeType6EEnum;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAccessTypeObject() {
		return accessTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAggregateFunctionTypeObject() {
		return aggregateFunctionTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAggregationFunctionTypeObject() {
		return aggregationFunctionTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAggregationStorageTypeObject() {
		return aggregationStorageTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAggregationTypeTypeObject() {
		return aggregationTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAggregationUsageTypeObject() {
		return aggregationUsageTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAlgorithmTypeObject() {
		return algorithmTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAllMemberAggregationUsageTypeObject() {
		return allMemberAggregationUsageTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAttributeHierarchyOptimizedStateTypeObject() {
		return attributeHierarchyOptimizedStateTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAttributeHierarchyOptimizedStateTypeObject1() {
		return attributeHierarchyOptimizedStateTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getAxisFormatTypeObject() {
		return axisFormatTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getCacheModeTypeObject() {
		return cacheModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getCalculationTypeTypeObject() {
		return calculationTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getCardinalityTypeObject() {
		return cardinalityTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getCardinalityTypeObject1() {
		return cardinalityTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getCatalogLocationTypeObject() {
		return catalogLocationTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getConnectionStringSecurityTypeObject() {
		return connectionStringSecurityTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getContentTypeObject() {
		return contentTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getContentTypeObject1() {
		return contentTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getCubeStorageModeEnumTypeObject() {
		return cubeStorageModeEnumTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDataAggregationTypeObject() {
		return dataAggregationTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDataTypeTypeObject() {
		return dataTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDataTypeTypeObject1() {
		return dataTypeTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropConcatNullBehaviorTypeObject() {
		return dbpropConcatNullBehaviorTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropMsmdAutoExistsTypeObject() {
		return dbpropMsmdAutoExistsTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropMsmdCompareCaseSensitiveStringFlagsTypeObject() {
		return dbpropMsmdCompareCaseSensitiveStringFlagsTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropMsmdMDXCompatibilityTypeObject() {
		return dbpropMsmdMDXCompatibilityTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropMsmdSubqueriesTypeObject() {
		return dbpropMsmdSubqueriesTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropNullCollationTypeObject() {
		return dbpropNullCollationTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropOutputParameterAvailableTypeObject() {
		return dbpropOutputParameterAvailableTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropPersistentIdTypeTypeObject() {
		return dbpropPersistentIdTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropPrepareAbortBehaviorTypeObject() {
		return dbpropPrepareAbortBehaviorTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropPrepareCommitBehaviorTypeObject() {
		return dbpropPrepareCommitBehaviorTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDbpropQuotedIdentifierCaseTypeObject() {
		return dbpropQuotedIdentifierCaseTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDialectTypeObject() {
		return dialectTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDimensionAttributeTypeEnumTypeObject() {
		return dimensionAttributeTypeEnumTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDimensionCurrentStorageModeEnumTypeObject() {
		return dimensionCurrentStorageModeEnumTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDiscretizationMethodTypeObject() {
		return discretizationMethodTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getDurabilityGuaranteeTypeObject() {
		return durabilityGuaranteeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getEditionTypeObject() {
		return editionTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getFirstDayOfWeekType() {
		return firstDayOfWeekTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getFiscalFirstDayOfMonthType() {
		return fiscalFirstDayOfMonthTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getFiscalFirstMonthType() {
		return fiscalFirstMonthTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getFiscalYearNameTypeObject() {
		return fiscalYearNameTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getFormatTypeObject() {
		return formatTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getFormatTypeObject1() {
		return formatTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getGroupingBehaviorTypeObject() {
		return groupingBehaviorTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getHideMemberIfTypeObject() {
		return hideMemberIfTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getHierarchyUniqueNameStyleTypeObject() {
		return hierarchyUniqueNameStyleTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getIDType() {
		return idTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getIDType1() {
		return idType1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getInstanceSelectionTypeObject() {
		return instanceSelectionTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getInvalidXmlCharactersTypeObject() {
		return invalidXmlCharactersTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getInvocationTypeObject() {
		return invocationTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getInvocationTypeObject1() {
		return invocationTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getInvocationTypeObject2() {
		return invocationTypeObject2EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getIsolationTypeObject() {
		return isolationTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getKeyDuplicateTypeObject() {
		return keyDuplicateTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getKeyErrorActionTypeObject() {
		return keyErrorActionTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getKeyErrorLimitActionTypeObject() {
		return keyErrorLimitActionTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getKeyNotFoundTypeObject() {
		return keyNotFoundTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getManufacturingExtraMonthQuarterType() {
		return manufacturingExtraMonthQuarterTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getManufacturingFirstMonthType() {
		return manufacturingFirstMonthTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getManufacturingFirstWeekOfMonthType() {
		return manufacturingFirstWeekOfMonthTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMaterializationTypeObject() {
		return materializationTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMdpropAggregateCellUpdateTypeObject() {
		return mdpropAggregateCellUpdateTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMdpropFlatteningSupportTypeObject() {
		return mdpropFlatteningSupportTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMdpropMdxNonMeasureExpressionsTypeObject() {
		return mdpropMdxNonMeasureExpressionsTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMdpropMdxRangeRowsetTypeObject() {
		return mdpropMdxRangeRowsetTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMdpropMdxSlicerTypeObject() {
		return mdpropMdxSlicerTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMdxMissingMemberModeTypeObject() {
		return mdxMissingMemberModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMdxMissingMemberModeTypeObject1() {
		return mdxMissingMemberModeTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMDXSupportTypeObject() {
		return mdxSupportTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMeasureGroupStorageModeEnumTypeObject() {
		return measureGroupStorageModeEnumTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMembersWithDataTypeObject() {
		return membersWithDataTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMemberUniqueNameStyleTypeObject() {
		return memberUniqueNameStyleTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getMemoryLockingModeTypeObject() {
		return memoryLockingModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getModeTypeObject() {
		return modeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getNotificationTechniqueTypeObject() {
		return notificationTechniqueTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getNotificationTechniqueTypeObject1() {
		return notificationTechniqueTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getNullKeyConvertedToUnknownTypeObject() {
		return nullKeyConvertedToUnknownTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getNullKeyNotAllowedTypeObject() {
		return nullKeyNotAllowedTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getNullProcessingTypeObject() {
		return nullProcessingTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getObjectExpansionObject() {
		return objectExpansionObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getOnlineModeTypeObject() {
		return onlineModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getOptimizedStateTypeObject() {
		return optimizedStateTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getOptionalityTypeObject() {
		return optionalityTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getOrderByTypeObject() {
		return orderByTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getOverrideBehaviorTypeObject() {
		return overrideBehaviorTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getParameterTypeObject() {
		return parameterTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getParameterTypeObject1() {
		return parameterTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getPartitionCurrentStorageModeEnumTypeObject() {
		return partitionCurrentStorageModeEnumTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getPartitionModesObject() {
		return partitionModesObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getPartitionStorageModeEnumTypeObject() {
		return partitionStorageModeEnumTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getPermissionSetTypeObject() {
		return permissionSetTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getPersistenceTypeObject() {
		return persistenceTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getPersistenceTypeObject1() {
		return persistenceTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getProcessingGroupTypeObject() {
		return processingGroupTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getProcessingModeTypeObject() {
		return processingModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getProcessingModeTypeObject1() {
		return processingModeTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getProcessingModeTypeObject2() {
		return processingModeTypeObject2EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getProcessingModeTypeObject3() {
		return processingModeTypeObject3EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getProcessingStateTypeObject() {
		return processingStateTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getProviderTypeTypeObject() {
		return providerTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getReadDefinitionTypeObject() {
		return readDefinitionTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getReadSourceDataTypeObject() {
		return readSourceDataTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getReadTypeObject() {
		return readTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getReadTypeObject1() {
		return readTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getRefreshPolicyTypeObject() {
		return refreshPolicyTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getRefreshPolicyTypeObject1() {
		return refreshPolicyTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getRelationshipTypeTypeObject() {
		return relationshipTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getReportingFirstMonthType() {
		return reportingFirstMonthTypeEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getReportingFirstWeekOfMonthTypeObject() {
		return reportingFirstWeekOfMonthTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getReportingWeekToMonthPatternTypeObject() {
		return reportingWeekToMonthPatternTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getRequestTypeTypeObject() {
		return requestTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getResponseEncodingTypeObject() {
		return responseEncodingTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getRetentionModesObject() {
		return retentionModesObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getRootMemberIfTypeObject() {
		return rootMemberIfTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getSafetyOptionsTypeObject() {
		return safetyOptionsTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getScopeObject() {
		return scopeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getScriptCacheProcessingModeTypeObject() {
		return scriptCacheProcessingModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getScriptErrorHandlingModeTypeObject() {
		return scriptErrorHandlingModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getSecuredCellValueTypeObject() {
		return securedCellValueTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getSecurityTypeObject() {
		return securityTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getSecurityTypeObject1() {
		return securityTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getShareDimensionStorageTypeObject() {
		return shareDimensionStorageTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getSQLQueryModeTypeObject() {
		return sqlQueryModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateSupportTypeObject() {
		return stateSupportTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateTypeObject() {
		return stateTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateTypeObject1() {
		return stateTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateTypeObject2() {
		return stateTypeObject2EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateTypeObject3() {
		return stateTypeObject3EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateTypeObject4() {
		return stateTypeObject4EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateTypeObject5() {
		return stateTypeObject5EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStateTypeObject6() {
		return stateTypeObject6EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getStorageModeTypeObject() {
		return storageModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getSynchronizeSecurityTypeObject() {
		return synchronizeSecurityTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTargetTypeTypeObject() {
		return targetTypeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTargetTypeTypeObject1() {
		return targetTypeTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTargetTypeTypeObject2() {
		return targetTypeTypeObject2EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTrimmingTypeObject() {
		return trimmingTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject() {
		return typeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject1() {
		return typeTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject2() {
		return typeTypeObject2EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject3() {
		return typeTypeObject3EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject4() {
		return typeTypeObject4EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject5() {
		return typeTypeObject5EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject6() {
		return typeTypeObject6EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject7() {
		return typeTypeObject7EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject8() {
		return typeTypeObject8EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject9() {
		return typeTypeObject9EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject10() {
		return typeTypeObject10EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject11() {
		return typeTypeObject11EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getTypeTypeObject12() {
		return typeTypeObject12EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getUnknownMemberEnumTypeObject() {
		return unknownMemberEnumTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getUpdateIsolationLevelTypeObject() {
		return updateIsolationLevelTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getUsageTypeObject() {
		return usageTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getUsageTypeObject1() {
		return usageTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getValuensTypeObject() {
		return valuensTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getValuensTypeObject1() {
		return valuensTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getValuensTypeObject2() {
		return valuensTypeObject2EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getValuensTypeObject3() {
		return valuensTypeObject3EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getValuensTypeObject4() {
		return valuensTypeObject4EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getValuensTypeObject5() {
		return valuensTypeObject5EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getValuensTypeObject6() {
		return valuensTypeObject6EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getVisibilityTypeObject() {
		return visibilityTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getVisualModeTypeObject() {
		return visualModeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteBackTableCreationObject() {
		return writeBackTableCreationObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteTypeObject() {
		return writeTypeObjectEDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteTypeObject1() {
		return writeTypeObject1EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteTypeObject2() {
		return writeTypeObject2EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteTypeObject3() {
		return writeTypeObject3EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteTypeObject4() {
		return writeTypeObject4EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteTypeObject5() {
		return writeTypeObject5EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EDataType getWriteTypeObject6() {
		return writeTypeObject6EDataType;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public XmlaFactory getXmlaFactory() {
		return (XmlaFactory)getEFactoryInstance();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private boolean isCreated = false;

	/**
	 * Creates the meta-model objects for the package.  This method is
	 * guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void createPackageContents() {
		if (isCreated) return;
		isCreated = true;

		// Create classes and their features
		accountEClass = createEClass(ACCOUNT);
		createEAttribute(accountEClass, ACCOUNT__ACCOUNT_TYPE);
		createEAttribute(accountEClass, ACCOUNT__AGGREGATION_FUNCTION);
		createEReference(accountEClass, ACCOUNT__ALIASES);
		createEReference(accountEClass, ACCOUNT__ANNOTATIONS);

		accountsTypeEClass = createEClass(ACCOUNTS_TYPE);
		createEReference(accountsTypeEClass, ACCOUNTS_TYPE__ACCOUNT);

		actionEClass = createEClass(ACTION);

		actionsTypeEClass = createEClass(ACTIONS_TYPE);
		createEReference(actionsTypeEClass, ACTIONS_TYPE__ACTION);

		actionsType1EClass = createEClass(ACTIONS_TYPE1);
		createEReference(actionsType1EClass, ACTIONS_TYPE1__ACTION);

		actionTypeEClass = createEClass(ACTION_TYPE);
		createEAttribute(actionTypeEClass, ACTION_TYPE__MODULE);
		createEAttribute(actionTypeEClass, ACTION_TYPE__NAME);
		createEAttribute(actionTypeEClass, ACTION_TYPE__PACKAGE);

		aggregationEClass = createEClass(AGGREGATION);
		createEAttribute(aggregationEClass, AGGREGATION__ID);
		createEAttribute(aggregationEClass, AGGREGATION__NAME);
		createEReference(aggregationEClass, AGGREGATION__DIMENSIONS);
		createEReference(aggregationEClass, AGGREGATION__ANNOTATIONS);
		createEAttribute(aggregationEClass, AGGREGATION__DESCRIPTION);

		aggregationAttributeEClass = createEClass(AGGREGATION_ATTRIBUTE);
		createEAttribute(aggregationAttributeEClass, AGGREGATION_ATTRIBUTE__ATTRIBUTE_ID);
		createEReference(aggregationAttributeEClass, AGGREGATION_ATTRIBUTE__ANNOTATIONS);

		aggregationDesignEClass = createEClass(AGGREGATION_DESIGN);
		createEAttribute(aggregationDesignEClass, AGGREGATION_DESIGN__NAME);
		createEAttribute(aggregationDesignEClass, AGGREGATION_DESIGN__ID);
		createEAttribute(aggregationDesignEClass, AGGREGATION_DESIGN__CREATED_TIMESTAMP);
		createEAttribute(aggregationDesignEClass, AGGREGATION_DESIGN__LAST_SCHEMA_UPDATE);
		createEAttribute(aggregationDesignEClass, AGGREGATION_DESIGN__DESCRIPTION);
		createEReference(aggregationDesignEClass, AGGREGATION_DESIGN__ANNOTATIONS);
		createEAttribute(aggregationDesignEClass, AGGREGATION_DESIGN__ESTIMATED_ROWS);
		createEReference(aggregationDesignEClass, AGGREGATION_DESIGN__DIMENSIONS);
		createEReference(aggregationDesignEClass, AGGREGATION_DESIGN__AGGREGATIONS);
		createEAttribute(aggregationDesignEClass, AGGREGATION_DESIGN__ESTIMATED_PERFORMANCE_GAIN);

		aggregationDesignAttributeEClass = createEClass(AGGREGATION_DESIGN_ATTRIBUTE);
		createEAttribute(aggregationDesignAttributeEClass, AGGREGATION_DESIGN_ATTRIBUTE__ATTRIBUTE_ID);
		createEAttribute(aggregationDesignAttributeEClass, AGGREGATION_DESIGN_ATTRIBUTE__ESTIMATED_COUNT);

		aggregationDesignDimensionEClass = createEClass(AGGREGATION_DESIGN_DIMENSION);
		createEAttribute(aggregationDesignDimensionEClass, AGGREGATION_DESIGN_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(aggregationDesignDimensionEClass, AGGREGATION_DESIGN_DIMENSION__ATTRIBUTES);
		createEReference(aggregationDesignDimensionEClass, AGGREGATION_DESIGN_DIMENSION__ANNOTATIONS);

		aggregationDesignsTypeEClass = createEClass(AGGREGATION_DESIGNS_TYPE);
		createEReference(aggregationDesignsTypeEClass, AGGREGATION_DESIGNS_TYPE__AGGREGATION_DESIGN);

		aggregationDimensionEClass = createEClass(AGGREGATION_DIMENSION);
		createEAttribute(aggregationDimensionEClass, AGGREGATION_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(aggregationDimensionEClass, AGGREGATION_DIMENSION__ATTRIBUTES);
		createEReference(aggregationDimensionEClass, AGGREGATION_DIMENSION__ANNOTATIONS);

		aggregationInstanceEClass = createEClass(AGGREGATION_INSTANCE);
		createEAttribute(aggregationInstanceEClass, AGGREGATION_INSTANCE__ID);
		createEAttribute(aggregationInstanceEClass, AGGREGATION_INSTANCE__NAME);
		createEAttribute(aggregationInstanceEClass, AGGREGATION_INSTANCE__AGGREGATION_TYPE);
		createEReference(aggregationInstanceEClass, AGGREGATION_INSTANCE__SOURCE);
		createEReference(aggregationInstanceEClass, AGGREGATION_INSTANCE__DIMENSIONS);
		createEReference(aggregationInstanceEClass, AGGREGATION_INSTANCE__MEASURES);
		createEReference(aggregationInstanceEClass, AGGREGATION_INSTANCE__ANNOTATIONS);
		createEAttribute(aggregationInstanceEClass, AGGREGATION_INSTANCE__DESCRIPTION);

		aggregationInstanceAttributeEClass = createEClass(AGGREGATION_INSTANCE_ATTRIBUTE);
		createEAttribute(aggregationInstanceAttributeEClass, AGGREGATION_INSTANCE_ATTRIBUTE__ATTRIBUTE_ID);
		createEReference(aggregationInstanceAttributeEClass, AGGREGATION_INSTANCE_ATTRIBUTE__KEY_COLUMNS);

		aggregationInstanceDimensionEClass = createEClass(AGGREGATION_INSTANCE_DIMENSION);
		createEAttribute(aggregationInstanceDimensionEClass, AGGREGATION_INSTANCE_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(aggregationInstanceDimensionEClass, AGGREGATION_INSTANCE_DIMENSION__ATTRIBUTES);

		aggregationInstanceMeasureEClass = createEClass(AGGREGATION_INSTANCE_MEASURE);
		createEAttribute(aggregationInstanceMeasureEClass, AGGREGATION_INSTANCE_MEASURE__MEASURE_ID);
		createEReference(aggregationInstanceMeasureEClass, AGGREGATION_INSTANCE_MEASURE__SOURCE);

		aggregationInstancesTypeEClass = createEClass(AGGREGATION_INSTANCES_TYPE);
		createEReference(aggregationInstancesTypeEClass, AGGREGATION_INSTANCES_TYPE__AGGREGATION_INSTANCE);

		aggregationsTypeEClass = createEClass(AGGREGATIONS_TYPE);
		createEReference(aggregationsTypeEClass, AGGREGATIONS_TYPE__AGGREGATION);

		algorithmParameterEClass = createEClass(ALGORITHM_PARAMETER);
		createEAttribute(algorithmParameterEClass, ALGORITHM_PARAMETER__NAME);
		createEAttribute(algorithmParameterEClass, ALGORITHM_PARAMETER__VALUE);

		algorithmParametersTypeEClass = createEClass(ALGORITHM_PARAMETERS_TYPE);
		createEReference(algorithmParametersTypeEClass, ALGORITHM_PARAMETERS_TYPE__ALGORITHM_PARAMETER);

		aliasesTypeEClass = createEClass(ALIASES_TYPE);
		createEAttribute(aliasesTypeEClass, ALIASES_TYPE__ALIAS);

		allMemberTranslationsTypeEClass = createEClass(ALL_MEMBER_TRANSLATIONS_TYPE);
		createEReference(allMemberTranslationsTypeEClass, ALL_MEMBER_TRANSLATIONS_TYPE__ALL_MEMBER_TRANSLATION);

		alterEClass = createEClass(ALTER);
		createEReference(alterEClass, ALTER__OBJECT);
		createEReference(alterEClass, ALTER__OBJECT_DEFINITION);
		createEAttribute(alterEClass, ALTER__ALLOW_CREATE);
		createEAttribute(alterEClass, ALTER__OBJECT_EXPANSION);
		createEAttribute(alterEClass, ALTER__SCOPE);

		andOrTypeEClass = createEClass(AND_OR_TYPE);
		createEAttribute(andOrTypeEClass, AND_OR_TYPE__GROUP);
		createEReference(andOrTypeEClass, AND_OR_TYPE__NOT);
		createEReference(andOrTypeEClass, AND_OR_TYPE__OR);
		createEReference(andOrTypeEClass, AND_OR_TYPE__AND);
		createEReference(andOrTypeEClass, AND_OR_TYPE__EQUAL);
		createEReference(andOrTypeEClass, AND_OR_TYPE__NOT_EQUAL);
		createEReference(andOrTypeEClass, AND_OR_TYPE__LESS);
		createEReference(andOrTypeEClass, AND_OR_TYPE__LESS_OR_EQUAL);
		createEReference(andOrTypeEClass, AND_OR_TYPE__GREATER);
		createEReference(andOrTypeEClass, AND_OR_TYPE__GREATER_OR_EQUAL);
		createEReference(andOrTypeEClass, AND_OR_TYPE__LIKE);
		createEReference(andOrTypeEClass, AND_OR_TYPE__NOT_LIKE);

		annotationEClass = createEClass(ANNOTATION);
		createEAttribute(annotationEClass, ANNOTATION__NAME);
		createEAttribute(annotationEClass, ANNOTATION__VISIBILITY);
		createEReference(annotationEClass, ANNOTATION__VALUE);

		annotationsTypeEClass = createEClass(ANNOTATIONS_TYPE);
		createEReference(annotationsTypeEClass, ANNOTATIONS_TYPE__ANNOTATION);

		assembliesTypeEClass = createEClass(ASSEMBLIES_TYPE);
		createEReference(assembliesTypeEClass, ASSEMBLIES_TYPE__ASSEMBLY);

		assembliesType1EClass = createEClass(ASSEMBLIES_TYPE1);
		createEReference(assembliesType1EClass, ASSEMBLIES_TYPE1__ASSEMBLY);

		assemblyEClass = createEClass(ASSEMBLY);
		createEAttribute(assemblyEClass, ASSEMBLY__ID);
		createEAttribute(assemblyEClass, ASSEMBLY__NAME);
		createEAttribute(assemblyEClass, ASSEMBLY__CREATED_TIMESTAMP);
		createEAttribute(assemblyEClass, ASSEMBLY__LAST_SCHEMA_UPDATE);
		createEAttribute(assemblyEClass, ASSEMBLY__DESCRIPTION);
		createEReference(assemblyEClass, ASSEMBLY__ANNOTATIONS);
		createEReference(assemblyEClass, ASSEMBLY__IMPERSONATION_INFO);

		attachEClass = createEClass(ATTACH);
		createEAttribute(attachEClass, ATTACH__FOLDER);
		createEAttribute(attachEClass, ATTACH__PASSWORD);
		createEAttribute(attachEClass, ATTACH__ALLOW_OVERWRITE);
		createEAttribute(attachEClass, ATTACH__READ_WRITE_MODE);

		attributeAllMemberTranslationsTypeEClass = createEClass(ATTRIBUTE_ALL_MEMBER_TRANSLATIONS_TYPE);
		createEReference(attributeAllMemberTranslationsTypeEClass, ATTRIBUTE_ALL_MEMBER_TRANSLATIONS_TYPE__MEMBER_ALL_MEMBER_TRANSLATION);

		attributeBindingEClass = createEClass(ATTRIBUTE_BINDING);
		createEAttribute(attributeBindingEClass, ATTRIBUTE_BINDING__ATTRIBUTE_ID);
		createEAttribute(attributeBindingEClass, ATTRIBUTE_BINDING__TYPE);
		createEAttribute(attributeBindingEClass, ATTRIBUTE_BINDING__ORDINAL);

		attributeInsertUpdateEClass = createEClass(ATTRIBUTE_INSERT_UPDATE);
		createEAttribute(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__ATTRIBUTE_NAME);
		createEAttribute(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__NAME);
		createEReference(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__KEYS);
		createEReference(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__TRANSLATIONS);
		createEAttribute(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__VALUE);
		createEAttribute(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__CUSTOMROLLUP);
		createEAttribute(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__CUSTOMROLLUPPROPERTIES);
		createEAttribute(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__UNARYOPERATOR);
		createEAttribute(attributeInsertUpdateEClass, ATTRIBUTE_INSERT_UPDATE__SKIPPEDLEVELS);

		attributePermissionEClass = createEClass(ATTRIBUTE_PERMISSION);
		createEAttribute(attributePermissionEClass, ATTRIBUTE_PERMISSION__ATTRIBUTE_ID);
		createEAttribute(attributePermissionEClass, ATTRIBUTE_PERMISSION__DESCRIPTION);
		createEAttribute(attributePermissionEClass, ATTRIBUTE_PERMISSION__DEFAULT_MEMBER);
		createEAttribute(attributePermissionEClass, ATTRIBUTE_PERMISSION__VISUAL_TOTALS);
		createEAttribute(attributePermissionEClass, ATTRIBUTE_PERMISSION__ALLOWED_SET);
		createEAttribute(attributePermissionEClass, ATTRIBUTE_PERMISSION__DENIED_SET);
		createEReference(attributePermissionEClass, ATTRIBUTE_PERMISSION__ANNOTATIONS);

		attributePermissionsTypeEClass = createEClass(ATTRIBUTE_PERMISSIONS_TYPE);
		createEReference(attributePermissionsTypeEClass, ATTRIBUTE_PERMISSIONS_TYPE__ATTRIBUTE_PERMISSION);

		attributePermissionsType1EClass = createEClass(ATTRIBUTE_PERMISSIONS_TYPE1);
		createEReference(attributePermissionsType1EClass, ATTRIBUTE_PERMISSIONS_TYPE1__ATTRIBUTE_PERMISSION);

		attributeRelationshipEClass = createEClass(ATTRIBUTE_RELATIONSHIP);
		createEAttribute(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__ATTRIBUTE_ID);
		createEAttribute(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__RELATIONSHIP_TYPE);
		createEAttribute(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__CARDINALITY);
		createEAttribute(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__OPTIONALITY);
		createEAttribute(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__OVERRIDE_BEHAVIOR);
		createEReference(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__ANNOTATIONS);
		createEAttribute(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__NAME);
		createEAttribute(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__VISIBLE);
		createEReference(attributeRelationshipEClass, ATTRIBUTE_RELATIONSHIP__TRANSLATIONS);

		attributeRelationshipsTypeEClass = createEClass(ATTRIBUTE_RELATIONSHIPS_TYPE);
		createEReference(attributeRelationshipsTypeEClass, ATTRIBUTE_RELATIONSHIPS_TYPE__ATTRIBUTE_RELATIONSHIP);

		attributesTypeEClass = createEClass(ATTRIBUTES_TYPE);
		createEReference(attributesTypeEClass, ATTRIBUTES_TYPE__ATTRIBUTE);

		attributesType1EClass = createEClass(ATTRIBUTES_TYPE1);
		createEReference(attributesType1EClass, ATTRIBUTES_TYPE1__ATTRIBUTE);

		attributesType2EClass = createEClass(ATTRIBUTES_TYPE2);
		createEReference(attributesType2EClass, ATTRIBUTES_TYPE2__ATTRIBUTE);

		attributesType3EClass = createEClass(ATTRIBUTES_TYPE3);
		createEReference(attributesType3EClass, ATTRIBUTES_TYPE3__ATTRIBUTE);

		attributesType4EClass = createEClass(ATTRIBUTES_TYPE4);
		createEReference(attributesType4EClass, ATTRIBUTES_TYPE4__ATTRIBUTE);

		attributesType5EClass = createEClass(ATTRIBUTES_TYPE5);
		createEReference(attributesType5EClass, ATTRIBUTES_TYPE5__ATTRIBUTE);

		attributesType6EClass = createEClass(ATTRIBUTES_TYPE6);
		createEReference(attributesType6EClass, ATTRIBUTES_TYPE6__ATTRIBUTE);

		attributesType7EClass = createEClass(ATTRIBUTES_TYPE7);
		createEReference(attributesType7EClass, ATTRIBUTES_TYPE7__ATTRIBUTE);

		attributesType8EClass = createEClass(ATTRIBUTES_TYPE8);
		createEReference(attributesType8EClass, ATTRIBUTES_TYPE8__ATTRIBUTE);

		attributeTranslationEClass = createEClass(ATTRIBUTE_TRANSLATION);
		createEAttribute(attributeTranslationEClass, ATTRIBUTE_TRANSLATION__LANGUAGE);
		createEAttribute(attributeTranslationEClass, ATTRIBUTE_TRANSLATION__CAPTION);
		createEAttribute(attributeTranslationEClass, ATTRIBUTE_TRANSLATION__DESCRIPTION);
		createEAttribute(attributeTranslationEClass, ATTRIBUTE_TRANSLATION__DISPLAY_FOLDER);
		createEReference(attributeTranslationEClass, ATTRIBUTE_TRANSLATION__ANNOTATIONS);
		createEReference(attributeTranslationEClass, ATTRIBUTE_TRANSLATION__CAPTION_COLUMN);
		createEAttribute(attributeTranslationEClass, ATTRIBUTE_TRANSLATION__MEMBERS_WITH_DATA_CAPTION);

		backupEClass = createEClass(BACKUP);
		createEReference(backupEClass, BACKUP__OBJECT);
		createEAttribute(backupEClass, BACKUP__FILE);
		createEAttribute(backupEClass, BACKUP__SECURITY);
		createEAttribute(backupEClass, BACKUP__APPLY_COMPRESSION);
		createEAttribute(backupEClass, BACKUP__ALLOW_OVERWRITE);
		createEAttribute(backupEClass, BACKUP__PASSWORD);
		createEAttribute(backupEClass, BACKUP__BACKUP_REMOTE_PARTITIONS);
		createEReference(backupEClass, BACKUP__LOCATIONS);

		batchEClass = createEClass(BATCH);
		createEReference(batchEClass, BATCH__PARALLEL);
		createEReference(batchEClass, BATCH__BINDINGS);
		createEReference(batchEClass, BATCH__DATA_SOURCE);
		createEReference(batchEClass, BATCH__DATA_SOURCE_VIEW);
		createEReference(batchEClass, BATCH__ERROR_CONFIGURATION);
		createEReference(batchEClass, BATCH__CREATE);
		createEReference(batchEClass, BATCH__ALTER);
		createEReference(batchEClass, BATCH__DELETE);
		createEReference(batchEClass, BATCH__PROCESS);
		createEReference(batchEClass, BATCH__MERGE_PARTITIONS);
		createEReference(batchEClass, BATCH__DESIGN_AGGREGATIONS);
		createEReference(batchEClass, BATCH__NOTIFY_TABLE_CHANGE);
		createEReference(batchEClass, BATCH__INSERT);
		createEReference(batchEClass, BATCH__UPDATE);
		createEReference(batchEClass, BATCH__DROP);
		createEReference(batchEClass, BATCH__UPDATE_CELLS);
		createEReference(batchEClass, BATCH__BACKUP);
		createEReference(batchEClass, BATCH__RESTORE);
		createEReference(batchEClass, BATCH__SYNCHRONIZE);
		createEReference(batchEClass, BATCH__CANCEL);
		createEReference(batchEClass, BATCH__BEGIN_TRANSACTION);
		createEReference(batchEClass, BATCH__COMMIT_TRANSACTION);
		createEReference(batchEClass, BATCH__ROLLBACK_TRANSACTION);
		createEReference(batchEClass, BATCH__CLEAR_CACHE);
		createEReference(batchEClass, BATCH__SUBSCRIBE);
		createEReference(batchEClass, BATCH__UNSUBSCRIBE);
		createEReference(batchEClass, BATCH__DETACH);
		createEReference(batchEClass, BATCH__ATTACH);
		createEReference(batchEClass, BATCH__LOCK);
		createEReference(batchEClass, BATCH__UNLOCK);
		createEReference(batchEClass, BATCH__IMAGE_LOAD);
		createEReference(batchEClass, BATCH__IMAGE_SAVE);
		createEReference(batchEClass, BATCH__CLONE_DATABASE);
		createEReference(batchEClass, BATCH__SET_AUTH_CONTEXT);
		createEReference(batchEClass, BATCH__DBCC);
		createEReference(batchEClass, BATCH__DISCOVER);
		createEAttribute(batchEClass, BATCH__PROCESS_AFFECTED_OBJECTS);
		createEAttribute(batchEClass, BATCH__TRANSACTION);

		beginSessionTypeEClass = createEClass(BEGIN_SESSION_TYPE);
		createEAttribute(beginSessionTypeEClass, BEGIN_SESSION_TYPE__MUST_UNDERSTAND);

		beginTransactionEClass = createEClass(BEGIN_TRANSACTION);

		bindingEClass = createEClass(BINDING);

		bindingsEClass = createEClass(BINDINGS);
		createEReference(bindingsEClass, BINDINGS__BINDING);

		boolBinopEClass = createEClass(BOOL_BINOP);
		createEAttribute(boolBinopEClass, BOOL_BINOP__COLUMN_ID);
		createEAttribute(boolBinopEClass, BOOL_BINOP__VALUE);

		booleanExprEClass = createEClass(BOOLEAN_EXPR);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__AND);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__OR);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__NOT);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__LEAF);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__AND1);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__OR1);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__NOT1);
		createEReference(booleanExprEClass, BOOLEAN_EXPR__LEAF1);

		calculatedMeasureBindingEClass = createEClass(CALCULATED_MEASURE_BINDING);
		createEAttribute(calculatedMeasureBindingEClass, CALCULATED_MEASURE_BINDING__MEASURE_NAME);

		calculationPropertiesTypeEClass = createEClass(CALCULATION_PROPERTIES_TYPE);
		createEReference(calculationPropertiesTypeEClass, CALCULATION_PROPERTIES_TYPE__CALCULATION_PROPERTY);

		calculationPropertyEClass = createEClass(CALCULATION_PROPERTY);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__CALCULATION_REFERENCE);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__CALCULATION_TYPE);
		createEReference(calculationPropertyEClass, CALCULATION_PROPERTY__TRANSLATIONS);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__DESCRIPTION);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__VISIBLE);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__SOLVE_ORDER);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__FORMAT_STRING);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__FORE_COLOR);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__BACK_COLOR);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__FONT_NAME);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__FONT_SIZE);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__FONT_FLAGS);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__NON_EMPTY_BEHAVIOR);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__ASSOCIATED_MEASURE_GROUP_ID);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__DISPLAY_FOLDER);
		createEAttribute(calculationPropertyEClass, CALCULATION_PROPERTY__LANGUAGE);
		createEReference(calculationPropertyEClass, CALCULATION_PROPERTY__VISUALIZATION_PROPERTIES);

		calculationsTypeEClass = createEClass(CALCULATIONS_TYPE);
		createEReference(calculationsTypeEClass, CALCULATIONS_TYPE__CALCULATION);

		cancelEClass = createEClass(CANCEL);
		createEAttribute(cancelEClass, CANCEL__CONNECTION_ID);
		createEAttribute(cancelEClass, CANCEL__SESSION_ID);
		createEAttribute(cancelEClass, CANCEL__SPID);
		createEAttribute(cancelEClass, CANCEL__CANCEL_ASSOCIATED);

		cellEClass = createEClass(CELL);
		createEAttribute(cellEClass, CELL__VALUE);
		createEAttribute(cellEClass, CELL__CELL_ORDINAL);

		cellPermissionEClass = createEClass(CELL_PERMISSION);
		createEAttribute(cellPermissionEClass, CELL_PERMISSION__ACCESS);
		createEAttribute(cellPermissionEClass, CELL_PERMISSION__DESCRIPTION);
		createEAttribute(cellPermissionEClass, CELL_PERMISSION__EXPRESSION);
		createEReference(cellPermissionEClass, CELL_PERMISSION__ANNOTATIONS);

		cellPermissionsTypeEClass = createEClass(CELL_PERMISSIONS_TYPE);
		createEReference(cellPermissionsTypeEClass, CELL_PERMISSIONS_TYPE__CELL_PERMISSION);

		classifiedColumnsTypeEClass = createEClass(CLASSIFIED_COLUMNS_TYPE);
		createEAttribute(classifiedColumnsTypeEClass, CLASSIFIED_COLUMNS_TYPE__CLASSIFIED_COLUMN_ID);

		clearCacheEClass = createEClass(CLEAR_CACHE);
		createEReference(clearCacheEClass, CLEAR_CACHE__OBJECT);

		clearResultTypeEClass = createEClass(CLEAR_RESULT_TYPE);
		createEAttribute(clearResultTypeEClass, CLEAR_RESULT_TYPE__RESULT_ID);

		cloneDatabaseEClass = createEClass(CLONE_DATABASE);
		createEReference(cloneDatabaseEClass, CLONE_DATABASE__OBJECT);
		createEReference(cloneDatabaseEClass, CLONE_DATABASE__TARGET);

		clrAssemblyEClass = createEClass(CLR_ASSEMBLY);
		createEReference(clrAssemblyEClass, CLR_ASSEMBLY__FILES);
		createEAttribute(clrAssemblyEClass, CLR_ASSEMBLY__PERMISSION_SET);

		clrAssemblyFileEClass = createEClass(CLR_ASSEMBLY_FILE);
		createEAttribute(clrAssemblyFileEClass, CLR_ASSEMBLY_FILE__NAME);
		createEAttribute(clrAssemblyFileEClass, CLR_ASSEMBLY_FILE__TYPE);
		createEReference(clrAssemblyFileEClass, CLR_ASSEMBLY_FILE__DATA);

		columnBindingEClass = createEClass(COLUMN_BINDING);
		createEAttribute(columnBindingEClass, COLUMN_BINDING__TABLE_ID);
		createEAttribute(columnBindingEClass, COLUMN_BINDING__COLUMN_ID);

		columnsTypeEClass = createEClass(COLUMNS_TYPE);
		createEReference(columnsTypeEClass, COLUMNS_TYPE__COLUMN);

		columnsType1EClass = createEClass(COLUMNS_TYPE1);
		createEReference(columnsType1EClass, COLUMNS_TYPE1__COLUMN);

		columnsType2EClass = createEClass(COLUMNS_TYPE2);
		createEReference(columnsType2EClass, COLUMNS_TYPE2__COLUMN);

		columnsType3EClass = createEClass(COLUMNS_TYPE3);
		createEReference(columnsType3EClass, COLUMNS_TYPE3__COLUMN);

		columnsType4EClass = createEClass(COLUMNS_TYPE4);
		createEReference(columnsType4EClass, COLUMNS_TYPE4__COLUMN);

		columnTypeEClass = createEClass(COLUMN_TYPE);
		createEAttribute(columnTypeEClass, COLUMN_TYPE__ID);
		createEAttribute(columnTypeEClass, COLUMN_TYPE__TYPE);
		createEAttribute(columnTypeEClass, COLUMN_TYPE__NAME);
		createEAttribute(columnTypeEClass, COLUMN_TYPE__DESCRIPTION);
		createEAttribute(columnTypeEClass, COLUMN_TYPE__FILTERABLE);
		createEAttribute(columnTypeEClass, COLUMN_TYPE__REPEATABLE);
		createEAttribute(columnTypeEClass, COLUMN_TYPE__REPEATED_BASE);

		comAssemblyEClass = createEClass(COM_ASSEMBLY);
		createEAttribute(comAssemblyEClass, COM_ASSEMBLY__SOURCE);

		commandEClass = createEClass(COMMAND);
		createEAttribute(commandEClass, COMMAND__STATEMENT);
		createEReference(commandEClass, COMMAND__CREATE);
		createEReference(commandEClass, COMMAND__ALTER);
		createEReference(commandEClass, COMMAND__DELETE);
		createEReference(commandEClass, COMMAND__PROCESS);
		createEReference(commandEClass, COMMAND__MERGE_PARTITIONS);
		createEReference(commandEClass, COMMAND__DESIGN_AGGREGATIONS);
		createEReference(commandEClass, COMMAND__CLEAR_CACHE);
		createEReference(commandEClass, COMMAND__SUBSCRIBE);
		createEReference(commandEClass, COMMAND__UNSUBSCRIBE);
		createEReference(commandEClass, COMMAND__CANCEL);
		createEReference(commandEClass, COMMAND__BEGIN_TRANSACTION);
		createEReference(commandEClass, COMMAND__COMMIT_TRANSACTION);
		createEReference(commandEClass, COMMAND__ROLLBACK_TRANSACTION);
		createEReference(commandEClass, COMMAND__LOCK);
		createEReference(commandEClass, COMMAND__UNLOCK);
		createEReference(commandEClass, COMMAND__BACKUP);
		createEReference(commandEClass, COMMAND__RESTORE);
		createEReference(commandEClass, COMMAND__SYNCHRONIZE);
		createEReference(commandEClass, COMMAND__ATTACH);
		createEReference(commandEClass, COMMAND__DETACH);
		createEReference(commandEClass, COMMAND__INSERT);
		createEReference(commandEClass, COMMAND__UPDATE);
		createEReference(commandEClass, COMMAND__DROP);
		createEReference(commandEClass, COMMAND__UPDATE_CELLS);
		createEReference(commandEClass, COMMAND__NOTIFY_TABLE_CHANGE);
		createEReference(commandEClass, COMMAND__BATCH);
		createEReference(commandEClass, COMMAND__IMAGE_LOAD);
		createEReference(commandEClass, COMMAND__IMAGE_SAVE);
		createEReference(commandEClass, COMMAND__CLONE_DATABASE);
		createEReference(commandEClass, COMMAND__SET_AUTH_CONTEXT);
		createEReference(commandEClass, COMMAND__DBCC);

		commandsTypeEClass = createEClass(COMMANDS_TYPE);
		createEReference(commandsTypeEClass, COMMANDS_TYPE__COMMAND);

		commitTransactionEClass = createEClass(COMMIT_TRANSACTION);
		createEAttribute(commitTransactionEClass, COMMIT_TRANSACTION__DURABILITY_GUARANTEE);

		comparatorTypeEClass = createEClass(COMPARATOR_TYPE);
		createEAttribute(comparatorTypeEClass, COMPARATOR_TYPE__MODULE);
		createEAttribute(comparatorTypeEClass, COMPARATOR_TYPE__NAME);
		createEAttribute(comparatorTypeEClass, COMPARATOR_TYPE__PACKAGE);

		createEClass = createEClass(CREATE);
		createEReference(createEClass, CREATE__PARENT_OBJECT);
		createEReference(createEClass, CREATE__OBJECT_DEFINITION);
		createEAttribute(createEClass, CREATE__ALLOW_OVERWRITE);
		createEAttribute(createEClass, CREATE__SCOPE);

		cubeEClass = createEClass(CUBE);
		createEAttribute(cubeEClass, CUBE__NAME);
		createEAttribute(cubeEClass, CUBE__ID);
		createEAttribute(cubeEClass, CUBE__CREATED_TIMESTAMP);
		createEAttribute(cubeEClass, CUBE__LAST_SCHEMA_UPDATE);
		createEAttribute(cubeEClass, CUBE__DESCRIPTION);
		createEReference(cubeEClass, CUBE__ANNOTATIONS);
		createEAttribute(cubeEClass, CUBE__LANGUAGE);
		createEAttribute(cubeEClass, CUBE__COLLATION);
		createEReference(cubeEClass, CUBE__TRANSLATIONS);
		createEReference(cubeEClass, CUBE__DIMENSIONS);
		createEReference(cubeEClass, CUBE__CUBE_PERMISSIONS);
		createEReference(cubeEClass, CUBE__MDX_SCRIPTS);
		createEReference(cubeEClass, CUBE__PERSPECTIVES);
		createEAttribute(cubeEClass, CUBE__STATE);
		createEAttribute(cubeEClass, CUBE__DEFAULT_MEASURE);
		createEAttribute(cubeEClass, CUBE__VISIBLE);
		createEReference(cubeEClass, CUBE__MEASURE_GROUPS);
		createEReference(cubeEClass, CUBE__SOURCE);
		createEAttribute(cubeEClass, CUBE__AGGREGATION_PREFIX);
		createEAttribute(cubeEClass, CUBE__PROCESSING_PRIORITY);
		createEReference(cubeEClass, CUBE__STORAGE_MODE);
		createEAttribute(cubeEClass, CUBE__PROCESSING_MODE);
		createEAttribute(cubeEClass, CUBE__SCRIPT_CACHE_PROCESSING_MODE);
		createEAttribute(cubeEClass, CUBE__SCRIPT_ERROR_HANDLING_MODE);
		createEAttribute(cubeEClass, CUBE__DAX_OPTIMIZATION_MODE);
		createEReference(cubeEClass, CUBE__PROACTIVE_CACHING);
		createEReference(cubeEClass, CUBE__KPIS);
		createEReference(cubeEClass, CUBE__ERROR_CONFIGURATION);
		createEReference(cubeEClass, CUBE__ACTIONS);
		createEAttribute(cubeEClass, CUBE__STORAGE_LOCATION);
		createEAttribute(cubeEClass, CUBE__ESTIMATED_ROWS);
		createEAttribute(cubeEClass, CUBE__LAST_PROCESSED);

		cubeAttributeEClass = createEClass(CUBE_ATTRIBUTE);
		createEAttribute(cubeAttributeEClass, CUBE_ATTRIBUTE__ATTRIBUTE_ID);
		createEAttribute(cubeAttributeEClass, CUBE_ATTRIBUTE__AGGREGATION_USAGE);
		createEAttribute(cubeAttributeEClass, CUBE_ATTRIBUTE__ATTRIBUTE_HIERARCHY_OPTIMIZED_STATE);
		createEAttribute(cubeAttributeEClass, CUBE_ATTRIBUTE__ATTRIBUTE_HIERARCHY_ENABLED);
		createEAttribute(cubeAttributeEClass, CUBE_ATTRIBUTE__ATTRIBUTE_HIERARCHY_VISIBLE);
		createEReference(cubeAttributeEClass, CUBE_ATTRIBUTE__ANNOTATIONS);

		cubeAttributeBindingEClass = createEClass(CUBE_ATTRIBUTE_BINDING);
		createEAttribute(cubeAttributeBindingEClass, CUBE_ATTRIBUTE_BINDING__CUBE_ID);
		createEAttribute(cubeAttributeBindingEClass, CUBE_ATTRIBUTE_BINDING__CUBE_DIMENSION_ID);
		createEAttribute(cubeAttributeBindingEClass, CUBE_ATTRIBUTE_BINDING__ATTRIBUTE_ID);
		createEAttribute(cubeAttributeBindingEClass, CUBE_ATTRIBUTE_BINDING__TYPE);
		createEReference(cubeAttributeBindingEClass, CUBE_ATTRIBUTE_BINDING__ORDINAL);

		cubeDimensionEClass = createEClass(CUBE_DIMENSION);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__ID);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__NAME);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__DESCRIPTION);
		createEReference(cubeDimensionEClass, CUBE_DIMENSION__TRANSLATIONS);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__DIMENSION_ID);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__VISIBLE);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__ALL_MEMBER_AGGREGATION_USAGE);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__HIERARCHY_UNIQUE_NAME_STYLE);
		createEAttribute(cubeDimensionEClass, CUBE_DIMENSION__MEMBER_UNIQUE_NAME_STYLE);
		createEReference(cubeDimensionEClass, CUBE_DIMENSION__ATTRIBUTES);
		createEReference(cubeDimensionEClass, CUBE_DIMENSION__HIERARCHIES);
		createEReference(cubeDimensionEClass, CUBE_DIMENSION__ANNOTATIONS);

		cubeDimensionBindingEClass = createEClass(CUBE_DIMENSION_BINDING);
		createEAttribute(cubeDimensionBindingEClass, CUBE_DIMENSION_BINDING__DATA_SOURCE_ID);
		createEAttribute(cubeDimensionBindingEClass, CUBE_DIMENSION_BINDING__CUBE_ID);
		createEAttribute(cubeDimensionBindingEClass, CUBE_DIMENSION_BINDING__CUBE_DIMENSION_ID);
		createEAttribute(cubeDimensionBindingEClass, CUBE_DIMENSION_BINDING__FILTER);

		cubeDimensionPermissionEClass = createEClass(CUBE_DIMENSION_PERMISSION);
		createEAttribute(cubeDimensionPermissionEClass, CUBE_DIMENSION_PERMISSION__CUBE_DIMENSION_ID);
		createEAttribute(cubeDimensionPermissionEClass, CUBE_DIMENSION_PERMISSION__DESCRIPTION);
		createEAttribute(cubeDimensionPermissionEClass, CUBE_DIMENSION_PERMISSION__READ);
		createEAttribute(cubeDimensionPermissionEClass, CUBE_DIMENSION_PERMISSION__WRITE);
		createEReference(cubeDimensionPermissionEClass, CUBE_DIMENSION_PERMISSION__ATTRIBUTE_PERMISSIONS);
		createEReference(cubeDimensionPermissionEClass, CUBE_DIMENSION_PERMISSION__ANNOTATIONS);

		cubeHierarchyEClass = createEClass(CUBE_HIERARCHY);
		createEAttribute(cubeHierarchyEClass, CUBE_HIERARCHY__HIERARCHY_ID);
		createEAttribute(cubeHierarchyEClass, CUBE_HIERARCHY__OPTIMIZED_STATE);
		createEAttribute(cubeHierarchyEClass, CUBE_HIERARCHY__VISIBLE);
		createEAttribute(cubeHierarchyEClass, CUBE_HIERARCHY__ENABLED);
		createEReference(cubeHierarchyEClass, CUBE_HIERARCHY__ANNOTATIONS);

		cubePermissionEClass = createEClass(CUBE_PERMISSION);
		createEAttribute(cubePermissionEClass, CUBE_PERMISSION__READ_SOURCE_DATA);
		createEReference(cubePermissionEClass, CUBE_PERMISSION__DIMENSION_PERMISSIONS);
		createEReference(cubePermissionEClass, CUBE_PERMISSION__CELL_PERMISSIONS);
		createEAttribute(cubePermissionEClass, CUBE_PERMISSION__WRITE);

		cubePermissionsTypeEClass = createEClass(CUBE_PERMISSIONS_TYPE);
		createEReference(cubePermissionsTypeEClass, CUBE_PERMISSIONS_TYPE__CUBE_PERMISSION);

		cubesTypeEClass = createEClass(CUBES_TYPE);
		createEReference(cubesTypeEClass, CUBES_TYPE__CUBE);

		currentStorageModeTypeEClass = createEClass(CURRENT_STORAGE_MODE_TYPE);
		createEAttribute(currentStorageModeTypeEClass, CURRENT_STORAGE_MODE_TYPE__VALUE);
		createEAttribute(currentStorageModeTypeEClass, CURRENT_STORAGE_MODE_TYPE__VALUENS);

		currentStorageModeType1EClass = createEClass(CURRENT_STORAGE_MODE_TYPE1);
		createEAttribute(currentStorageModeType1EClass, CURRENT_STORAGE_MODE_TYPE1__VALUE);
		createEAttribute(currentStorageModeType1EClass, CURRENT_STORAGE_MODE_TYPE1__VALUENS);

		customRollupColumnTypeEClass = createEClass(CUSTOM_ROLLUP_COLUMN_TYPE);
		createEReference(customRollupColumnTypeEClass, CUSTOM_ROLLUP_COLUMN_TYPE__SOURCE);

		customRollupPropertiesColumnTypeEClass = createEClass(CUSTOM_ROLLUP_PROPERTIES_COLUMN_TYPE);
		createEReference(customRollupPropertiesColumnTypeEClass, CUSTOM_ROLLUP_PROPERTIES_COLUMN_TYPE__SOURCE);

		databaseEClass = createEClass(DATABASE);
		createEAttribute(databaseEClass, DATABASE__NAME);
		createEAttribute(databaseEClass, DATABASE__ID);
		createEAttribute(databaseEClass, DATABASE__CREATED_TIMESTAMP);
		createEAttribute(databaseEClass, DATABASE__LAST_SCHEMA_UPDATE);
		createEAttribute(databaseEClass, DATABASE__DESCRIPTION);
		createEReference(databaseEClass, DATABASE__ANNOTATIONS);
		createEAttribute(databaseEClass, DATABASE__LAST_UPDATE);
		createEAttribute(databaseEClass, DATABASE__STATE);
		createEAttribute(databaseEClass, DATABASE__READ_WRITE_MODE);
		createEAttribute(databaseEClass, DATABASE__DB_STORAGE_LOCATION);
		createEAttribute(databaseEClass, DATABASE__AGGREGATION_PREFIX);
		createEAttribute(databaseEClass, DATABASE__PROCESSING_PRIORITY);
		createEAttribute(databaseEClass, DATABASE__ESTIMATED_SIZE);
		createEAttribute(databaseEClass, DATABASE__LAST_PROCESSED);
		createEAttribute(databaseEClass, DATABASE__LANGUAGE);
		createEAttribute(databaseEClass, DATABASE__COLLATION);
		createEAttribute(databaseEClass, DATABASE__VISIBLE);
		createEAttribute(databaseEClass, DATABASE__MASTER_DATA_SOURCE_ID);
		createEReference(databaseEClass, DATABASE__DATA_SOURCE_IMPERSONATION_INFO);
		createEReference(databaseEClass, DATABASE__ACCOUNTS);
		createEReference(databaseEClass, DATABASE__DATA_SOURCES);
		createEReference(databaseEClass, DATABASE__DATA_SOURCE_VIEWS);
		createEReference(databaseEClass, DATABASE__DIMENSIONS);
		createEReference(databaseEClass, DATABASE__CUBES);
		createEReference(databaseEClass, DATABASE__MINING_STRUCTURES);
		createEReference(databaseEClass, DATABASE__ROLES);
		createEReference(databaseEClass, DATABASE__ASSEMBLIES);
		createEReference(databaseEClass, DATABASE__DATABASE_PERMISSIONS);
		createEReference(databaseEClass, DATABASE__TRANSLATIONS);
		createEAttribute(databaseEClass, DATABASE__STORAGE_ENGINE_USED);
		createEAttribute(databaseEClass, DATABASE__IMAGE_PATH);
		createEAttribute(databaseEClass, DATABASE__IMAGE_URL);
		createEAttribute(databaseEClass, DATABASE__IMAGE_UNIQUE_ID);
		createEAttribute(databaseEClass, DATABASE__IMAGE_VERSION);
		createEAttribute(databaseEClass, DATABASE__TOKEN);
		createEAttribute(databaseEClass, DATABASE__COMPATIBILITY_LEVEL);
		createEAttribute(databaseEClass, DATABASE__DIRECT_QUERY_MODE);

		databasePermissionEClass = createEClass(DATABASE_PERMISSION);
		createEAttribute(databasePermissionEClass, DATABASE_PERMISSION__ADMINISTER);
		createEAttribute(databasePermissionEClass, DATABASE_PERMISSION__WRITE);

		databasePermissionsTypeEClass = createEClass(DATABASE_PERMISSIONS_TYPE);
		createEReference(databasePermissionsTypeEClass, DATABASE_PERMISSIONS_TYPE__DATABASE_PERMISSION);

		databasesTypeEClass = createEClass(DATABASES_TYPE);
		createEReference(databasesTypeEClass, DATABASES_TYPE__DATABASE);

		dataBlockEClass = createEClass(DATA_BLOCK);
		createEAttribute(dataBlockEClass, DATA_BLOCK__BLOCK);

		dataItemEClass = createEClass(DATA_ITEM);
		createEAttribute(dataItemEClass, DATA_ITEM__DATA_TYPE);
		createEAttribute(dataItemEClass, DATA_ITEM__DATA_SIZE);
		createEAttribute(dataItemEClass, DATA_ITEM__MIME_TYPE);
		createEAttribute(dataItemEClass, DATA_ITEM__NULL_PROCESSING);
		createEAttribute(dataItemEClass, DATA_ITEM__TRIMMING);
		createEAttribute(dataItemEClass, DATA_ITEM__INVALID_XML_CHARACTERS);
		createEAttribute(dataItemEClass, DATA_ITEM__COLLATION);
		createEAttribute(dataItemEClass, DATA_ITEM__FORMAT);
		createEReference(dataItemEClass, DATA_ITEM__SOURCE);
		createEReference(dataItemEClass, DATA_ITEM__ANNOTATIONS);

		dataMiningMeasureGroupDimensionEClass = createEClass(DATA_MINING_MEASURE_GROUP_DIMENSION);
		createEAttribute(dataMiningMeasureGroupDimensionEClass, DATA_MINING_MEASURE_GROUP_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(dataMiningMeasureGroupDimensionEClass, DATA_MINING_MEASURE_GROUP_DIMENSION__ANNOTATIONS);
		createEReference(dataMiningMeasureGroupDimensionEClass, DATA_MINING_MEASURE_GROUP_DIMENSION__SOURCE);
		createEAttribute(dataMiningMeasureGroupDimensionEClass, DATA_MINING_MEASURE_GROUP_DIMENSION__CASE_CUBE_DIMENSION_ID);

		dataSourceEClass = createEClass(DATA_SOURCE);
		createEAttribute(dataSourceEClass, DATA_SOURCE__NAME);
		createEAttribute(dataSourceEClass, DATA_SOURCE__ID);
		createEAttribute(dataSourceEClass, DATA_SOURCE__CREATED_TIMESTAMP);
		createEAttribute(dataSourceEClass, DATA_SOURCE__LAST_SCHEMA_UPDATE);
		createEAttribute(dataSourceEClass, DATA_SOURCE__DESCRIPTION);
		createEReference(dataSourceEClass, DATA_SOURCE__ANNOTATIONS);
		createEAttribute(dataSourceEClass, DATA_SOURCE__MANAGED_PROVIDER);
		createEAttribute(dataSourceEClass, DATA_SOURCE__CONNECTION_STRING);
		createEAttribute(dataSourceEClass, DATA_SOURCE__CONNECTION_STRING_SECURITY);
		createEReference(dataSourceEClass, DATA_SOURCE__IMPERSONATION_INFO);
		createEAttribute(dataSourceEClass, DATA_SOURCE__ISOLATION);
		createEAttribute(dataSourceEClass, DATA_SOURCE__MAX_ACTIVE_CONNECTIONS);
		createEAttribute(dataSourceEClass, DATA_SOURCE__TIMEOUT);
		createEReference(dataSourceEClass, DATA_SOURCE__DATA_SOURCE_PERMISSIONS);
		createEReference(dataSourceEClass, DATA_SOURCE__QUERY_IMPERSONATION_INFO);
		createEAttribute(dataSourceEClass, DATA_SOURCE__QUERY_HINTS);

		dataSourcePermissionEClass = createEClass(DATA_SOURCE_PERMISSION);
		createEAttribute(dataSourcePermissionEClass, DATA_SOURCE_PERMISSION__WRITE);

		dataSourcePermissionsTypeEClass = createEClass(DATA_SOURCE_PERMISSIONS_TYPE);
		createEReference(dataSourcePermissionsTypeEClass, DATA_SOURCE_PERMISSIONS_TYPE__DATA_SOURCE_PERMISSION);

		dataSourcesTypeEClass = createEClass(DATA_SOURCES_TYPE);
		createEReference(dataSourcesTypeEClass, DATA_SOURCES_TYPE__DATA_SOURCE);

		dataSourceViewEClass = createEClass(DATA_SOURCE_VIEW);
		createEAttribute(dataSourceViewEClass, DATA_SOURCE_VIEW__NAME);
		createEAttribute(dataSourceViewEClass, DATA_SOURCE_VIEW__ID);
		createEAttribute(dataSourceViewEClass, DATA_SOURCE_VIEW__CREATED_TIMESTAMP);
		createEAttribute(dataSourceViewEClass, DATA_SOURCE_VIEW__LAST_SCHEMA_UPDATE);
		createEAttribute(dataSourceViewEClass, DATA_SOURCE_VIEW__DESCRIPTION);
		createEReference(dataSourceViewEClass, DATA_SOURCE_VIEW__ANNOTATIONS);
		createEAttribute(dataSourceViewEClass, DATA_SOURCE_VIEW__DATA_SOURCE_ID);

		dataSourceViewBindingEClass = createEClass(DATA_SOURCE_VIEW_BINDING);
		createEAttribute(dataSourceViewBindingEClass, DATA_SOURCE_VIEW_BINDING__DATA_SOURCE_VIEW_ID);

		dataSourceViewsTypeEClass = createEClass(DATA_SOURCE_VIEWS_TYPE);
		createEReference(dataSourceViewsTypeEClass, DATA_SOURCE_VIEWS_TYPE__DATA_SOURCE_VIEW);

		dataTypeEClass = createEClass(DATA_TYPE);
		createEReference(dataTypeEClass, DATA_TYPE__COLUMN);

		dataType1EClass = createEClass(DATA_TYPE1);
		createEReference(dataType1EClass, DATA_TYPE1__EVENT_CATEGORY);

		dataType2EClass = createEClass(DATA_TYPE2);
		createEAttribute(dataType2EClass, DATA_TYPE2__NAME);
		createEReference(dataType2EClass, DATA_TYPE2__VERSION);
		createEAttribute(dataType2EClass, DATA_TYPE2__TYPE);
		createEAttribute(dataType2EClass, DATA_TYPE2__DESCRIPTION);

		dataType3EClass = createEClass(DATA_TYPE3);
		createEAttribute(dataType3EClass, DATA_TYPE3__DATA_BLOCK);

		dbccEClass = createEClass(DBCC);
		createEReference(dbccEClass, DBCC__OBJECT);

		degenerateMeasureGroupDimensionEClass = createEClass(DEGENERATE_MEASURE_GROUP_DIMENSION);
		createEAttribute(degenerateMeasureGroupDimensionEClass, DEGENERATE_MEASURE_GROUP_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(degenerateMeasureGroupDimensionEClass, DEGENERATE_MEASURE_GROUP_DIMENSION__ANNOTATIONS);
		createEReference(degenerateMeasureGroupDimensionEClass, DEGENERATE_MEASURE_GROUP_DIMENSION__SOURCE);
		createEAttribute(degenerateMeasureGroupDimensionEClass, DEGENERATE_MEASURE_GROUP_DIMENSION__SHARE_DIMENSION_STORAGE);

		deleteEClass = createEClass(DELETE);
		createEReference(deleteEClass, DELETE__OBJECT);
		createEAttribute(deleteEClass, DELETE__IGNORE_FAILURES);

		designAggregationsEClass = createEClass(DESIGN_AGGREGATIONS);
		createEReference(designAggregationsEClass, DESIGN_AGGREGATIONS__OBJECT);
		createEAttribute(designAggregationsEClass, DESIGN_AGGREGATIONS__TIME);
		createEAttribute(designAggregationsEClass, DESIGN_AGGREGATIONS__STEPS);
		createEAttribute(designAggregationsEClass, DESIGN_AGGREGATIONS__OPTIMIZATION);
		createEAttribute(designAggregationsEClass, DESIGN_AGGREGATIONS__STORAGE);
		createEAttribute(designAggregationsEClass, DESIGN_AGGREGATIONS__MATERIALIZE);
		createEReference(designAggregationsEClass, DESIGN_AGGREGATIONS__QUERIES);

		detachEClass = createEClass(DETACH);
		createEReference(detachEClass, DETACH__OBJECT);
		createEAttribute(detachEClass, DETACH__PASSWORD);

		dimensionEClass = createEClass(DIMENSION);
		createEAttribute(dimensionEClass, DIMENSION__NAME);
		createEAttribute(dimensionEClass, DIMENSION__ID);
		createEAttribute(dimensionEClass, DIMENSION__CREATED_TIMESTAMP);
		createEAttribute(dimensionEClass, DIMENSION__LAST_SCHEMA_UPDATE);
		createEAttribute(dimensionEClass, DIMENSION__DESCRIPTION);
		createEReference(dimensionEClass, DIMENSION__ANNOTATIONS);
		createEReference(dimensionEClass, DIMENSION__SOURCE);
		createEAttribute(dimensionEClass, DIMENSION__MINING_MODEL_ID);
		createEAttribute(dimensionEClass, DIMENSION__TYPE);
		createEReference(dimensionEClass, DIMENSION__UNKNOWN_MEMBER);
		createEAttribute(dimensionEClass, DIMENSION__MDX_MISSING_MEMBER_MODE);
		createEReference(dimensionEClass, DIMENSION__ERROR_CONFIGURATION);
		createEAttribute(dimensionEClass, DIMENSION__STORAGE_MODE);
		createEAttribute(dimensionEClass, DIMENSION__WRITE_ENABLED);
		createEAttribute(dimensionEClass, DIMENSION__PROCESSING_PRIORITY);
		createEAttribute(dimensionEClass, DIMENSION__LAST_PROCESSED);
		createEReference(dimensionEClass, DIMENSION__DIMENSION_PERMISSIONS);
		createEAttribute(dimensionEClass, DIMENSION__DEPENDS_ON_DIMENSION_ID);
		createEAttribute(dimensionEClass, DIMENSION__LANGUAGE);
		createEAttribute(dimensionEClass, DIMENSION__COLLATION);
		createEAttribute(dimensionEClass, DIMENSION__UNKNOWN_MEMBER_NAME);
		createEReference(dimensionEClass, DIMENSION__UNKNOWN_MEMBER_TRANSLATIONS);
		createEAttribute(dimensionEClass, DIMENSION__STATE);
		createEReference(dimensionEClass, DIMENSION__PROACTIVE_CACHING);
		createEAttribute(dimensionEClass, DIMENSION__PROCESSING_MODE);
		createEAttribute(dimensionEClass, DIMENSION__PROCESSING_GROUP);
		createEReference(dimensionEClass, DIMENSION__CURRENT_STORAGE_MODE);
		createEReference(dimensionEClass, DIMENSION__TRANSLATIONS);
		createEReference(dimensionEClass, DIMENSION__ATTRIBUTES);
		createEAttribute(dimensionEClass, DIMENSION__ATTRIBUTE_ALL_MEMBER_NAME);
		createEReference(dimensionEClass, DIMENSION__ATTRIBUTE_ALL_MEMBER_TRANSLATIONS);
		createEReference(dimensionEClass, DIMENSION__HIERARCHIES);
		createEAttribute(dimensionEClass, DIMENSION__PROCESSING_RECOMMENDATION);
		createEReference(dimensionEClass, DIMENSION__RELATIONSHIPS);
		createEAttribute(dimensionEClass, DIMENSION__STRING_STORES_COMPATIBILITY_LEVEL);
		createEAttribute(dimensionEClass, DIMENSION__CURRENT_STRING_STORES_COMPATIBILITY_LEVEL);

		dimensionAttributeEClass = createEClass(DIMENSION_ATTRIBUTE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__NAME);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ID);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__DESCRIPTION);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__TYPE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__USAGE);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__SOURCE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ESTIMATED_COUNT);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__KEY_COLUMNS);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__NAME_COLUMN);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__VALUE_COLUMN);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__TRANSLATIONS);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ATTRIBUTE_RELATIONSHIPS);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__DISCRETIZATION_METHOD);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__DISCRETIZATION_BUCKET_COUNT);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ROOT_MEMBER_IF);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ORDER_BY);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__DEFAULT_MEMBER);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ORDER_BY_ATTRIBUTE_ID);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__SKIPPED_LEVELS_COLUMN);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__NAMING_TEMPLATE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__MEMBERS_WITH_DATA);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__MEMBERS_WITH_DATA_CAPTION);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__NAMING_TEMPLATE_TRANSLATIONS);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__CUSTOM_ROLLUP_COLUMN);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__CUSTOM_ROLLUP_PROPERTIES_COLUMN);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__UNARY_OPERATOR_COLUMN);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ATTRIBUTE_HIERARCHY_ORDERED);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__MEMBER_NAMES_UNIQUE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__IS_AGGREGATABLE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ATTRIBUTE_HIERARCHY_ENABLED);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ATTRIBUTE_HIERARCHY_OPTIMIZED_STATE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ATTRIBUTE_HIERARCHY_VISIBLE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ATTRIBUTE_HIERARCHY_DISPLAY_FOLDER);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__KEY_UNIQUENESS_GUARANTEE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__GROUPING_BEHAVIOR);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__INSTANCE_SELECTION);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ANNOTATIONS);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__PROCESSING_STATE);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__ATTRIBUTE_HIERARCHY_PROCESSING_STATE);
		createEReference(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__VISUALIZATION_PROPERTIES);
		createEAttribute(dimensionAttributeEClass, DIMENSION_ATTRIBUTE__EXTENDED_TYPE);

		dimensionBindingEClass = createEClass(DIMENSION_BINDING);
		createEAttribute(dimensionBindingEClass, DIMENSION_BINDING__DATA_SOURCE_ID);
		createEAttribute(dimensionBindingEClass, DIMENSION_BINDING__DIMENSION_ID);
		createEAttribute(dimensionBindingEClass, DIMENSION_BINDING__PERSISTENCE);
		createEAttribute(dimensionBindingEClass, DIMENSION_BINDING__REFRESH_POLICY);
		createEAttribute(dimensionBindingEClass, DIMENSION_BINDING__REFRESH_INTERVAL);

		dimensionPermissionEClass = createEClass(DIMENSION_PERMISSION);
		createEReference(dimensionPermissionEClass, DIMENSION_PERMISSION__ATTRIBUTE_PERMISSIONS);
		createEAttribute(dimensionPermissionEClass, DIMENSION_PERMISSION__WRITE);
		createEAttribute(dimensionPermissionEClass, DIMENSION_PERMISSION__ALLOWED_ROWS_EXPRESSION);

		dimensionPermissionsTypeEClass = createEClass(DIMENSION_PERMISSIONS_TYPE);
		createEReference(dimensionPermissionsTypeEClass, DIMENSION_PERMISSIONS_TYPE__DIMENSION_PERMISSION);

		dimensionPermissionsType1EClass = createEClass(DIMENSION_PERMISSIONS_TYPE1);
		createEReference(dimensionPermissionsType1EClass, DIMENSION_PERMISSIONS_TYPE1__DIMENSION_PERMISSION);

		dimensionsTypeEClass = createEClass(DIMENSIONS_TYPE);
		createEReference(dimensionsTypeEClass, DIMENSIONS_TYPE__DIMENSION);

		discoverResponseTypeEClass = createEClass(DISCOVER_RESPONSE_TYPE);
		createEReference(discoverResponseTypeEClass, DISCOVER_RESPONSE_TYPE__RETURN);

		discoverTypeEClass = createEClass(DISCOVER_TYPE);
		createEAttribute(discoverTypeEClass, DISCOVER_TYPE__REQUEST_TYPE);
		createEReference(discoverTypeEClass, DISCOVER_TYPE__RESTRICTIONS);
		createEReference(discoverTypeEClass, DISCOVER_TYPE__PROPERTIES);

		documentRootEClass = createEClass(DOCUMENT_ROOT);
		createEAttribute(documentRootEClass, DOCUMENT_ROOT__MIXED);
		createEReference(documentRootEClass, DOCUMENT_ROOT__XMLNS_PREFIX_MAP);
		createEReference(documentRootEClass, DOCUMENT_ROOT__XSI_SCHEMA_LOCATION);
		createEReference(documentRootEClass, DOCUMENT_ROOT__ACTION);
		createEAttribute(documentRootEClass, DOCUMENT_ROOT__ALLOWED_ROWS_EXPRESSION);
		createEReference(documentRootEClass, DOCUMENT_ROOT__BEGIN_SESSION);
		createEReference(documentRootEClass, DOCUMENT_ROOT__CLEAR_RESULT);
		createEReference(documentRootEClass, DOCUMENT_ROOT__DISCOVER);
		createEReference(documentRootEClass, DOCUMENT_ROOT__DISCOVER_RESPONSE);
		createEReference(documentRootEClass, DOCUMENT_ROOT__END_SESSION);
		createEReference(documentRootEClass, DOCUMENT_ROOT__EVENT);
		createEReference(documentRootEClass, DOCUMENT_ROOT__EVENT_SESSION);
		createEReference(documentRootEClass, DOCUMENT_ROOT__EVENT_TYPE);
		createEReference(documentRootEClass, DOCUMENT_ROOT__EXECUTE);
		createEReference(documentRootEClass, DOCUMENT_ROOT__EXECUTE_RESPONSE);
		createEReference(documentRootEClass, DOCUMENT_ROOT__KEEP_RESULT);
		createEReference(documentRootEClass, DOCUMENT_ROOT__PARAMETER);
		createEReference(documentRootEClass, DOCUMENT_ROOT__RESULT);
		createEReference(documentRootEClass, DOCUMENT_ROOT__SESSION);
		createEAttribute(documentRootEClass, DOCUMENT_ROOT__SHARE_DIMENSION_STORAGE);
		createEReference(documentRootEClass, DOCUMENT_ROOT__TARGET);

		drillThroughActionEClass = createEClass(DRILL_THROUGH_ACTION);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__NAME);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__ID);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__CAPTION);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__CAPTION_IS_MDX);
		createEReference(drillThroughActionEClass, DRILL_THROUGH_ACTION__TRANSLATIONS);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__TARGET_TYPE);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__TARGET);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__CONDITION);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__TYPE);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__INVOCATION);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__APPLICATION);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__DESCRIPTION);
		createEReference(drillThroughActionEClass, DRILL_THROUGH_ACTION__ANNOTATIONS);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__DEFAULT);
		createEReference(drillThroughActionEClass, DRILL_THROUGH_ACTION__COLUMNS);
		createEAttribute(drillThroughActionEClass, DRILL_THROUGH_ACTION__MAXIMUM_ROWS);

		dropEClass = createEClass(DROP);
		createEReference(dropEClass, DROP__OBJECT);
		createEAttribute(dropEClass, DROP__DELETE_WITH_DESCENDANTS);
		createEReference(dropEClass, DROP__WHERE);

		dsvTableBindingEClass = createEClass(DSV_TABLE_BINDING);
		createEAttribute(dsvTableBindingEClass, DSV_TABLE_BINDING__DATA_SOURCE_VIEW_ID);
		createEAttribute(dsvTableBindingEClass, DSV_TABLE_BINDING__TABLE_ID);
		createEAttribute(dsvTableBindingEClass, DSV_TABLE_BINDING__DATA_EMBEDDING_STYLE);

		endOfDataTypeEClass = createEClass(END_OF_DATA_TYPE);
		createEAttribute(endOfDataTypeEClass, END_OF_DATA_TYPE__PARAMETER);

		endSessionTypeEClass = createEClass(END_SESSION_TYPE);
		createEAttribute(endSessionTypeEClass, END_SESSION_TYPE__MUST_UNDERSTAND);
		createEAttribute(endSessionTypeEClass, END_SESSION_TYPE__SESSION_ID);

		errorConfigurationEClass = createEClass(ERROR_CONFIGURATION);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__KEY_ERROR_LIMIT);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__KEY_ERROR_LOG_FILE);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__KEY_ERROR_ACTION);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__KEY_ERROR_LIMIT_ACTION);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__KEY_NOT_FOUND);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__KEY_DUPLICATE);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__NULL_KEY_CONVERTED_TO_UNKNOWN);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__NULL_KEY_NOT_ALLOWED);
		createEAttribute(errorConfigurationEClass, ERROR_CONFIGURATION__CALCULATION_ERROR);

		eventEClass = createEClass(EVENT);
		createEAttribute(eventEClass, EVENT__EVENT_ID);
		createEReference(eventEClass, EVENT__COLUMNS);

		eventCategoryTypeEClass = createEClass(EVENT_CATEGORY_TYPE);
		createEAttribute(eventCategoryTypeEClass, EVENT_CATEGORY_TYPE__NAME);
		createEAttribute(eventCategoryTypeEClass, EVENT_CATEGORY_TYPE__TYPE);
		createEAttribute(eventCategoryTypeEClass, EVENT_CATEGORY_TYPE__DESCRIPTION);
		createEReference(eventCategoryTypeEClass, EVENT_CATEGORY_TYPE__EVENT_LIST);

		eventColumnEClass = createEClass(EVENT_COLUMN);
		createEAttribute(eventColumnEClass, EVENT_COLUMN__ID);
		createEReference(eventColumnEClass, EVENT_COLUMN__EVENT_COLUMN_SUBCLASS_LIST);

		eventColumnIDEClass = createEClass(EVENT_COLUMN_ID);
		createEAttribute(eventColumnIDEClass, EVENT_COLUMN_ID__COLUMN_ID);

		eventColumnListTypeEClass = createEClass(EVENT_COLUMN_LIST_TYPE);
		createEReference(eventColumnListTypeEClass, EVENT_COLUMN_LIST_TYPE__EVENT_COLUMN);

		eventColumnSubclassListTypeEClass = createEClass(EVENT_COLUMN_SUBCLASS_LIST_TYPE);
		createEReference(eventColumnSubclassListTypeEClass, EVENT_COLUMN_SUBCLASS_LIST_TYPE__EVENT_COLUMN_SUBCLASS);

		eventColumnSubclassTypeEClass = createEClass(EVENT_COLUMN_SUBCLASS_TYPE);
		createEAttribute(eventColumnSubclassTypeEClass, EVENT_COLUMN_SUBCLASS_TYPE__ID);
		createEAttribute(eventColumnSubclassTypeEClass, EVENT_COLUMN_SUBCLASS_TYPE__NAME);

		eventListTypeEClass = createEClass(EVENT_LIST_TYPE);
		createEReference(eventListTypeEClass, EVENT_LIST_TYPE__EVENT);

		eventSessionTypeEClass = createEClass(EVENT_SESSION_TYPE);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__TEMPLATE_CATEGORY);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__TEMPLATE_NAME);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__TEMPLATE_DESCRIPTION);
		createEReference(eventSessionTypeEClass, EVENT_SESSION_TYPE__EVENT);
		createEReference(eventSessionTypeEClass, EVENT_SESSION_TYPE__TARGET);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__DISPATCH_LATENCY);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__EVENT_RETENTION_MODE);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__MAX_EVENT_SIZE);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__MAX_MEMORY);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__MEMORY_PARTITION_MODE);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__NAME);
		createEAttribute(eventSessionTypeEClass, EVENT_SESSION_TYPE__TRACK_CAUSALITY);

		eventsTypeEClass = createEClass(EVENTS_TYPE);
		createEReference(eventsTypeEClass, EVENTS_TYPE__EVENT);

		eventTypeEClass = createEClass(EVENT_TYPE);
		createEAttribute(eventTypeEClass, EVENT_TYPE__FIELD);
		createEAttribute(eventTypeEClass, EVENT_TYPE__MODULE);
		createEAttribute(eventTypeEClass, EVENT_TYPE__NAME);
		createEAttribute(eventTypeEClass, EVENT_TYPE__PACKAGE);

		eventType1EClass = createEClass(EVENT_TYPE1);
		createEReference(eventType1EClass, EVENT_TYPE1__ACTION);
		createEReference(eventType1EClass, EVENT_TYPE1__PARAMETER);
		createEReference(eventType1EClass, EVENT_TYPE1__PREDICATE);
		createEAttribute(eventType1EClass, EVENT_TYPE1__MODULE);
		createEAttribute(eventType1EClass, EVENT_TYPE1__NAME);
		createEAttribute(eventType1EClass, EVENT_TYPE1__PACKAGE);

		eventTypeTypeEClass = createEClass(EVENT_TYPE_TYPE);
		createEReference(eventTypeTypeEClass, EVENT_TYPE_TYPE__EVENTS);
		createEReference(eventTypeTypeEClass, EVENT_TYPE_TYPE__XEVENT);

		executeParameterEClass = createEClass(EXECUTE_PARAMETER);
		createEAttribute(executeParameterEClass, EXECUTE_PARAMETER__NAME);
		createEReference(executeParameterEClass, EXECUTE_PARAMETER__VALUE);

		executeResponseTypeEClass = createEClass(EXECUTE_RESPONSE_TYPE);
		createEReference(executeResponseTypeEClass, EXECUTE_RESPONSE_TYPE__RETURN);

		executeTypeEClass = createEClass(EXECUTE_TYPE);
		createEReference(executeTypeEClass, EXECUTE_TYPE__COMMAND);
		createEReference(executeTypeEClass, EXECUTE_TYPE__PROPERTIES);
		createEReference(executeTypeEClass, EXECUTE_TYPE__PARAMETERS);

		filesTypeEClass = createEClass(FILES_TYPE);
		createEReference(filesTypeEClass, FILES_TYPE__FILE);

		folderEClass = createEClass(FOLDER);
		createEAttribute(folderEClass, FOLDER__ORIGINAL);
		createEAttribute(folderEClass, FOLDER__NEW);

		foldingParametersEClass = createEClass(FOLDING_PARAMETERS);
		createEAttribute(foldingParametersEClass, FOLDING_PARAMETERS__FOLD_INDEX);
		createEAttribute(foldingParametersEClass, FOLDING_PARAMETERS__FOLD_COUNT);
		createEAttribute(foldingParametersEClass, FOLDING_PARAMETERS__FOLD_MAX_CASES);
		createEAttribute(foldingParametersEClass, FOLDING_PARAMETERS__FOLD_TARGET_ATTRIBUTE);

		foreignKeyColumnsTypeEClass = createEClass(FOREIGN_KEY_COLUMNS_TYPE);
		createEReference(foreignKeyColumnsTypeEClass, FOREIGN_KEY_COLUMNS_TYPE__FOREIGN_KEY_COLUMN);

		foreignKeyColumnsType1EClass = createEClass(FOREIGN_KEY_COLUMNS_TYPE1);
		createEReference(foreignKeyColumnsType1EClass, FOREIGN_KEY_COLUMNS_TYPE1__FOREIGN_KEY_COLUMN);

		foreignKeyColumnTypeEClass = createEClass(FOREIGN_KEY_COLUMN_TYPE);
		createEReference(foreignKeyColumnTypeEClass, FOREIGN_KEY_COLUMN_TYPE__SOURCE);

		globalTypeEClass = createEClass(GLOBAL_TYPE);
		createEAttribute(globalTypeEClass, GLOBAL_TYPE__MODULE);
		createEAttribute(globalTypeEClass, GLOBAL_TYPE__NAME);
		createEAttribute(globalTypeEClass, GLOBAL_TYPE__PACKAGE);

		groupEClass = createEClass(GROUP);
		createEAttribute(groupEClass, GROUP__NAME);
		createEReference(groupEClass, GROUP__MEMBERS);

		groupsTypeEClass = createEClass(GROUPS_TYPE);
		createEReference(groupsTypeEClass, GROUPS_TYPE__GROUP);

		hierarchiesTypeEClass = createEClass(HIERARCHIES_TYPE);
		createEReference(hierarchiesTypeEClass, HIERARCHIES_TYPE__HIERARCHY);

		hierarchiesType1EClass = createEClass(HIERARCHIES_TYPE1);
		createEReference(hierarchiesType1EClass, HIERARCHIES_TYPE1__HIERARCHY);

		hierarchiesType2EClass = createEClass(HIERARCHIES_TYPE2);
		createEReference(hierarchiesType2EClass, HIERARCHIES_TYPE2__HIERARCHY);

		hierarchyEClass = createEClass(HIERARCHY);
		createEAttribute(hierarchyEClass, HIERARCHY__NAME);
		createEAttribute(hierarchyEClass, HIERARCHY__ID);
		createEAttribute(hierarchyEClass, HIERARCHY__DESCRIPTION);
		createEAttribute(hierarchyEClass, HIERARCHY__PROCESSING_STATE);
		createEAttribute(hierarchyEClass, HIERARCHY__STRUCTURE_TYPE);
		createEAttribute(hierarchyEClass, HIERARCHY__DISPLAY_FOLDER);
		createEReference(hierarchyEClass, HIERARCHY__TRANSLATIONS);
		createEAttribute(hierarchyEClass, HIERARCHY__ALL_MEMBER_NAME);
		createEReference(hierarchyEClass, HIERARCHY__ALL_MEMBER_TRANSLATIONS);
		createEAttribute(hierarchyEClass, HIERARCHY__MEMBER_NAMES_UNIQUE);
		createEAttribute(hierarchyEClass, HIERARCHY__MEMBER_KEYS_UNIQUE);
		createEAttribute(hierarchyEClass, HIERARCHY__ALLOW_DUPLICATE_NAMES);
		createEReference(hierarchyEClass, HIERARCHY__LEVELS);
		createEReference(hierarchyEClass, HIERARCHY__ANNOTATIONS);
		createEReference(hierarchyEClass, HIERARCHY__VISUALIZATION_PROPERTIES);

		imageLoadEClass = createEClass(IMAGE_LOAD);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__IMAGE_PATH);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__IMAGE_URL);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__IMAGE_UNIQUE_ID);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__IMAGE_VERSION);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__READ_WRITE_MODE);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__DB_STORAGE_LOCATION);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__DATABASE_NAME);
		createEAttribute(imageLoadEClass, IMAGE_LOAD__DATABASE_ID);
		createEReference(imageLoadEClass, IMAGE_LOAD__DATA);

		imageSaveEClass = createEClass(IMAGE_SAVE);
		createEReference(imageSaveEClass, IMAGE_SAVE__OBJECT);
		createEAttribute(imageSaveEClass, IMAGE_SAVE__DATA);

		incrementalProcessingNotificationEClass = createEClass(INCREMENTAL_PROCESSING_NOTIFICATION);
		createEAttribute(incrementalProcessingNotificationEClass, INCREMENTAL_PROCESSING_NOTIFICATION__TABLE_ID);
		createEAttribute(incrementalProcessingNotificationEClass, INCREMENTAL_PROCESSING_NOTIFICATION__PROCESSING_QUERY);

		incrementalProcessingNotificationsTypeEClass = createEClass(INCREMENTAL_PROCESSING_NOTIFICATIONS_TYPE);
		createEReference(incrementalProcessingNotificationsTypeEClass, INCREMENTAL_PROCESSING_NOTIFICATIONS_TYPE__INCREMENTAL_PROCESSING_NOTIFICATION);

		inheritedBindingEClass = createEClass(INHERITED_BINDING);

		insertEClass = createEClass(INSERT);
		createEReference(insertEClass, INSERT__OBJECT);
		createEReference(insertEClass, INSERT__ATTRIBUTES);

		keepResultTypeEClass = createEClass(KEEP_RESULT_TYPE);

		keyColumnsTypeEClass = createEClass(KEY_COLUMNS_TYPE);
		createEReference(keyColumnsTypeEClass, KEY_COLUMNS_TYPE__KEY_COLUMN);

		keyColumnsType1EClass = createEClass(KEY_COLUMNS_TYPE1);
		createEReference(keyColumnsType1EClass, KEY_COLUMNS_TYPE1__KEY_COLUMN);

		keyColumnsType2EClass = createEClass(KEY_COLUMNS_TYPE2);
		createEReference(keyColumnsType2EClass, KEY_COLUMNS_TYPE2__KEY_COLUMN);

		keyColumnsType3EClass = createEClass(KEY_COLUMNS_TYPE3);
		createEReference(keyColumnsType3EClass, KEY_COLUMNS_TYPE3__KEY_COLUMN);

		keyColumnsType4EClass = createEClass(KEY_COLUMNS_TYPE4);
		createEReference(keyColumnsType4EClass, KEY_COLUMNS_TYPE4__KEY_COLUMN);

		keyColumnTypeEClass = createEClass(KEY_COLUMN_TYPE);
		createEReference(keyColumnTypeEClass, KEY_COLUMN_TYPE__SOURCE);

		keysTypeEClass = createEClass(KEYS_TYPE);
		createEAttribute(keysTypeEClass, KEYS_TYPE__KEY);

		keysType1EClass = createEClass(KEYS_TYPE1);
		createEAttribute(keysType1EClass, KEYS_TYPE1__KEY);

		kpiEClass = createEClass(KPI);
		createEAttribute(kpiEClass, KPI__NAME);
		createEAttribute(kpiEClass, KPI__ID);
		createEAttribute(kpiEClass, KPI__DESCRIPTION);
		createEReference(kpiEClass, KPI__TRANSLATIONS);
		createEAttribute(kpiEClass, KPI__DISPLAY_FOLDER);
		createEAttribute(kpiEClass, KPI__ASSOCIATED_MEASURE_GROUP_ID);
		createEAttribute(kpiEClass, KPI__VALUE);
		createEAttribute(kpiEClass, KPI__GOAL);
		createEAttribute(kpiEClass, KPI__STATUS);
		createEAttribute(kpiEClass, KPI__TREND);
		createEAttribute(kpiEClass, KPI__WEIGHT);
		createEAttribute(kpiEClass, KPI__TREND_GRAPHIC);
		createEAttribute(kpiEClass, KPI__STATUS_GRAPHIC);
		createEAttribute(kpiEClass, KPI__CURRENT_TIME_MEMBER);
		createEAttribute(kpiEClass, KPI__PARENT_KPI_ID);
		createEReference(kpiEClass, KPI__ANNOTATIONS);

		kpisTypeEClass = createEClass(KPIS_TYPE);
		createEReference(kpisTypeEClass, KPIS_TYPE__KPI);

		kpisType1EClass = createEClass(KPIS_TYPE1);
		createEReference(kpisType1EClass, KPIS_TYPE1__KPI);

		levelEClass = createEClass(LEVEL);
		createEAttribute(levelEClass, LEVEL__NAME);
		createEAttribute(levelEClass, LEVEL__ID);
		createEAttribute(levelEClass, LEVEL__DESCRIPTION);
		createEAttribute(levelEClass, LEVEL__SOURCE_ATTRIBUTE_ID);
		createEAttribute(levelEClass, LEVEL__HIDE_MEMBER_IF);
		createEReference(levelEClass, LEVEL__TRANSLATIONS);
		createEReference(levelEClass, LEVEL__ANNOTATIONS);

		levelsTypeEClass = createEClass(LEVELS_TYPE);
		createEReference(levelsTypeEClass, LEVELS_TYPE__LEVEL);

		locationEClass = createEClass(LOCATION);

		locationBackupEClass = createEClass(LOCATION_BACKUP);
		createEAttribute(locationBackupEClass, LOCATION_BACKUP__FILE);
		createEAttribute(locationBackupEClass, LOCATION_BACKUP__DATA_SOURCE_ID);

		locationsTypeEClass = createEClass(LOCATIONS_TYPE);
		createEReference(locationsTypeEClass, LOCATIONS_TYPE__LOCATION);

		locationsType1EClass = createEClass(LOCATIONS_TYPE1);
		createEReference(locationsType1EClass, LOCATIONS_TYPE1__LOCATION);

		locationsType2EClass = createEClass(LOCATIONS_TYPE2);
		createEReference(locationsType2EClass, LOCATIONS_TYPE2__LOCATION);

		lockEClass = createEClass(LOCK);
		createEAttribute(lockEClass, LOCK__ID);
		createEReference(lockEClass, LOCK__OBJECT);
		createEAttribute(lockEClass, LOCK__MODE);

		majorObjectEClass = createEClass(MAJOR_OBJECT);
		createEReference(majorObjectEClass, MAJOR_OBJECT__AGGREGATION_DESIGN);
		createEReference(majorObjectEClass, MAJOR_OBJECT__ASSEMBLY);
		createEReference(majorObjectEClass, MAJOR_OBJECT__CUBE);
		createEReference(majorObjectEClass, MAJOR_OBJECT__DATABASE);
		createEReference(majorObjectEClass, MAJOR_OBJECT__DATA_SOURCE);
		createEReference(majorObjectEClass, MAJOR_OBJECT__DATA_SOURCE_VIEW);
		createEReference(majorObjectEClass, MAJOR_OBJECT__DIMENSION);
		createEReference(majorObjectEClass, MAJOR_OBJECT__MDX_SCRIPT);
		createEReference(majorObjectEClass, MAJOR_OBJECT__MEASURE_GROUP);
		createEReference(majorObjectEClass, MAJOR_OBJECT__MINING_MODEL);
		createEReference(majorObjectEClass, MAJOR_OBJECT__MINING_STRUCTURE);
		createEReference(majorObjectEClass, MAJOR_OBJECT__PARTITION);
		createEReference(majorObjectEClass, MAJOR_OBJECT__PERMISSION);
		createEReference(majorObjectEClass, MAJOR_OBJECT__PERSPECTIVE);
		createEReference(majorObjectEClass, MAJOR_OBJECT__ROLE);
		createEReference(majorObjectEClass, MAJOR_OBJECT__SERVER);
		createEReference(majorObjectEClass, MAJOR_OBJECT__TRACE);

		manyToManyMeasureGroupDimensionEClass = createEClass(MANY_TO_MANY_MEASURE_GROUP_DIMENSION);
		createEAttribute(manyToManyMeasureGroupDimensionEClass, MANY_TO_MANY_MEASURE_GROUP_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(manyToManyMeasureGroupDimensionEClass, MANY_TO_MANY_MEASURE_GROUP_DIMENSION__ANNOTATIONS);
		createEReference(manyToManyMeasureGroupDimensionEClass, MANY_TO_MANY_MEASURE_GROUP_DIMENSION__SOURCE);
		createEAttribute(manyToManyMeasureGroupDimensionEClass, MANY_TO_MANY_MEASURE_GROUP_DIMENSION__MEASURE_GROUP_ID);
		createEAttribute(manyToManyMeasureGroupDimensionEClass, MANY_TO_MANY_MEASURE_GROUP_DIMENSION__DIRECT_SLICE);

		mdxScriptEClass = createEClass(MDX_SCRIPT);
		createEAttribute(mdxScriptEClass, MDX_SCRIPT__NAME);
		createEAttribute(mdxScriptEClass, MDX_SCRIPT__ID);
		createEAttribute(mdxScriptEClass, MDX_SCRIPT__CREATED_TIMESTAMP);
		createEAttribute(mdxScriptEClass, MDX_SCRIPT__LAST_SCHEMA_UPDATE);
		createEAttribute(mdxScriptEClass, MDX_SCRIPT__DESCRIPTION);
		createEReference(mdxScriptEClass, MDX_SCRIPT__ANNOTATIONS);
		createEReference(mdxScriptEClass, MDX_SCRIPT__COMMANDS);
		createEAttribute(mdxScriptEClass, MDX_SCRIPT__DEFAULT_SCRIPT);
		createEReference(mdxScriptEClass, MDX_SCRIPT__CALCULATION_PROPERTIES);

		mdxScriptsTypeEClass = createEClass(MDX_SCRIPTS_TYPE);
		createEReference(mdxScriptsTypeEClass, MDX_SCRIPTS_TYPE__MDX_SCRIPT);

		measureEClass = createEClass(MEASURE);
		createEAttribute(measureEClass, MEASURE__NAME);
		createEAttribute(measureEClass, MEASURE__ID);
		createEAttribute(measureEClass, MEASURE__DESCRIPTION);
		createEAttribute(measureEClass, MEASURE__AGGREGATE_FUNCTION);
		createEAttribute(measureEClass, MEASURE__DATA_TYPE);
		createEReference(measureEClass, MEASURE__SOURCE);
		createEAttribute(measureEClass, MEASURE__VISIBLE);
		createEAttribute(measureEClass, MEASURE__MEASURE_EXPRESSION);
		createEAttribute(measureEClass, MEASURE__DISPLAY_FOLDER);
		createEAttribute(measureEClass, MEASURE__FORMAT_STRING);
		createEAttribute(measureEClass, MEASURE__BACK_COLOR);
		createEAttribute(measureEClass, MEASURE__FORE_COLOR);
		createEAttribute(measureEClass, MEASURE__FONT_NAME);
		createEAttribute(measureEClass, MEASURE__FONT_SIZE);
		createEAttribute(measureEClass, MEASURE__FONT_FLAGS);
		createEReference(measureEClass, MEASURE__TRANSLATIONS);
		createEReference(measureEClass, MEASURE__ANNOTATIONS);

		measureBindingEClass = createEClass(MEASURE_BINDING);
		createEAttribute(measureBindingEClass, MEASURE_BINDING__MEASURE_ID);

		measureGroupEClass = createEClass(MEASURE_GROUP);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__NAME);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__ID);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__CREATED_TIMESTAMP);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__LAST_SCHEMA_UPDATE);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__DESCRIPTION);
		createEReference(measureGroupEClass, MEASURE_GROUP__ANNOTATIONS);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__LAST_PROCESSED);
		createEReference(measureGroupEClass, MEASURE_GROUP__TRANSLATIONS);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__TYPE);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__STATE);
		createEReference(measureGroupEClass, MEASURE_GROUP__MEASURES);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__DATA_AGGREGATION);
		createEReference(measureGroupEClass, MEASURE_GROUP__SOURCE);
		createEReference(measureGroupEClass, MEASURE_GROUP__STORAGE_MODE);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__STORAGE_LOCATION);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__IGNORE_UNRELATED_DIMENSIONS);
		createEReference(measureGroupEClass, MEASURE_GROUP__PROACTIVE_CACHING);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__ESTIMATED_ROWS);
		createEReference(measureGroupEClass, MEASURE_GROUP__ERROR_CONFIGURATION);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__ESTIMATED_SIZE);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__PROCESSING_MODE);
		createEReference(measureGroupEClass, MEASURE_GROUP__DIMENSIONS);
		createEReference(measureGroupEClass, MEASURE_GROUP__PARTITIONS);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__AGGREGATION_PREFIX);
		createEAttribute(measureGroupEClass, MEASURE_GROUP__PROCESSING_PRIORITY);
		createEReference(measureGroupEClass, MEASURE_GROUP__AGGREGATION_DESIGNS);

		measureGroupAttributeEClass = createEClass(MEASURE_GROUP_ATTRIBUTE);
		createEAttribute(measureGroupAttributeEClass, MEASURE_GROUP_ATTRIBUTE__ATTRIBUTE_ID);
		createEReference(measureGroupAttributeEClass, MEASURE_GROUP_ATTRIBUTE__KEY_COLUMNS);
		createEAttribute(measureGroupAttributeEClass, MEASURE_GROUP_ATTRIBUTE__TYPE);
		createEReference(measureGroupAttributeEClass, MEASURE_GROUP_ATTRIBUTE__ANNOTATIONS);

		measureGroupBindingEClass = createEClass(MEASURE_GROUP_BINDING);
		createEAttribute(measureGroupBindingEClass, MEASURE_GROUP_BINDING__DATA_SOURCE_ID);
		createEAttribute(measureGroupBindingEClass, MEASURE_GROUP_BINDING__CUBE_ID);
		createEAttribute(measureGroupBindingEClass, MEASURE_GROUP_BINDING__MEASURE_GROUP_ID);
		createEAttribute(measureGroupBindingEClass, MEASURE_GROUP_BINDING__PERSISTENCE);
		createEAttribute(measureGroupBindingEClass, MEASURE_GROUP_BINDING__REFRESH_POLICY);
		createEAttribute(measureGroupBindingEClass, MEASURE_GROUP_BINDING__REFRESH_INTERVAL);
		createEAttribute(measureGroupBindingEClass, MEASURE_GROUP_BINDING__FILTER);

		measureGroupDimensionEClass = createEClass(MEASURE_GROUP_DIMENSION);

		measureGroupDimensionBindingEClass = createEClass(MEASURE_GROUP_DIMENSION_BINDING);
		createEAttribute(measureGroupDimensionBindingEClass, MEASURE_GROUP_DIMENSION_BINDING__CUBE_DIMENSION_ID);

		measureGroupsTypeEClass = createEClass(MEASURE_GROUPS_TYPE);
		createEReference(measureGroupsTypeEClass, MEASURE_GROUPS_TYPE__MEASURE_GROUP);

		measureGroupsType1EClass = createEClass(MEASURE_GROUPS_TYPE1);
		createEReference(measureGroupsType1EClass, MEASURE_GROUPS_TYPE1__MEASURE_GROUP);

		measuresTypeEClass = createEClass(MEASURES_TYPE);
		createEReference(measuresTypeEClass, MEASURES_TYPE__MEASURE);

		measuresType1EClass = createEClass(MEASURES_TYPE1);
		createEReference(measuresType1EClass, MEASURES_TYPE1__MEASURE);

		measuresType2EClass = createEClass(MEASURES_TYPE2);
		createEReference(measuresType2EClass, MEASURES_TYPE2__MEASURE);

		memberEClass = createEClass(MEMBER);
		createEAttribute(memberEClass, MEMBER__NAME);
		createEAttribute(memberEClass, MEMBER__SID);

		membersTypeEClass = createEClass(MEMBERS_TYPE);
		createEAttribute(membersTypeEClass, MEMBERS_TYPE__MEMBER);

		membersType1EClass = createEClass(MEMBERS_TYPE1);
		createEReference(membersType1EClass, MEMBERS_TYPE1__MEMBER);

		mergePartitionsEClass = createEClass(MERGE_PARTITIONS);
		createEReference(mergePartitionsEClass, MERGE_PARTITIONS__SOURCES);
		createEReference(mergePartitionsEClass, MERGE_PARTITIONS__TARGET);

		miningModelEClass = createEClass(MINING_MODEL);
		createEAttribute(miningModelEClass, MINING_MODEL__NAME);
		createEAttribute(miningModelEClass, MINING_MODEL__ID);
		createEAttribute(miningModelEClass, MINING_MODEL__CREATED_TIMESTAMP);
		createEAttribute(miningModelEClass, MINING_MODEL__LAST_SCHEMA_UPDATE);
		createEAttribute(miningModelEClass, MINING_MODEL__DESCRIPTION);
		createEReference(miningModelEClass, MINING_MODEL__ANNOTATIONS);
		createEAttribute(miningModelEClass, MINING_MODEL__ALGORITHM);
		createEAttribute(miningModelEClass, MINING_MODEL__LAST_PROCESSED);
		createEReference(miningModelEClass, MINING_MODEL__ALGORITHM_PARAMETERS);
		createEAttribute(miningModelEClass, MINING_MODEL__ALLOW_DRILL_THROUGH);
		createEReference(miningModelEClass, MINING_MODEL__TRANSLATIONS);
		createEReference(miningModelEClass, MINING_MODEL__COLUMNS);
		createEAttribute(miningModelEClass, MINING_MODEL__STATE);
		createEReference(miningModelEClass, MINING_MODEL__FOLDING_PARAMETERS);
		createEAttribute(miningModelEClass, MINING_MODEL__FILTER);
		createEReference(miningModelEClass, MINING_MODEL__MINING_MODEL_PERMISSIONS);
		createEAttribute(miningModelEClass, MINING_MODEL__LANGUAGE);
		createEAttribute(miningModelEClass, MINING_MODEL__COLLATION);

		miningModelColumnEClass = createEClass(MINING_MODEL_COLUMN);
		createEAttribute(miningModelColumnEClass, MINING_MODEL_COLUMN__NAME);
		createEAttribute(miningModelColumnEClass, MINING_MODEL_COLUMN__ID);
		createEAttribute(miningModelColumnEClass, MINING_MODEL_COLUMN__DESCRIPTION);
		createEAttribute(miningModelColumnEClass, MINING_MODEL_COLUMN__SOURCE_COLUMN_ID);
		createEAttribute(miningModelColumnEClass, MINING_MODEL_COLUMN__USAGE);
		createEAttribute(miningModelColumnEClass, MINING_MODEL_COLUMN__FILTER);
		createEReference(miningModelColumnEClass, MINING_MODEL_COLUMN__TRANSLATIONS);
		createEReference(miningModelColumnEClass, MINING_MODEL_COLUMN__COLUMNS);
		createEReference(miningModelColumnEClass, MINING_MODEL_COLUMN__MODELING_FLAGS);
		createEReference(miningModelColumnEClass, MINING_MODEL_COLUMN__ANNOTATIONS);

		miningModelingFlagEClass = createEClass(MINING_MODELING_FLAG);
		createEAttribute(miningModelingFlagEClass, MINING_MODELING_FLAG__MODELING_FLAG);

		miningModelPermissionEClass = createEClass(MINING_MODEL_PERMISSION);
		createEAttribute(miningModelPermissionEClass, MINING_MODEL_PERMISSION__ALLOW_DRILL_THROUGH);
		createEAttribute(miningModelPermissionEClass, MINING_MODEL_PERMISSION__ALLOW_BROWSING);
		createEAttribute(miningModelPermissionEClass, MINING_MODEL_PERMISSION__WRITE);

		miningModelPermissionsTypeEClass = createEClass(MINING_MODEL_PERMISSIONS_TYPE);
		createEReference(miningModelPermissionsTypeEClass, MINING_MODEL_PERMISSIONS_TYPE__MINING_MODEL_PERMISSION);

		miningModelsTypeEClass = createEClass(MINING_MODELS_TYPE);
		createEReference(miningModelsTypeEClass, MINING_MODELS_TYPE__MINING_MODEL);

		miningStructureEClass = createEClass(MINING_STRUCTURE);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__NAME);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__ID);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__CREATED_TIMESTAMP);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__LAST_SCHEMA_UPDATE);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__DESCRIPTION);
		createEReference(miningStructureEClass, MINING_STRUCTURE__ANNOTATIONS);
		createEReference(miningStructureEClass, MINING_STRUCTURE__SOURCE);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__LAST_PROCESSED);
		createEReference(miningStructureEClass, MINING_STRUCTURE__TRANSLATIONS);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__LANGUAGE);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__COLLATION);
		createEReference(miningStructureEClass, MINING_STRUCTURE__ERROR_CONFIGURATION);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__CACHE_MODE);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__HOLDOUT_MAX_PERCENT);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__HOLDOUT_MAX_CASES);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__HOLDOUT_SEED);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__HOLDOUT_ACTUAL_SIZE);
		createEReference(miningStructureEClass, MINING_STRUCTURE__COLUMNS);
		createEAttribute(miningStructureEClass, MINING_STRUCTURE__STATE);
		createEReference(miningStructureEClass, MINING_STRUCTURE__MINING_STRUCTURE_PERMISSIONS);
		createEReference(miningStructureEClass, MINING_STRUCTURE__MINING_MODELS);

		miningStructureColumnEClass = createEClass(MINING_STRUCTURE_COLUMN);

		miningStructurePermissionEClass = createEClass(MINING_STRUCTURE_PERMISSION);
		createEAttribute(miningStructurePermissionEClass, MINING_STRUCTURE_PERMISSION__ALLOW_DRILL_THROUGH);
		createEAttribute(miningStructurePermissionEClass, MINING_STRUCTURE_PERMISSION__WRITE);

		miningStructurePermissionsTypeEClass = createEClass(MINING_STRUCTURE_PERMISSIONS_TYPE);
		createEReference(miningStructurePermissionsTypeEClass, MINING_STRUCTURE_PERMISSIONS_TYPE__MINING_STRUCTURE_PERMISSION);

		miningStructuresTypeEClass = createEClass(MINING_STRUCTURES_TYPE);
		createEReference(miningStructuresTypeEClass, MINING_STRUCTURES_TYPE__MINING_STRUCTURE);

		modelingFlagsTypeEClass = createEClass(MODELING_FLAGS_TYPE);
		createEReference(modelingFlagsTypeEClass, MODELING_FLAGS_TYPE__MODELING_FLAG);

		modelingFlagsType1EClass = createEClass(MODELING_FLAGS_TYPE1);
		createEReference(modelingFlagsType1EClass, MODELING_FLAGS_TYPE1__MODELING_FLAG);

		nameColumnTypeEClass = createEClass(NAME_COLUMN_TYPE);
		createEReference(nameColumnTypeEClass, NAME_COLUMN_TYPE__SOURCE);

		namingTemplateTranslationsTypeEClass = createEClass(NAMING_TEMPLATE_TRANSLATIONS_TYPE);
		createEReference(namingTemplateTranslationsTypeEClass, NAMING_TEMPLATE_TRANSLATIONS_TYPE__NAMING_TEMPLATE_TRANSLATION);

		notifyTableChangeEClass = createEClass(NOTIFY_TABLE_CHANGE);
		createEReference(notifyTableChangeEClass, NOTIFY_TABLE_CHANGE__OBJECT);
		createEReference(notifyTableChangeEClass, NOTIFY_TABLE_CHANGE__TABLE_NOTIFICATIONS);

		notTypeEClass = createEClass(NOT_TYPE);
		createEReference(notTypeEClass, NOT_TYPE__NOT);
		createEReference(notTypeEClass, NOT_TYPE__OR);
		createEReference(notTypeEClass, NOT_TYPE__AND);
		createEReference(notTypeEClass, NOT_TYPE__EQUAL);
		createEReference(notTypeEClass, NOT_TYPE__NOT_EQUAL);
		createEReference(notTypeEClass, NOT_TYPE__LESS);
		createEReference(notTypeEClass, NOT_TYPE__LESS_OR_EQUAL);
		createEReference(notTypeEClass, NOT_TYPE__GREATER);
		createEReference(notTypeEClass, NOT_TYPE__GREATER_OR_EQUAL);
		createEReference(notTypeEClass, NOT_TYPE__LIKE);
		createEReference(notTypeEClass, NOT_TYPE__NOT_LIKE);

		objectEClass = createEClass(OBJECT);
		createEAttribute(objectEClass, OBJECT__DATABASE);
		createEAttribute(objectEClass, OBJECT__CUBE);
		createEAttribute(objectEClass, OBJECT__DIMENSION);

		objectReferenceEClass = createEClass(OBJECT_REFERENCE);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__SERVER_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__DATABASE_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__ROLE_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__TRACE_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__ASSEMBLY_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__DIMENSION_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__DIMENSION_PERMISSION_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__DATA_SOURCE_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__DATA_SOURCE_PERMISSION_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__DATABASE_PERMISSION_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__DATA_SOURCE_VIEW_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__CUBE_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__MINING_STRUCTURE_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__MEASURE_GROUP_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__PERSPECTIVE_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__CUBE_PERMISSION_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__MDX_SCRIPT_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__PARTITION_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__AGGREGATION_DESIGN_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__MINING_MODEL_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__MINING_MODEL_PERMISSION_ID);
		createEAttribute(objectReferenceEClass, OBJECT_REFERENCE__MINING_STRUCTURE_PERMISSION_ID);

		objectTypeEClass = createEClass(OBJECT_TYPE);
		createEReference(objectTypeEClass, OBJECT_TYPE__DATABASE_ID);

		olapDataSourceEClass = createEClass(OLAP_DATA_SOURCE);

		ordinalTypeEClass = createEClass(ORDINAL_TYPE);
		createEAttribute(ordinalTypeEClass, ORDINAL_TYPE__ORDINAL);

		outOfLineBindingEClass = createEClass(OUT_OF_LINE_BINDING);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__DATABASE_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__DIMENSION_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__CUBE_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__MEASURE_GROUP_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__PARTITION_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__MINING_MODEL_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__MINING_STRUCTURE_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__ATTRIBUTE_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__CUBE_DIMENSION_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__MEASURE_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__PARENT_COLUMN_ID);
		createEAttribute(outOfLineBindingEClass, OUT_OF_LINE_BINDING__COLUMN_ID);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__SOURCE);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__NAME_COLUMN);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__SKIPPED_LEVELS_COLUMN);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__CUSTOM_ROLLUP_COLUMN);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__CUSTOM_ROLLUP_PROPERTIES_COLUMN);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__VALUE_COLUMN);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__UNARY_OPERATOR_COLUMN);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__KEY_COLUMNS);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__FOREIGN_KEY_COLUMNS);
		createEReference(outOfLineBindingEClass, OUT_OF_LINE_BINDING__TRANSLATIONS);

		parallelTypeEClass = createEClass(PARALLEL_TYPE);
		createEReference(parallelTypeEClass, PARALLEL_TYPE__PROCESS);
		createEAttribute(parallelTypeEClass, PARALLEL_TYPE__MAX_PARALLEL);

		parametersEClass = createEClass(PARAMETERS);
		createEReference(parametersEClass, PARAMETERS__PARAMETER);

		parametersTypeEClass = createEClass(PARAMETERS_TYPE);
		createEReference(parametersTypeEClass, PARAMETERS_TYPE__PARAMETER);

		parameterType2EClass = createEClass(PARAMETER_TYPE2);
		createEAttribute(parameterType2EClass, PARAMETER_TYPE2__NAME);
		createEAttribute(parameterType2EClass, PARAMETER_TYPE2__VALUE);

		partitionEClass = createEClass(PARTITION);
		createEAttribute(partitionEClass, PARTITION__NAME);
		createEAttribute(partitionEClass, PARTITION__ID);
		createEAttribute(partitionEClass, PARTITION__CREATED_TIMESTAMP);
		createEAttribute(partitionEClass, PARTITION__LAST_SCHEMA_UPDATE);
		createEAttribute(partitionEClass, PARTITION__DESCRIPTION);
		createEReference(partitionEClass, PARTITION__ANNOTATIONS);
		createEReference(partitionEClass, PARTITION__SOURCE);
		createEAttribute(partitionEClass, PARTITION__PROCESSING_PRIORITY);
		createEAttribute(partitionEClass, PARTITION__AGGREGATION_PREFIX);
		createEReference(partitionEClass, PARTITION__STORAGE_MODE);
		createEAttribute(partitionEClass, PARTITION__PROCESSING_MODE);
		createEReference(partitionEClass, PARTITION__ERROR_CONFIGURATION);
		createEAttribute(partitionEClass, PARTITION__STORAGE_LOCATION);
		createEAttribute(partitionEClass, PARTITION__REMOTE_DATASOURCE_ID);
		createEAttribute(partitionEClass, PARTITION__SLICE);
		createEReference(partitionEClass, PARTITION__PROACTIVE_CACHING);
		createEAttribute(partitionEClass, PARTITION__TYPE);
		createEAttribute(partitionEClass, PARTITION__ESTIMATED_SIZE);
		createEAttribute(partitionEClass, PARTITION__ESTIMATED_ROWS);
		createEReference(partitionEClass, PARTITION__CURRENT_STORAGE_MODE);
		createEAttribute(partitionEClass, PARTITION__AGGREGATION_DESIGN_ID);
		createEReference(partitionEClass, PARTITION__AGGREGATION_INSTANCES);
		createEReference(partitionEClass, PARTITION__AGGREGATION_INSTANCE_SOURCE);
		createEAttribute(partitionEClass, PARTITION__LAST_PROCESSED);
		createEAttribute(partitionEClass, PARTITION__STATE);
		createEAttribute(partitionEClass, PARTITION__STRING_STORES_COMPATIBILITY_LEVEL);
		createEAttribute(partitionEClass, PARTITION__CURRENT_STRING_STORES_COMPATIBILITY_LEVEL);
		createEAttribute(partitionEClass, PARTITION__DIRECT_QUERY_USAGE);

		partitionsTypeEClass = createEClass(PARTITIONS_TYPE);
		createEReference(partitionsTypeEClass, PARTITIONS_TYPE__PARTITION);

		permissionEClass = createEClass(PERMISSION);
		createEAttribute(permissionEClass, PERMISSION__NAME);
		createEAttribute(permissionEClass, PERMISSION__ID);
		createEAttribute(permissionEClass, PERMISSION__CREATED_TIMESTAMP);
		createEAttribute(permissionEClass, PERMISSION__LAST_SCHEMA_UPDATE);
		createEAttribute(permissionEClass, PERMISSION__DESCRIPTION);
		createEReference(permissionEClass, PERMISSION__ANNOTATIONS);
		createEAttribute(permissionEClass, PERMISSION__ROLE_ID);
		createEAttribute(permissionEClass, PERMISSION__PROCESS);
		createEAttribute(permissionEClass, PERMISSION__READ_DEFINITION);
		createEAttribute(permissionEClass, PERMISSION__READ);

		perspectiveEClass = createEClass(PERSPECTIVE);
		createEAttribute(perspectiveEClass, PERSPECTIVE__NAME);
		createEAttribute(perspectiveEClass, PERSPECTIVE__ID);
		createEAttribute(perspectiveEClass, PERSPECTIVE__CREATED_TIMESTAMP);
		createEAttribute(perspectiveEClass, PERSPECTIVE__LAST_SCHEMA_UPDATE);
		createEAttribute(perspectiveEClass, PERSPECTIVE__DESCRIPTION);
		createEReference(perspectiveEClass, PERSPECTIVE__ANNOTATIONS);
		createEReference(perspectiveEClass, PERSPECTIVE__TRANSLATIONS);
		createEAttribute(perspectiveEClass, PERSPECTIVE__DEFAULT_MEASURE);
		createEReference(perspectiveEClass, PERSPECTIVE__DIMENSIONS);
		createEReference(perspectiveEClass, PERSPECTIVE__MEASURE_GROUPS);
		createEReference(perspectiveEClass, PERSPECTIVE__CALCULATIONS);
		createEReference(perspectiveEClass, PERSPECTIVE__KPIS);
		createEReference(perspectiveEClass, PERSPECTIVE__ACTIONS);

		perspectiveActionEClass = createEClass(PERSPECTIVE_ACTION);
		createEAttribute(perspectiveActionEClass, PERSPECTIVE_ACTION__ACTION_ID);
		createEReference(perspectiveActionEClass, PERSPECTIVE_ACTION__ANNOTATIONS);

		perspectiveAttributeEClass = createEClass(PERSPECTIVE_ATTRIBUTE);
		createEAttribute(perspectiveAttributeEClass, PERSPECTIVE_ATTRIBUTE__ATTRIBUTE_ID);
		createEAttribute(perspectiveAttributeEClass, PERSPECTIVE_ATTRIBUTE__ATTRIBUTE_HIERARCHY_VISIBLE);
		createEAttribute(perspectiveAttributeEClass, PERSPECTIVE_ATTRIBUTE__DEFAULT_MEMBER);
		createEReference(perspectiveAttributeEClass, PERSPECTIVE_ATTRIBUTE__ANNOTATIONS);

		perspectiveCalculationEClass = createEClass(PERSPECTIVE_CALCULATION);
		createEAttribute(perspectiveCalculationEClass, PERSPECTIVE_CALCULATION__NAME);
		createEAttribute(perspectiveCalculationEClass, PERSPECTIVE_CALCULATION__TYPE);
		createEReference(perspectiveCalculationEClass, PERSPECTIVE_CALCULATION__ANNOTATIONS);

		perspectiveDimensionEClass = createEClass(PERSPECTIVE_DIMENSION);
		createEAttribute(perspectiveDimensionEClass, PERSPECTIVE_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(perspectiveDimensionEClass, PERSPECTIVE_DIMENSION__ATTRIBUTES);
		createEReference(perspectiveDimensionEClass, PERSPECTIVE_DIMENSION__HIERARCHIES);
		createEReference(perspectiveDimensionEClass, PERSPECTIVE_DIMENSION__ANNOTATIONS);

		perspectiveHierarchyEClass = createEClass(PERSPECTIVE_HIERARCHY);
		createEAttribute(perspectiveHierarchyEClass, PERSPECTIVE_HIERARCHY__HIERARCHY_ID);
		createEReference(perspectiveHierarchyEClass, PERSPECTIVE_HIERARCHY__ANNOTATIONS);

		perspectiveKpiEClass = createEClass(PERSPECTIVE_KPI);
		createEAttribute(perspectiveKpiEClass, PERSPECTIVE_KPI__KPI_ID);
		createEReference(perspectiveKpiEClass, PERSPECTIVE_KPI__ANNOTATIONS);

		perspectiveMeasureEClass = createEClass(PERSPECTIVE_MEASURE);
		createEAttribute(perspectiveMeasureEClass, PERSPECTIVE_MEASURE__MEASURE_ID);
		createEReference(perspectiveMeasureEClass, PERSPECTIVE_MEASURE__ANNOTATIONS);

		perspectiveMeasureGroupEClass = createEClass(PERSPECTIVE_MEASURE_GROUP);
		createEAttribute(perspectiveMeasureGroupEClass, PERSPECTIVE_MEASURE_GROUP__MEASURE_GROUP_ID);
		createEReference(perspectiveMeasureGroupEClass, PERSPECTIVE_MEASURE_GROUP__MEASURES);
		createEReference(perspectiveMeasureGroupEClass, PERSPECTIVE_MEASURE_GROUP__ANNOTATIONS);

		perspectivesTypeEClass = createEClass(PERSPECTIVES_TYPE);
		createEReference(perspectivesTypeEClass, PERSPECTIVES_TYPE__PERSPECTIVE);

		predLeafEClass = createEClass(PRED_LEAF);
		createEReference(predLeafEClass, PRED_LEAF__COMPARATOR);
		createEReference(predLeafEClass, PRED_LEAF__EVENT);
		createEReference(predLeafEClass, PRED_LEAF__GLOBAL);
		createEReference(predLeafEClass, PRED_LEAF__VALUE);

		proactiveCachingEClass = createEClass(PROACTIVE_CACHING);
		createEAttribute(proactiveCachingEClass, PROACTIVE_CACHING__ONLINE_MODE);
		createEAttribute(proactiveCachingEClass, PROACTIVE_CACHING__AGGREGATION_STORAGE);
		createEReference(proactiveCachingEClass, PROACTIVE_CACHING__SOURCE);
		createEAttribute(proactiveCachingEClass, PROACTIVE_CACHING__SILENCE_INTERVAL);
		createEAttribute(proactiveCachingEClass, PROACTIVE_CACHING__LATENCY);
		createEAttribute(proactiveCachingEClass, PROACTIVE_CACHING__SILENCE_OVERRIDE_INTERVAL);
		createEAttribute(proactiveCachingEClass, PROACTIVE_CACHING__FORCE_REBUILD_INTERVAL);
		createEAttribute(proactiveCachingEClass, PROACTIVE_CACHING__ENABLED);

		proactiveCachingBindingEClass = createEClass(PROACTIVE_CACHING_BINDING);

		proactiveCachingIncrementalProcessingBindingEClass = createEClass(PROACTIVE_CACHING_INCREMENTAL_PROCESSING_BINDING);
		createEAttribute(proactiveCachingIncrementalProcessingBindingEClass, PROACTIVE_CACHING_INCREMENTAL_PROCESSING_BINDING__REFRESH_INTERVAL);
		createEReference(proactiveCachingIncrementalProcessingBindingEClass, PROACTIVE_CACHING_INCREMENTAL_PROCESSING_BINDING__INCREMENTAL_PROCESSING_NOTIFICATIONS);

		proactiveCachingInheritedBindingEClass = createEClass(PROACTIVE_CACHING_INHERITED_BINDING);
		createEAttribute(proactiveCachingInheritedBindingEClass, PROACTIVE_CACHING_INHERITED_BINDING__NOTIFICATION_TECHNIQUE);

		proactiveCachingObjectNotificationBindingEClass = createEClass(PROACTIVE_CACHING_OBJECT_NOTIFICATION_BINDING);

		proactiveCachingQueryBindingEClass = createEClass(PROACTIVE_CACHING_QUERY_BINDING);
		createEAttribute(proactiveCachingQueryBindingEClass, PROACTIVE_CACHING_QUERY_BINDING__REFRESH_INTERVAL);
		createEReference(proactiveCachingQueryBindingEClass, PROACTIVE_CACHING_QUERY_BINDING__QUERY_NOTIFICATIONS);

		proactiveCachingTablesBindingEClass = createEClass(PROACTIVE_CACHING_TABLES_BINDING);
		createEAttribute(proactiveCachingTablesBindingEClass, PROACTIVE_CACHING_TABLES_BINDING__NOTIFICATION_TECHNIQUE);
		createEReference(proactiveCachingTablesBindingEClass, PROACTIVE_CACHING_TABLES_BINDING__TABLE_NOTIFICATIONS);

		processEClass = createEClass(PROCESS);
		createEAttribute(processEClass, PROCESS__TYPE);
		createEReference(processEClass, PROCESS__OBJECT);
		createEReference(processEClass, PROCESS__BINDINGS);
		createEReference(processEClass, PROCESS__DATA_SOURCE);
		createEReference(processEClass, PROCESS__DATA_SOURCE_VIEW);
		createEReference(processEClass, PROCESS__ERROR_CONFIGURATION);
		createEAttribute(processEClass, PROCESS__WRITE_BACK_TABLE_CREATION);

		propertiesEClass = createEClass(PROPERTIES);
		createEReference(propertiesEClass, PROPERTIES__PROPERTY_LIST);

		propertiesTypeEClass = createEClass(PROPERTIES_TYPE);
		createEReference(propertiesTypeEClass, PROPERTIES_TYPE__PROPERTY_LIST);

		propertyListEClass = createEClass(PROPERTY_LIST);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DATA_SOURCE_INFO);
		createEAttribute(propertyListEClass, PROPERTY_LIST__TIMEOUT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__USER_NAME);
		createEAttribute(propertyListEClass, PROPERTY_LIST__PASSWORD);
		createEAttribute(propertyListEClass, PROPERTY_LIST__LOCALE_IDENTIFIER);
		createEAttribute(propertyListEClass, PROPERTY_LIST__CATALOG);
		createEAttribute(propertyListEClass, PROPERTY_LIST__STATE_SUPPORT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__CONTENT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__FORMAT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__AXIS_FORMAT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__BEGIN_RANGE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__END_RANGE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDX_SUPPORT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__PROVIDER_NAME);
		createEAttribute(propertyListEClass, PROPERTY_LIST__PROVIDER_VERSION);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBMS_VERSION);
		createEAttribute(propertyListEClass, PROPERTY_LIST__PROVIDER_TYPE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SHOW_HIDDEN_CUBES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SQL_SUPPORT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__TRANSACTION_DDL);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MAXIMUM_ROWS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__ROLES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__VISUAL_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__EFFECTIVE_ROLES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__EFFECTIVE_USER_NAME);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SERVER_NAME);
		createEAttribute(propertyListEClass, PROPERTY_LIST__CATALOG_LOCATION);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_CATALOG_TERM);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_CATALOG_USAGE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_COLUMN_DEFINITION);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_CONCAT_NULL_BEHAVIOR);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_DATA_SOURCE_READ_ONLY);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_GROUP_BY);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_HETEROGENEOUS_TABLES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_IDENTIFIER_CASE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MAX_INDEX_SIZE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MAX_OPEN_CHAPTERS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MAX_ROW_SIZE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MAX_ROW_SIZE_INCLUDE_BLOB);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MAX_TABLES_IN_SELECT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MULTI_TABLE_UPDATE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_NULL_COLLATION);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_ORDER_BY_COLUMNS_IN_SELECT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_OUTPUT_PARAMETER_AVAILABLE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_PERSISTENT_ID_TYPE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_PREPARE_ABORT_BEHAVIOR);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_PREPARE_COMMIT_BEHAVIOR);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_PROCEDURE_TERM);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_QUOTED_IDENTIFIER_CASE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_SCHEMA_USAGE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_SQL_SUPPORT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_SUBQUERIES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_SUPPORTED_TXN_DDL);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_SUBQUERIES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_SUPPORTED_TXN_ISO_LEVELS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_SUPPORTED_TXN_ISO_RETAIN);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_TABLE_TERM);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_AGGREGATE_CELL_UPDATE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_AXES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_FLATTENING_SUPPORT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_CASE_SUPPORT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_DESC_FLAGS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_DRILL_FUNCTIONS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_FORMULAS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_JOIN_CUBES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_MEMBER_FUNCTIONS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_NON_MEASURE_EXPRESSIONS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_NUMERIC_FUNCTIONS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_OBJ_QUALIFICATION);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_OUTER_REFERENCE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_QUERY_BY_PROPERTY);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_RANGE_ROWSET);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_SET_FUNCTIONS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_SLICER);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_STRING_COMPOP);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_NAMED_LEVELS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_MDX_COMPATIBILITY);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_SQL_COMPATIBILITY);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_MDX_UNIQUE_NAME_STYLE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_CACHE_POLICY);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_CACHE_RATIO);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_CACHE_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_COMPARE_CASE_SENSITIVE_STRING_FLAGS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_COMPARE_CASE_NOT_SENSITIVE_STRING_FLAGS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_FLATTENED2);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_INIT_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SSPROP_INIT_APP_NAME);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SSPROP_INIT_WSID);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SSPROP_INIT_PACKETSIZE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__READ_ONLY_SESSION);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SECURED_CELL_VALUE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__NON_EMPTY_THRESHOLD);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SAFETY_OPTIONS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_CACHE_RATIO2);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_USE_FORMULA_CACHE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_DYNAMIC_DEBUG_LIMIT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_DEBUG_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DIALECT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__IMPACT_ANALYSIS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__SQL_QUERY_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__CLIENT_PROCESS_ID);
		createEAttribute(propertyListEClass, PROPERTY_LIST__CUBE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__RETURN_CELL_PROPERTIES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__COMMIT_TIMEOUT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__FORCE_COMMIT_TIMEOUT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__EXECUTION_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__REAL_TIME_OLAP);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDX_MISSING_MEMBER_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_NAMED_SETS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_SUBQUERIES);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_AUTO_EXISTS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__CUSTOM_DATA);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DISABLE_PREFETCH_FACTS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__UPDATE_ISOLATION_LEVEL);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_ERROR_MESSAGE_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MDPROP_MDX_DDL_EXTENSIONS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__RESPONSE_ENCODING);
		createEAttribute(propertyListEClass, PROPERTY_LIST__MEMORY_LOCKING_MODE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_OPTIMIZE_RESPONSE);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_ACTIVITY_ID);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_REQUEST_ID);
		createEAttribute(propertyListEClass, PROPERTY_LIST__RETURN_AFFECTED_OBJECTS);
		createEAttribute(propertyListEClass, PROPERTY_LIST__DBPROP_MSMD_REQUEST_MEMORY_LIMIT);
		createEAttribute(propertyListEClass, PROPERTY_LIST__APPLICATION_CONTEXT);

		pushedDataSourceEClass = createEClass(PUSHED_DATA_SOURCE);
		createEReference(pushedDataSourceEClass, PUSHED_DATA_SOURCE__ROOT);
		createEReference(pushedDataSourceEClass, PUSHED_DATA_SOURCE__END_OF_DATA);

		queriesTypeEClass = createEClass(QUERIES_TYPE);
		createEAttribute(queriesTypeEClass, QUERIES_TYPE__QUERY);

		queryBindingEClass = createEClass(QUERY_BINDING);
		createEAttribute(queryBindingEClass, QUERY_BINDING__DATA_SOURCE_ID);
		createEAttribute(queryBindingEClass, QUERY_BINDING__QUERY_DEFINITION);

		queryNotificationEClass = createEClass(QUERY_NOTIFICATION);
		createEAttribute(queryNotificationEClass, QUERY_NOTIFICATION__QUERY);

		queryNotificationsTypeEClass = createEClass(QUERY_NOTIFICATIONS_TYPE);
		createEReference(queryNotificationsTypeEClass, QUERY_NOTIFICATIONS_TYPE__QUERY_NOTIFICATION);

		referenceMeasureGroupDimensionEClass = createEClass(REFERENCE_MEASURE_GROUP_DIMENSION);
		createEAttribute(referenceMeasureGroupDimensionEClass, REFERENCE_MEASURE_GROUP_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(referenceMeasureGroupDimensionEClass, REFERENCE_MEASURE_GROUP_DIMENSION__ANNOTATIONS);
		createEReference(referenceMeasureGroupDimensionEClass, REFERENCE_MEASURE_GROUP_DIMENSION__SOURCE);
		createEAttribute(referenceMeasureGroupDimensionEClass, REFERENCE_MEASURE_GROUP_DIMENSION__INTERMEDIATE_CUBE_DIMENSION_ID);
		createEAttribute(referenceMeasureGroupDimensionEClass, REFERENCE_MEASURE_GROUP_DIMENSION__INTERMEDIATE_GRANULARITY_ATTRIBUTE_ID);
		createEAttribute(referenceMeasureGroupDimensionEClass, REFERENCE_MEASURE_GROUP_DIMENSION__MATERIALIZATION);
		createEAttribute(referenceMeasureGroupDimensionEClass, REFERENCE_MEASURE_GROUP_DIMENSION__PROCESSING_STATE);

		regularMeasureGroupDimensionEClass = createEClass(REGULAR_MEASURE_GROUP_DIMENSION);
		createEAttribute(regularMeasureGroupDimensionEClass, REGULAR_MEASURE_GROUP_DIMENSION__CUBE_DIMENSION_ID);
		createEReference(regularMeasureGroupDimensionEClass, REGULAR_MEASURE_GROUP_DIMENSION__ANNOTATIONS);
		createEReference(regularMeasureGroupDimensionEClass, REGULAR_MEASURE_GROUP_DIMENSION__SOURCE);
		createEAttribute(regularMeasureGroupDimensionEClass, REGULAR_MEASURE_GROUP_DIMENSION__CARDINALITY);
		createEReference(regularMeasureGroupDimensionEClass, REGULAR_MEASURE_GROUP_DIMENSION__ATTRIBUTES);

		relationalDataSourceEClass = createEClass(RELATIONAL_DATA_SOURCE);

		reportActionEClass = createEClass(REPORT_ACTION);
		createEAttribute(reportActionEClass, REPORT_ACTION__NAME);
		createEAttribute(reportActionEClass, REPORT_ACTION__ID);
		createEAttribute(reportActionEClass, REPORT_ACTION__CAPTION);
		createEAttribute(reportActionEClass, REPORT_ACTION__CAPTION_IS_MDX);
		createEReference(reportActionEClass, REPORT_ACTION__TRANSLATIONS);
		createEAttribute(reportActionEClass, REPORT_ACTION__TARGET_TYPE);
		createEAttribute(reportActionEClass, REPORT_ACTION__TARGET);
		createEAttribute(reportActionEClass, REPORT_ACTION__CONDITION);
		createEAttribute(reportActionEClass, REPORT_ACTION__TYPE);
		createEAttribute(reportActionEClass, REPORT_ACTION__INVOCATION);
		createEAttribute(reportActionEClass, REPORT_ACTION__APPLICATION);
		createEAttribute(reportActionEClass, REPORT_ACTION__DESCRIPTION);
		createEReference(reportActionEClass, REPORT_ACTION__ANNOTATIONS);
		createEAttribute(reportActionEClass, REPORT_ACTION__REPORT_SERVER);
		createEAttribute(reportActionEClass, REPORT_ACTION__PATH);
		createEReference(reportActionEClass, REPORT_ACTION__REPORT_PARAMETERS);
		createEReference(reportActionEClass, REPORT_ACTION__REPORT_FORMAT_PARAMETERS);

		reportFormatParameterEClass = createEClass(REPORT_FORMAT_PARAMETER);
		createEAttribute(reportFormatParameterEClass, REPORT_FORMAT_PARAMETER__NAME);
		createEAttribute(reportFormatParameterEClass, REPORT_FORMAT_PARAMETER__VALUE);

		reportFormatParametersTypeEClass = createEClass(REPORT_FORMAT_PARAMETERS_TYPE);
		createEReference(reportFormatParametersTypeEClass, REPORT_FORMAT_PARAMETERS_TYPE__REPORT_FORMAT_PARAMETER);

		reportParameterEClass = createEClass(REPORT_PARAMETER);
		createEAttribute(reportParameterEClass, REPORT_PARAMETER__NAME);
		createEAttribute(reportParameterEClass, REPORT_PARAMETER__VALUE);

		reportParametersTypeEClass = createEClass(REPORT_PARAMETERS_TYPE);
		createEReference(reportParametersTypeEClass, REPORT_PARAMETERS_TYPE__REPORT_PARAMETER);

		restoreEClass = createEClass(RESTORE);
		createEAttribute(restoreEClass, RESTORE__DATABASE_NAME);
		createEAttribute(restoreEClass, RESTORE__DATABASE_ID);
		createEAttribute(restoreEClass, RESTORE__FILE);
		createEAttribute(restoreEClass, RESTORE__SECURITY);
		createEAttribute(restoreEClass, RESTORE__ALLOW_OVERWRITE);
		createEAttribute(restoreEClass, RESTORE__PASSWORD);
		createEAttribute(restoreEClass, RESTORE__DB_STORAGE_LOCATION);
		createEAttribute(restoreEClass, RESTORE__READ_WRITE_MODE);
		createEReference(restoreEClass, RESTORE__LOCATIONS);

		restrictionListTypeEClass = createEClass(RESTRICTION_LIST_TYPE);
		createEAttribute(restrictionListTypeEClass, RESTRICTION_LIST_TYPE__ANY);

		restrictionsTypeEClass = createEClass(RESTRICTIONS_TYPE);
		createEReference(restrictionsTypeEClass, RESTRICTIONS_TYPE__RESTRICTION_LIST);

		resultTypeEClass = createEClass(RESULT_TYPE);
		createEAttribute(resultTypeEClass, RESULT_TYPE__RESULT_ID);

		returnEClass = createEClass(RETURN);
		createEReference(returnEClass, RETURN__ROOT);
		createEReference(returnEClass, RETURN__ROOT1);
		createEReference(returnEClass, RETURN__ROOT2);
		createEReference(returnEClass, RETURN__RESULTS);

		returnTypeEClass = createEClass(RETURN_TYPE);
		createEReference(returnTypeEClass, RETURN_TYPE__ROOT);

		roleEClass = createEClass(ROLE);
		createEAttribute(roleEClass, ROLE__NAME);
		createEAttribute(roleEClass, ROLE__ID);
		createEAttribute(roleEClass, ROLE__CREATED_TIMESTAMP);
		createEAttribute(roleEClass, ROLE__LAST_SCHEMA_UPDATE);
		createEAttribute(roleEClass, ROLE__DESCRIPTION);
		createEReference(roleEClass, ROLE__ANNOTATIONS);
		createEReference(roleEClass, ROLE__MEMBERS);

		rolesTypeEClass = createEClass(ROLES_TYPE);
		createEReference(rolesTypeEClass, ROLES_TYPE__ROLE);

		rolesType1EClass = createEClass(ROLES_TYPE1);
		createEReference(rolesType1EClass, ROLES_TYPE1__ROLE);

		rollbackTransactionEClass = createEClass(ROLLBACK_TRANSACTION);

		rootTypeEClass = createEClass(ROOT_TYPE);
		createEAttribute(rootTypeEClass, ROOT_TYPE__PARAMETER);

		rowBindingEClass = createEClass(ROW_BINDING);
		createEAttribute(rowBindingEClass, ROW_BINDING__TABLE_ID);

		scalarMiningStructureColumnEClass = createEClass(SCALAR_MINING_STRUCTURE_COLUMN);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__NAME);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__ID);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__DESCRIPTION);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__TYPE);
		createEReference(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__ANNOTATIONS);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__IS_KEY);
		createEReference(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__SOURCE);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__DISTRIBUTION);
		createEReference(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__MODELING_FLAGS);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__CONTENT);
		createEReference(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__CLASSIFIED_COLUMNS);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__DISCRETIZATION_METHOD);
		createEAttribute(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__DISCRETIZATION_BUCKET_COUNT);
		createEReference(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__KEY_COLUMNS);
		createEReference(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__NAME_COLUMN);
		createEReference(scalarMiningStructureColumnEClass, SCALAR_MINING_STRUCTURE_COLUMN__TRANSLATIONS);

		serverEClass = createEClass(SERVER);
		createEAttribute(serverEClass, SERVER__NAME);
		createEAttribute(serverEClass, SERVER__ID);
		createEAttribute(serverEClass, SERVER__CREATED_TIMESTAMP);
		createEAttribute(serverEClass, SERVER__LAST_SCHEMA_UPDATE);
		createEAttribute(serverEClass, SERVER__DESCRIPTION);
		createEReference(serverEClass, SERVER__ANNOTATIONS);
		createEAttribute(serverEClass, SERVER__PRODUCT_NAME);
		createEAttribute(serverEClass, SERVER__EDITION);
		createEAttribute(serverEClass, SERVER__EDITION_ID);
		createEAttribute(serverEClass, SERVER__VERSION);
		createEAttribute(serverEClass, SERVER__SERVER_MODE);
		createEAttribute(serverEClass, SERVER__PRODUCT_LEVEL);
		createEAttribute(serverEClass, SERVER__DEFAULT_COMPATIBILITY_LEVEL);
		createEAttribute(serverEClass, SERVER__SUPPORTED_COMPATIBILITY_LEVELS);
		createEReference(serverEClass, SERVER__DATABASES);
		createEReference(serverEClass, SERVER__ASSEMBLIES);
		createEReference(serverEClass, SERVER__TRACES);
		createEReference(serverEClass, SERVER__ROLES);
		createEReference(serverEClass, SERVER__SERVER_PROPERTIES);

		serverPropertiesTypeEClass = createEClass(SERVER_PROPERTIES_TYPE);
		createEReference(serverPropertiesTypeEClass, SERVER_PROPERTIES_TYPE__SERVER_PROPERTY);

		serverPropertyEClass = createEClass(SERVER_PROPERTY);
		createEAttribute(serverPropertyEClass, SERVER_PROPERTY__NAME);
		createEAttribute(serverPropertyEClass, SERVER_PROPERTY__VALUE);
		createEAttribute(serverPropertyEClass, SERVER_PROPERTY__REQUIRES_RESTART);
		createEAttribute(serverPropertyEClass, SERVER_PROPERTY__PENDING_VALUE);
		createEAttribute(serverPropertyEClass, SERVER_PROPERTY__DEFAULT_VALUE);
		createEAttribute(serverPropertyEClass, SERVER_PROPERTY__DISPLAY_FLAG);
		createEAttribute(serverPropertyEClass, SERVER_PROPERTY__TYPE);

		sessionTypeEClass = createEClass(SESSION_TYPE);
		createEAttribute(sessionTypeEClass, SESSION_TYPE__MUST_UNDERSTAND);
		createEAttribute(sessionTypeEClass, SESSION_TYPE__SESSION_ID);

		setAuthContextEClass = createEClass(SET_AUTH_CONTEXT);
		createEAttribute(setAuthContextEClass, SET_AUTH_CONTEXT__TOKEN);
		createEAttribute(setAuthContextEClass, SET_AUTH_CONTEXT__DATABASE_ID);

		skippedLevelsColumnTypeEClass = createEClass(SKIPPED_LEVELS_COLUMN_TYPE);
		createEReference(skippedLevelsColumnTypeEClass, SKIPPED_LEVELS_COLUMN_TYPE__SOURCE);

		sourceEClass = createEClass(SOURCE);
		createEReference(sourceEClass, SOURCE__OBJECT);
		createEAttribute(sourceEClass, SOURCE__CONNECTION_STRING);

		sourcesTypeEClass = createEClass(SOURCES_TYPE);
		createEReference(sourcesTypeEClass, SOURCES_TYPE__SOURCE);

		standardActionEClass = createEClass(STANDARD_ACTION);
		createEAttribute(standardActionEClass, STANDARD_ACTION__NAME);
		createEAttribute(standardActionEClass, STANDARD_ACTION__ID);
		createEAttribute(standardActionEClass, STANDARD_ACTION__CAPTION);
		createEAttribute(standardActionEClass, STANDARD_ACTION__CAPTION_IS_MDX);
		createEReference(standardActionEClass, STANDARD_ACTION__TRANSLATIONS);
		createEAttribute(standardActionEClass, STANDARD_ACTION__TARGET_TYPE);
		createEAttribute(standardActionEClass, STANDARD_ACTION__TARGET);
		createEAttribute(standardActionEClass, STANDARD_ACTION__CONDITION);
		createEAttribute(standardActionEClass, STANDARD_ACTION__TYPE);
		createEAttribute(standardActionEClass, STANDARD_ACTION__INVOCATION);
		createEAttribute(standardActionEClass, STANDARD_ACTION__APPLICATION);
		createEAttribute(standardActionEClass, STANDARD_ACTION__DESCRIPTION);
		createEReference(standardActionEClass, STANDARD_ACTION__ANNOTATIONS);
		createEAttribute(standardActionEClass, STANDARD_ACTION__EXPRESSION);

		statementEClass = createEClass(STATEMENT);
		createEAttribute(statementEClass, STATEMENT__STATEMENT);

		storageModeTypeEClass = createEClass(STORAGE_MODE_TYPE);
		createEAttribute(storageModeTypeEClass, STORAGE_MODE_TYPE__VALUE);
		createEAttribute(storageModeTypeEClass, STORAGE_MODE_TYPE__VALUENS);

		storageModeType2EClass = createEClass(STORAGE_MODE_TYPE2);
		createEAttribute(storageModeType2EClass, STORAGE_MODE_TYPE2__VALUE);
		createEAttribute(storageModeType2EClass, STORAGE_MODE_TYPE2__VALUENS);

		storageModeType3EClass = createEClass(STORAGE_MODE_TYPE3);
		createEAttribute(storageModeType3EClass, STORAGE_MODE_TYPE3__VALUE);
		createEAttribute(storageModeType3EClass, STORAGE_MODE_TYPE3__VALUENS);

		subscribeEClass = createEClass(SUBSCRIBE);
		createEReference(subscribeEClass, SUBSCRIBE__OBJECT);
		createEAttribute(subscribeEClass, SUBSCRIBE__SUBSCRIPTION_ID);

		synchronizeEClass = createEClass(SYNCHRONIZE);
		createEReference(synchronizeEClass, SYNCHRONIZE__SOURCE);
		createEAttribute(synchronizeEClass, SYNCHRONIZE__SYNCHRONIZE_SECURITY);
		createEAttribute(synchronizeEClass, SYNCHRONIZE__APPLY_COMPRESSION);
		createEAttribute(synchronizeEClass, SYNCHRONIZE__DB_STORAGE_LOCATION);
		createEReference(synchronizeEClass, SYNCHRONIZE__LOCATIONS);

		tableBindingEClass = createEClass(TABLE_BINDING);
		createEAttribute(tableBindingEClass, TABLE_BINDING__DATA_SOURCE_ID);
		createEAttribute(tableBindingEClass, TABLE_BINDING__DB_TABLE_NAME);
		createEAttribute(tableBindingEClass, TABLE_BINDING__DB_SCHEMA_NAME);

		tableMiningStructureColumnEClass = createEClass(TABLE_MINING_STRUCTURE_COLUMN);
		createEReference(tableMiningStructureColumnEClass, TABLE_MINING_STRUCTURE_COLUMN__FOREIGN_KEY_COLUMNS);
		createEReference(tableMiningStructureColumnEClass, TABLE_MINING_STRUCTURE_COLUMN__SOURCE_MEASURE_GROUP);
		createEReference(tableMiningStructureColumnEClass, TABLE_MINING_STRUCTURE_COLUMN__COLUMNS);
		createEReference(tableMiningStructureColumnEClass, TABLE_MINING_STRUCTURE_COLUMN__TRANSLATIONS);

		tableNotificationEClass = createEClass(TABLE_NOTIFICATION);
		createEAttribute(tableNotificationEClass, TABLE_NOTIFICATION__DB_TABLE_NAME);
		createEAttribute(tableNotificationEClass, TABLE_NOTIFICATION__DB_SCHEMA_NAME);

		tableNotificationsTypeEClass = createEClass(TABLE_NOTIFICATIONS_TYPE);
		createEReference(tableNotificationsTypeEClass, TABLE_NOTIFICATIONS_TYPE__TABLE_NOTIFICATION);

		tableNotificationsType1EClass = createEClass(TABLE_NOTIFICATIONS_TYPE1);
		createEReference(tableNotificationsType1EClass, TABLE_NOTIFICATIONS_TYPE1__TABLE_NOTIFICATION);

		tabularBindingEClass = createEClass(TABULAR_BINDING);

		targetTypeEClass = createEClass(TARGET_TYPE);
		createEReference(targetTypeEClass, TARGET_TYPE__PARAMETER);
		createEAttribute(targetTypeEClass, TARGET_TYPE__MODULE);
		createEAttribute(targetTypeEClass, TARGET_TYPE__NAME);
		createEAttribute(targetTypeEClass, TARGET_TYPE__PACKAGE);

		targetType1EClass = createEClass(TARGET_TYPE1);
		createEAttribute(targetType1EClass, TARGET_TYPE1__DB_STORAGE_LOCATION);
		createEAttribute(targetType1EClass, TARGET_TYPE1__DATABASE_NAME);
		createEAttribute(targetType1EClass, TARGET_TYPE1__DATABASE_ID);

		timeAttributeBindingEClass = createEClass(TIME_ATTRIBUTE_BINDING);

		timeBindingEClass = createEClass(TIME_BINDING);
		createEAttribute(timeBindingEClass, TIME_BINDING__CALENDAR_START_DATE);
		createEAttribute(timeBindingEClass, TIME_BINDING__CALENDAR_END_DATE);
		createEAttribute(timeBindingEClass, TIME_BINDING__FIRST_DAY_OF_WEEK);
		createEAttribute(timeBindingEClass, TIME_BINDING__CALENDAR_LANGUAGE);
		createEAttribute(timeBindingEClass, TIME_BINDING__FISCAL_FIRST_MONTH);
		createEAttribute(timeBindingEClass, TIME_BINDING__FISCAL_FIRST_DAY_OF_MONTH);
		createEAttribute(timeBindingEClass, TIME_BINDING__FISCAL_YEAR_NAME);
		createEAttribute(timeBindingEClass, TIME_BINDING__REPORTING_FIRST_MONTH);
		createEAttribute(timeBindingEClass, TIME_BINDING__REPORTING_FIRST_WEEK_OF_MONTH);
		createEAttribute(timeBindingEClass, TIME_BINDING__REPORTING_WEEK_TO_MONTH_PATTERN);
		createEAttribute(timeBindingEClass, TIME_BINDING__MANUFACTURING_FIRST_MONTH);
		createEAttribute(timeBindingEClass, TIME_BINDING__MANUFACTURING_FIRST_WEEK_OF_MONTH);
		createEAttribute(timeBindingEClass, TIME_BINDING__MANUFACTURING_EXTRA_MONTH_QUARTER);

		traceEClass = createEClass(TRACE);
		createEAttribute(traceEClass, TRACE__NAME);
		createEAttribute(traceEClass, TRACE__ID);
		createEAttribute(traceEClass, TRACE__CREATED_TIMESTAMP);
		createEAttribute(traceEClass, TRACE__LAST_SCHEMA_UPDATE);
		createEAttribute(traceEClass, TRACE__DESCRIPTION);
		createEReference(traceEClass, TRACE__ANNOTATIONS);
		createEAttribute(traceEClass, TRACE__LOG_FILE_NAME);
		createEAttribute(traceEClass, TRACE__LOG_FILE_APPEND);
		createEAttribute(traceEClass, TRACE__LOG_FILE_SIZE);
		createEAttribute(traceEClass, TRACE__AUDIT);
		createEAttribute(traceEClass, TRACE__LOG_FILE_ROLLOVER);
		createEAttribute(traceEClass, TRACE__AUTO_RESTART);
		createEAttribute(traceEClass, TRACE__STOP_TIME);
		createEReference(traceEClass, TRACE__FILTER);
		createEReference(traceEClass, TRACE__EVENT_TYPE);

		traceColumnsEClass = createEClass(TRACE_COLUMNS);
		createEReference(traceColumnsEClass, TRACE_COLUMNS__DATA);

		traceDefinitionProviderInfoEClass = createEClass(TRACE_DEFINITION_PROVIDER_INFO);
		createEReference(traceDefinitionProviderInfoEClass, TRACE_DEFINITION_PROVIDER_INFO__DATA);

		traceEventEClass = createEClass(TRACE_EVENT);
		createEAttribute(traceEventEClass, TRACE_EVENT__ID);
		createEAttribute(traceEventEClass, TRACE_EVENT__NAME);
		createEAttribute(traceEventEClass, TRACE_EVENT__DESCRIPTION);
		createEReference(traceEventEClass, TRACE_EVENT__EVENT_COLUMN_LIST);

		traceEventCategoriesEClass = createEClass(TRACE_EVENT_CATEGORIES);
		createEReference(traceEventCategoriesEClass, TRACE_EVENT_CATEGORIES__DATA);

		traceFilterEClass = createEClass(TRACE_FILTER);
		createEReference(traceFilterEClass, TRACE_FILTER__NOT);
		createEReference(traceFilterEClass, TRACE_FILTER__OR);
		createEReference(traceFilterEClass, TRACE_FILTER__AND);
		createEReference(traceFilterEClass, TRACE_FILTER__EQUAL);
		createEReference(traceFilterEClass, TRACE_FILTER__NOT_EQUAL);
		createEReference(traceFilterEClass, TRACE_FILTER__LESS);
		createEReference(traceFilterEClass, TRACE_FILTER__LESS_OR_EQUAL);
		createEReference(traceFilterEClass, TRACE_FILTER__GREATER);
		createEReference(traceFilterEClass, TRACE_FILTER__GREATER_OR_EQUAL);
		createEReference(traceFilterEClass, TRACE_FILTER__LIKE);
		createEReference(traceFilterEClass, TRACE_FILTER__NOT_LIKE);

		tracesTypeEClass = createEClass(TRACES_TYPE);
		createEReference(tracesTypeEClass, TRACES_TYPE__TRACE);

		translationEClass = createEClass(TRANSLATION);
		createEAttribute(translationEClass, TRANSLATION__LANGUAGE);
		createEAttribute(translationEClass, TRANSLATION__CAPTION);
		createEAttribute(translationEClass, TRANSLATION__DESCRIPTION);
		createEAttribute(translationEClass, TRANSLATION__DISPLAY_FOLDER);
		createEReference(translationEClass, TRANSLATION__ANNOTATIONS);

		translationInsertUpdateEClass = createEClass(TRANSLATION_INSERT_UPDATE);
		createEAttribute(translationInsertUpdateEClass, TRANSLATION_INSERT_UPDATE__LANGUAGE);
		createEAttribute(translationInsertUpdateEClass, TRANSLATION_INSERT_UPDATE__NAME);

		translationsTypeEClass = createEClass(TRANSLATIONS_TYPE);
		createEReference(translationsTypeEClass, TRANSLATIONS_TYPE__TRANSLATION);

		translationTypeEClass = createEClass(TRANSLATION_TYPE);
		createEAttribute(translationTypeEClass, TRANSLATION_TYPE__LANGUAGE);
		createEReference(translationTypeEClass, TRANSLATION_TYPE__SOURCE);

		typeType6EClass = createEClass(TYPE_TYPE6);
		createEAttribute(typeType6EClass, TYPE_TYPE6__VALUE);
		createEAttribute(typeType6EClass, TYPE_TYPE6__VALUENS);

		unaryExprEClass = createEClass(UNARY_EXPR);
		createEReference(unaryExprEClass, UNARY_EXPR__NOT);
		createEReference(unaryExprEClass, UNARY_EXPR__AND);
		createEReference(unaryExprEClass, UNARY_EXPR__OR);
		createEReference(unaryExprEClass, UNARY_EXPR__LEAF);

		unaryOperatorColumnTypeEClass = createEClass(UNARY_OPERATOR_COLUMN_TYPE);
		createEReference(unaryOperatorColumnTypeEClass, UNARY_OPERATOR_COLUMN_TYPE__SOURCE);

		unknownMemberTranslationsTypeEClass = createEClass(UNKNOWN_MEMBER_TRANSLATIONS_TYPE);
		createEReference(unknownMemberTranslationsTypeEClass, UNKNOWN_MEMBER_TRANSLATIONS_TYPE__UNKNOWN_MEMBER_TRANSLATION);

		unknownMemberTypeEClass = createEClass(UNKNOWN_MEMBER_TYPE);
		createEAttribute(unknownMemberTypeEClass, UNKNOWN_MEMBER_TYPE__VALUE);
		createEAttribute(unknownMemberTypeEClass, UNKNOWN_MEMBER_TYPE__VALUENS);

		unlockEClass = createEClass(UNLOCK);
		createEAttribute(unlockEClass, UNLOCK__ID);

		unsubscribeEClass = createEClass(UNSUBSCRIBE);
		createEAttribute(unsubscribeEClass, UNSUBSCRIBE__SUBSCRIPTION_ID);

		updateEClass = createEClass(UPDATE);
		createEReference(updateEClass, UPDATE__OBJECT);
		createEReference(updateEClass, UPDATE__ATTRIBUTES);
		createEAttribute(updateEClass, UPDATE__MOVE_WITH_DESCENDANTS);
		createEAttribute(updateEClass, UPDATE__MOVE_TO_ROOT);
		createEReference(updateEClass, UPDATE__WHERE);

		updateCellsEClass = createEClass(UPDATE_CELLS);
		createEReference(updateCellsEClass, UPDATE_CELLS__CELL);

		userDefinedGroupBindingEClass = createEClass(USER_DEFINED_GROUP_BINDING);
		createEAttribute(userDefinedGroupBindingEClass, USER_DEFINED_GROUP_BINDING__ATTRIBUTE_ID);
		createEReference(userDefinedGroupBindingEClass, USER_DEFINED_GROUP_BINDING__GROUPS);

		valueColumnTypeEClass = createEClass(VALUE_COLUMN_TYPE);
		createEReference(valueColumnTypeEClass, VALUE_COLUMN_TYPE__SOURCE);

		versionTypeEClass = createEClass(VERSION_TYPE);
		createEAttribute(versionTypeEClass, VERSION_TYPE__MAJOR);
		createEAttribute(versionTypeEClass, VERSION_TYPE__MINOR);
		createEAttribute(versionTypeEClass, VERSION_TYPE__BUILD_NUMBER);

		whereEClass = createEClass(WHERE);
		createEReference(whereEClass, WHERE__ATTRIBUTE);

		whereAttributeEClass = createEClass(WHERE_ATTRIBUTE);
		createEAttribute(whereAttributeEClass, WHERE_ATTRIBUTE__ATTRIBUTE_NAME);
		createEReference(whereAttributeEClass, WHERE_ATTRIBUTE__KEYS);

		// Create enums
		accessTypeEEnum = createEEnum(ACCESS_TYPE);
		aggregateFunctionTypeEEnum = createEEnum(AGGREGATE_FUNCTION_TYPE);
		aggregationFunctionTypeEEnum = createEEnum(AGGREGATION_FUNCTION_TYPE);
		aggregationStorageTypeEEnum = createEEnum(AGGREGATION_STORAGE_TYPE);
		aggregationTypeTypeEEnum = createEEnum(AGGREGATION_TYPE_TYPE);
		aggregationUsageTypeEEnum = createEEnum(AGGREGATION_USAGE_TYPE);
		algorithmTypeEEnum = createEEnum(ALGORITHM_TYPE);
		allMemberAggregationUsageTypeEEnum = createEEnum(ALL_MEMBER_AGGREGATION_USAGE_TYPE);
		attributeHierarchyOptimizedStateTypeEEnum = createEEnum(ATTRIBUTE_HIERARCHY_OPTIMIZED_STATE_TYPE);
		attributeHierarchyOptimizedStateType1EEnum = createEEnum(ATTRIBUTE_HIERARCHY_OPTIMIZED_STATE_TYPE1);
		axisFormatTypeEEnum = createEEnum(AXIS_FORMAT_TYPE);
		cacheModeTypeEEnum = createEEnum(CACHE_MODE_TYPE);
		calculationTypeTypeEEnum = createEEnum(CALCULATION_TYPE_TYPE);
		cardinalityTypeEEnum = createEEnum(CARDINALITY_TYPE);
		cardinalityType1EEnum = createEEnum(CARDINALITY_TYPE1);
		catalogLocationTypeEEnum = createEEnum(CATALOG_LOCATION_TYPE);
		connectionStringSecurityTypeEEnum = createEEnum(CONNECTION_STRING_SECURITY_TYPE);
		contentTypeEEnum = createEEnum(CONTENT_TYPE);
		contentType1EEnum = createEEnum(CONTENT_TYPE1);
		cubeStorageModeEnumTypeEEnum = createEEnum(CUBE_STORAGE_MODE_ENUM_TYPE);
		dataAggregationTypeEEnum = createEEnum(DATA_AGGREGATION_TYPE);
		dataTypeTypeEEnum = createEEnum(DATA_TYPE_TYPE);
		dataTypeType1EEnum = createEEnum(DATA_TYPE_TYPE1);
		dbpropConcatNullBehaviorTypeEEnum = createEEnum(DBPROP_CONCAT_NULL_BEHAVIOR_TYPE);
		dbpropMsmdAutoExistsTypeEEnum = createEEnum(DBPROP_MSMD_AUTO_EXISTS_TYPE);
		dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum = createEEnum(DBPROP_MSMD_COMPARE_CASE_SENSITIVE_STRING_FLAGS_TYPE);
		dbpropMsmdMDXCompatibilityTypeEEnum = createEEnum(DBPROP_MSMD_MDX_COMPATIBILITY_TYPE);
		dbpropMsmdSubqueriesTypeEEnum = createEEnum(DBPROP_MSMD_SUBQUERIES_TYPE);
		dbpropNullCollationTypeEEnum = createEEnum(DBPROP_NULL_COLLATION_TYPE);
		dbpropOutputParameterAvailableTypeEEnum = createEEnum(DBPROP_OUTPUT_PARAMETER_AVAILABLE_TYPE);
		dbpropPersistentIdTypeTypeEEnum = createEEnum(DBPROP_PERSISTENT_ID_TYPE_TYPE);
		dbpropPrepareAbortBehaviorTypeEEnum = createEEnum(DBPROP_PREPARE_ABORT_BEHAVIOR_TYPE);
		dbpropPrepareCommitBehaviorTypeEEnum = createEEnum(DBPROP_PREPARE_COMMIT_BEHAVIOR_TYPE);
		dbpropQuotedIdentifierCaseTypeEEnum = createEEnum(DBPROP_QUOTED_IDENTIFIER_CASE_TYPE);
		dialectTypeEEnum = createEEnum(DIALECT_TYPE);
		dimensionAttributeTypeEnumTypeEEnum = createEEnum(DIMENSION_ATTRIBUTE_TYPE_ENUM_TYPE);
		dimensionCurrentStorageModeEnumTypeEEnum = createEEnum(DIMENSION_CURRENT_STORAGE_MODE_ENUM_TYPE);
		discretizationMethodTypeEEnum = createEEnum(DISCRETIZATION_METHOD_TYPE);
		durabilityGuaranteeTypeEEnum = createEEnum(DURABILITY_GUARANTEE_TYPE);
		editionTypeEEnum = createEEnum(EDITION_TYPE);
		fiscalYearNameTypeEEnum = createEEnum(FISCAL_YEAR_NAME_TYPE);
		formatTypeEEnum = createEEnum(FORMAT_TYPE);
		formatType1EEnum = createEEnum(FORMAT_TYPE1);
		groupingBehaviorTypeEEnum = createEEnum(GROUPING_BEHAVIOR_TYPE);
		hideMemberIfTypeEEnum = createEEnum(HIDE_MEMBER_IF_TYPE);
		hierarchyUniqueNameStyleTypeEEnum = createEEnum(HIERARCHY_UNIQUE_NAME_STYLE_TYPE);
		instanceSelectionTypeEEnum = createEEnum(INSTANCE_SELECTION_TYPE);
		invalidXmlCharactersTypeEEnum = createEEnum(INVALID_XML_CHARACTERS_TYPE);
		invocationTypeEEnum = createEEnum(INVOCATION_TYPE);
		invocationType1EEnum = createEEnum(INVOCATION_TYPE1);
		invocationType2EEnum = createEEnum(INVOCATION_TYPE2);
		isolationTypeEEnum = createEEnum(ISOLATION_TYPE);
		keyDuplicateTypeEEnum = createEEnum(KEY_DUPLICATE_TYPE);
		keyErrorActionTypeEEnum = createEEnum(KEY_ERROR_ACTION_TYPE);
		keyErrorLimitActionTypeEEnum = createEEnum(KEY_ERROR_LIMIT_ACTION_TYPE);
		keyNotFoundTypeEEnum = createEEnum(KEY_NOT_FOUND_TYPE);
		materializationTypeEEnum = createEEnum(MATERIALIZATION_TYPE);
		mdpropAggregateCellUpdateTypeEEnum = createEEnum(MDPROP_AGGREGATE_CELL_UPDATE_TYPE);
		mdpropFlatteningSupportTypeEEnum = createEEnum(MDPROP_FLATTENING_SUPPORT_TYPE);
		mdpropMdxNonMeasureExpressionsTypeEEnum = createEEnum(MDPROP_MDX_NON_MEASURE_EXPRESSIONS_TYPE);
		mdpropMdxRangeRowsetTypeEEnum = createEEnum(MDPROP_MDX_RANGE_ROWSET_TYPE);
		mdpropMdxSlicerTypeEEnum = createEEnum(MDPROP_MDX_SLICER_TYPE);
		mdxMissingMemberModeTypeEEnum = createEEnum(MDX_MISSING_MEMBER_MODE_TYPE);
		mdxMissingMemberModeType1EEnum = createEEnum(MDX_MISSING_MEMBER_MODE_TYPE1);
		mdxSupportTypeEEnum = createEEnum(MDX_SUPPORT_TYPE);
		measureGroupStorageModeEnumTypeEEnum = createEEnum(MEASURE_GROUP_STORAGE_MODE_ENUM_TYPE);
		membersWithDataTypeEEnum = createEEnum(MEMBERS_WITH_DATA_TYPE);
		memberUniqueNameStyleTypeEEnum = createEEnum(MEMBER_UNIQUE_NAME_STYLE_TYPE);
		memoryLockingModeTypeEEnum = createEEnum(MEMORY_LOCKING_MODE_TYPE);
		modeTypeEEnum = createEEnum(MODE_TYPE);
		notificationTechniqueTypeEEnum = createEEnum(NOTIFICATION_TECHNIQUE_TYPE);
		notificationTechniqueType1EEnum = createEEnum(NOTIFICATION_TECHNIQUE_TYPE1);
		nullKeyConvertedToUnknownTypeEEnum = createEEnum(NULL_KEY_CONVERTED_TO_UNKNOWN_TYPE);
		nullKeyNotAllowedTypeEEnum = createEEnum(NULL_KEY_NOT_ALLOWED_TYPE);
		nullProcessingTypeEEnum = createEEnum(NULL_PROCESSING_TYPE);
		objectExpansionEEnum = createEEnum(OBJECT_EXPANSION);
		onlineModeTypeEEnum = createEEnum(ONLINE_MODE_TYPE);
		optimizedStateTypeEEnum = createEEnum(OPTIMIZED_STATE_TYPE);
		optionalityTypeEEnum = createEEnum(OPTIONALITY_TYPE);
		orderByTypeEEnum = createEEnum(ORDER_BY_TYPE);
		overrideBehaviorTypeEEnum = createEEnum(OVERRIDE_BEHAVIOR_TYPE);
		parameterTypeEEnum = createEEnum(PARAMETER_TYPE);
		parameterType1EEnum = createEEnum(PARAMETER_TYPE1);
		partitionCurrentStorageModeEnumTypeEEnum = createEEnum(PARTITION_CURRENT_STORAGE_MODE_ENUM_TYPE);
		partitionModesEEnum = createEEnum(PARTITION_MODES);
		partitionStorageModeEnumTypeEEnum = createEEnum(PARTITION_STORAGE_MODE_ENUM_TYPE);
		permissionSetTypeEEnum = createEEnum(PERMISSION_SET_TYPE);
		persistenceTypeEEnum = createEEnum(PERSISTENCE_TYPE);
		persistenceType1EEnum = createEEnum(PERSISTENCE_TYPE1);
		processingGroupTypeEEnum = createEEnum(PROCESSING_GROUP_TYPE);
		processingModeTypeEEnum = createEEnum(PROCESSING_MODE_TYPE);
		processingModeType1EEnum = createEEnum(PROCESSING_MODE_TYPE1);
		processingModeType2EEnum = createEEnum(PROCESSING_MODE_TYPE2);
		processingModeType3EEnum = createEEnum(PROCESSING_MODE_TYPE3);
		processingStateTypeEEnum = createEEnum(PROCESSING_STATE_TYPE);
		providerTypeTypeEEnum = createEEnum(PROVIDER_TYPE_TYPE);
		readDefinitionTypeEEnum = createEEnum(READ_DEFINITION_TYPE);
		readSourceDataTypeEEnum = createEEnum(READ_SOURCE_DATA_TYPE);
		readTypeEEnum = createEEnum(READ_TYPE);
		readType1EEnum = createEEnum(READ_TYPE1);
		refreshPolicyTypeEEnum = createEEnum(REFRESH_POLICY_TYPE);
		refreshPolicyType1EEnum = createEEnum(REFRESH_POLICY_TYPE1);
		relationshipTypeTypeEEnum = createEEnum(RELATIONSHIP_TYPE_TYPE);
		reportingFirstWeekOfMonthTypeEEnum = createEEnum(REPORTING_FIRST_WEEK_OF_MONTH_TYPE);
		reportingWeekToMonthPatternTypeEEnum = createEEnum(REPORTING_WEEK_TO_MONTH_PATTERN_TYPE);
		requestTypeTypeEEnum = createEEnum(REQUEST_TYPE_TYPE);
		responseEncodingTypeEEnum = createEEnum(RESPONSE_ENCODING_TYPE);
		retentionModesEEnum = createEEnum(RETENTION_MODES);
		rootMemberIfTypeEEnum = createEEnum(ROOT_MEMBER_IF_TYPE);
		safetyOptionsTypeEEnum = createEEnum(SAFETY_OPTIONS_TYPE);
		scopeEEnum = createEEnum(SCOPE);
		scriptCacheProcessingModeTypeEEnum = createEEnum(SCRIPT_CACHE_PROCESSING_MODE_TYPE);
		scriptErrorHandlingModeTypeEEnum = createEEnum(SCRIPT_ERROR_HANDLING_MODE_TYPE);
		securedCellValueTypeEEnum = createEEnum(SECURED_CELL_VALUE_TYPE);
		securityTypeEEnum = createEEnum(SECURITY_TYPE);
		securityType1EEnum = createEEnum(SECURITY_TYPE1);
		shareDimensionStorageTypeEEnum = createEEnum(SHARE_DIMENSION_STORAGE_TYPE);
		sqlQueryModeTypeEEnum = createEEnum(SQL_QUERY_MODE_TYPE);
		stateSupportTypeEEnum = createEEnum(STATE_SUPPORT_TYPE);
		stateTypeEEnum = createEEnum(STATE_TYPE);
		stateType1EEnum = createEEnum(STATE_TYPE1);
		stateType2EEnum = createEEnum(STATE_TYPE2);
		stateType3EEnum = createEEnum(STATE_TYPE3);
		stateType4EEnum = createEEnum(STATE_TYPE4);
		stateType5EEnum = createEEnum(STATE_TYPE5);
		stateType6EEnum = createEEnum(STATE_TYPE6);
		storageModeType1EEnum = createEEnum(STORAGE_MODE_TYPE1);
		synchronizeSecurityTypeEEnum = createEEnum(SYNCHRONIZE_SECURITY_TYPE);
		targetTypeTypeEEnum = createEEnum(TARGET_TYPE_TYPE);
		targetTypeType1EEnum = createEEnum(TARGET_TYPE_TYPE1);
		targetTypeType2EEnum = createEEnum(TARGET_TYPE_TYPE2);
		trimmingTypeEEnum = createEEnum(TRIMMING_TYPE);
		typeTypeEEnum = createEEnum(TYPE_TYPE);
		typeType1EEnum = createEEnum(TYPE_TYPE1);
		typeType2EEnum = createEEnum(TYPE_TYPE2);
		typeType3EEnum = createEEnum(TYPE_TYPE3);
		typeType4EEnum = createEEnum(TYPE_TYPE4);
		typeType5EEnum = createEEnum(TYPE_TYPE5);
		typeType7EEnum = createEEnum(TYPE_TYPE7);
		typeType8EEnum = createEEnum(TYPE_TYPE8);
		typeType9EEnum = createEEnum(TYPE_TYPE9);
		typeType10EEnum = createEEnum(TYPE_TYPE10);
		typeType11EEnum = createEEnum(TYPE_TYPE11);
		typeType12EEnum = createEEnum(TYPE_TYPE12);
		typeType13EEnum = createEEnum(TYPE_TYPE13);
		unknownMemberEnumTypeEEnum = createEEnum(UNKNOWN_MEMBER_ENUM_TYPE);
		updateIsolationLevelTypeEEnum = createEEnum(UPDATE_ISOLATION_LEVEL_TYPE);
		usageTypeEEnum = createEEnum(USAGE_TYPE);
		usageType1EEnum = createEEnum(USAGE_TYPE1);
		valuensTypeEEnum = createEEnum(VALUENS_TYPE);
		valuensType1EEnum = createEEnum(VALUENS_TYPE1);
		valuensType2EEnum = createEEnum(VALUENS_TYPE2);
		valuensType3EEnum = createEEnum(VALUENS_TYPE3);
		valuensType4EEnum = createEEnum(VALUENS_TYPE4);
		valuensType5EEnum = createEEnum(VALUENS_TYPE5);
		valuensType6EEnum = createEEnum(VALUENS_TYPE6);
		visibilityTypeEEnum = createEEnum(VISIBILITY_TYPE);
		visualModeTypeEEnum = createEEnum(VISUAL_MODE_TYPE);
		writeBackTableCreationEEnum = createEEnum(WRITE_BACK_TABLE_CREATION);
		writeTypeEEnum = createEEnum(WRITE_TYPE);
		writeType1EEnum = createEEnum(WRITE_TYPE1);
		writeType2EEnum = createEEnum(WRITE_TYPE2);
		writeType3EEnum = createEEnum(WRITE_TYPE3);
		writeType4EEnum = createEEnum(WRITE_TYPE4);
		writeType5EEnum = createEEnum(WRITE_TYPE5);
		writeType6EEnum = createEEnum(WRITE_TYPE6);

		// Create data types
		accessTypeObjectEDataType = createEDataType(ACCESS_TYPE_OBJECT);
		aggregateFunctionTypeObjectEDataType = createEDataType(AGGREGATE_FUNCTION_TYPE_OBJECT);
		aggregationFunctionTypeObjectEDataType = createEDataType(AGGREGATION_FUNCTION_TYPE_OBJECT);
		aggregationStorageTypeObjectEDataType = createEDataType(AGGREGATION_STORAGE_TYPE_OBJECT);
		aggregationTypeTypeObjectEDataType = createEDataType(AGGREGATION_TYPE_TYPE_OBJECT);
		aggregationUsageTypeObjectEDataType = createEDataType(AGGREGATION_USAGE_TYPE_OBJECT);
		algorithmTypeObjectEDataType = createEDataType(ALGORITHM_TYPE_OBJECT);
		allMemberAggregationUsageTypeObjectEDataType = createEDataType(ALL_MEMBER_AGGREGATION_USAGE_TYPE_OBJECT);
		attributeHierarchyOptimizedStateTypeObjectEDataType = createEDataType(ATTRIBUTE_HIERARCHY_OPTIMIZED_STATE_TYPE_OBJECT);
		attributeHierarchyOptimizedStateTypeObject1EDataType = createEDataType(ATTRIBUTE_HIERARCHY_OPTIMIZED_STATE_TYPE_OBJECT1);
		axisFormatTypeObjectEDataType = createEDataType(AXIS_FORMAT_TYPE_OBJECT);
		cacheModeTypeObjectEDataType = createEDataType(CACHE_MODE_TYPE_OBJECT);
		calculationTypeTypeObjectEDataType = createEDataType(CALCULATION_TYPE_TYPE_OBJECT);
		cardinalityTypeObjectEDataType = createEDataType(CARDINALITY_TYPE_OBJECT);
		cardinalityTypeObject1EDataType = createEDataType(CARDINALITY_TYPE_OBJECT1);
		catalogLocationTypeObjectEDataType = createEDataType(CATALOG_LOCATION_TYPE_OBJECT);
		connectionStringSecurityTypeObjectEDataType = createEDataType(CONNECTION_STRING_SECURITY_TYPE_OBJECT);
		contentTypeObjectEDataType = createEDataType(CONTENT_TYPE_OBJECT);
		contentTypeObject1EDataType = createEDataType(CONTENT_TYPE_OBJECT1);
		cubeStorageModeEnumTypeObjectEDataType = createEDataType(CUBE_STORAGE_MODE_ENUM_TYPE_OBJECT);
		dataAggregationTypeObjectEDataType = createEDataType(DATA_AGGREGATION_TYPE_OBJECT);
		dataTypeTypeObjectEDataType = createEDataType(DATA_TYPE_TYPE_OBJECT);
		dataTypeTypeObject1EDataType = createEDataType(DATA_TYPE_TYPE_OBJECT1);
		dbpropConcatNullBehaviorTypeObjectEDataType = createEDataType(DBPROP_CONCAT_NULL_BEHAVIOR_TYPE_OBJECT);
		dbpropMsmdAutoExistsTypeObjectEDataType = createEDataType(DBPROP_MSMD_AUTO_EXISTS_TYPE_OBJECT);
		dbpropMsmdCompareCaseSensitiveStringFlagsTypeObjectEDataType = createEDataType(DBPROP_MSMD_COMPARE_CASE_SENSITIVE_STRING_FLAGS_TYPE_OBJECT);
		dbpropMsmdMDXCompatibilityTypeObjectEDataType = createEDataType(DBPROP_MSMD_MDX_COMPATIBILITY_TYPE_OBJECT);
		dbpropMsmdSubqueriesTypeObjectEDataType = createEDataType(DBPROP_MSMD_SUBQUERIES_TYPE_OBJECT);
		dbpropNullCollationTypeObjectEDataType = createEDataType(DBPROP_NULL_COLLATION_TYPE_OBJECT);
		dbpropOutputParameterAvailableTypeObjectEDataType = createEDataType(DBPROP_OUTPUT_PARAMETER_AVAILABLE_TYPE_OBJECT);
		dbpropPersistentIdTypeTypeObjectEDataType = createEDataType(DBPROP_PERSISTENT_ID_TYPE_TYPE_OBJECT);
		dbpropPrepareAbortBehaviorTypeObjectEDataType = createEDataType(DBPROP_PREPARE_ABORT_BEHAVIOR_TYPE_OBJECT);
		dbpropPrepareCommitBehaviorTypeObjectEDataType = createEDataType(DBPROP_PREPARE_COMMIT_BEHAVIOR_TYPE_OBJECT);
		dbpropQuotedIdentifierCaseTypeObjectEDataType = createEDataType(DBPROP_QUOTED_IDENTIFIER_CASE_TYPE_OBJECT);
		dialectTypeObjectEDataType = createEDataType(DIALECT_TYPE_OBJECT);
		dimensionAttributeTypeEnumTypeObjectEDataType = createEDataType(DIMENSION_ATTRIBUTE_TYPE_ENUM_TYPE_OBJECT);
		dimensionCurrentStorageModeEnumTypeObjectEDataType = createEDataType(DIMENSION_CURRENT_STORAGE_MODE_ENUM_TYPE_OBJECT);
		discretizationMethodTypeObjectEDataType = createEDataType(DISCRETIZATION_METHOD_TYPE_OBJECT);
		durabilityGuaranteeTypeObjectEDataType = createEDataType(DURABILITY_GUARANTEE_TYPE_OBJECT);
		editionTypeObjectEDataType = createEDataType(EDITION_TYPE_OBJECT);
		firstDayOfWeekTypeEDataType = createEDataType(FIRST_DAY_OF_WEEK_TYPE);
		fiscalFirstDayOfMonthTypeEDataType = createEDataType(FISCAL_FIRST_DAY_OF_MONTH_TYPE);
		fiscalFirstMonthTypeEDataType = createEDataType(FISCAL_FIRST_MONTH_TYPE);
		fiscalYearNameTypeObjectEDataType = createEDataType(FISCAL_YEAR_NAME_TYPE_OBJECT);
		formatTypeObjectEDataType = createEDataType(FORMAT_TYPE_OBJECT);
		formatTypeObject1EDataType = createEDataType(FORMAT_TYPE_OBJECT1);
		groupingBehaviorTypeObjectEDataType = createEDataType(GROUPING_BEHAVIOR_TYPE_OBJECT);
		hideMemberIfTypeObjectEDataType = createEDataType(HIDE_MEMBER_IF_TYPE_OBJECT);
		hierarchyUniqueNameStyleTypeObjectEDataType = createEDataType(HIERARCHY_UNIQUE_NAME_STYLE_TYPE_OBJECT);
		idTypeEDataType = createEDataType(ID_TYPE);
		idType1EDataType = createEDataType(ID_TYPE1);
		instanceSelectionTypeObjectEDataType = createEDataType(INSTANCE_SELECTION_TYPE_OBJECT);
		invalidXmlCharactersTypeObjectEDataType = createEDataType(INVALID_XML_CHARACTERS_TYPE_OBJECT);
		invocationTypeObjectEDataType = createEDataType(INVOCATION_TYPE_OBJECT);
		invocationTypeObject1EDataType = createEDataType(INVOCATION_TYPE_OBJECT1);
		invocationTypeObject2EDataType = createEDataType(INVOCATION_TYPE_OBJECT2);
		isolationTypeObjectEDataType = createEDataType(ISOLATION_TYPE_OBJECT);
		keyDuplicateTypeObjectEDataType = createEDataType(KEY_DUPLICATE_TYPE_OBJECT);
		keyErrorActionTypeObjectEDataType = createEDataType(KEY_ERROR_ACTION_TYPE_OBJECT);
		keyErrorLimitActionTypeObjectEDataType = createEDataType(KEY_ERROR_LIMIT_ACTION_TYPE_OBJECT);
		keyNotFoundTypeObjectEDataType = createEDataType(KEY_NOT_FOUND_TYPE_OBJECT);
		manufacturingExtraMonthQuarterTypeEDataType = createEDataType(MANUFACTURING_EXTRA_MONTH_QUARTER_TYPE);
		manufacturingFirstMonthTypeEDataType = createEDataType(MANUFACTURING_FIRST_MONTH_TYPE);
		manufacturingFirstWeekOfMonthTypeEDataType = createEDataType(MANUFACTURING_FIRST_WEEK_OF_MONTH_TYPE);
		materializationTypeObjectEDataType = createEDataType(MATERIALIZATION_TYPE_OBJECT);
		mdpropAggregateCellUpdateTypeObjectEDataType = createEDataType(MDPROP_AGGREGATE_CELL_UPDATE_TYPE_OBJECT);
		mdpropFlatteningSupportTypeObjectEDataType = createEDataType(MDPROP_FLATTENING_SUPPORT_TYPE_OBJECT);
		mdpropMdxNonMeasureExpressionsTypeObjectEDataType = createEDataType(MDPROP_MDX_NON_MEASURE_EXPRESSIONS_TYPE_OBJECT);
		mdpropMdxRangeRowsetTypeObjectEDataType = createEDataType(MDPROP_MDX_RANGE_ROWSET_TYPE_OBJECT);
		mdpropMdxSlicerTypeObjectEDataType = createEDataType(MDPROP_MDX_SLICER_TYPE_OBJECT);
		mdxMissingMemberModeTypeObjectEDataType = createEDataType(MDX_MISSING_MEMBER_MODE_TYPE_OBJECT);
		mdxMissingMemberModeTypeObject1EDataType = createEDataType(MDX_MISSING_MEMBER_MODE_TYPE_OBJECT1);
		mdxSupportTypeObjectEDataType = createEDataType(MDX_SUPPORT_TYPE_OBJECT);
		measureGroupStorageModeEnumTypeObjectEDataType = createEDataType(MEASURE_GROUP_STORAGE_MODE_ENUM_TYPE_OBJECT);
		membersWithDataTypeObjectEDataType = createEDataType(MEMBERS_WITH_DATA_TYPE_OBJECT);
		memberUniqueNameStyleTypeObjectEDataType = createEDataType(MEMBER_UNIQUE_NAME_STYLE_TYPE_OBJECT);
		memoryLockingModeTypeObjectEDataType = createEDataType(MEMORY_LOCKING_MODE_TYPE_OBJECT);
		modeTypeObjectEDataType = createEDataType(MODE_TYPE_OBJECT);
		notificationTechniqueTypeObjectEDataType = createEDataType(NOTIFICATION_TECHNIQUE_TYPE_OBJECT);
		notificationTechniqueTypeObject1EDataType = createEDataType(NOTIFICATION_TECHNIQUE_TYPE_OBJECT1);
		nullKeyConvertedToUnknownTypeObjectEDataType = createEDataType(NULL_KEY_CONVERTED_TO_UNKNOWN_TYPE_OBJECT);
		nullKeyNotAllowedTypeObjectEDataType = createEDataType(NULL_KEY_NOT_ALLOWED_TYPE_OBJECT);
		nullProcessingTypeObjectEDataType = createEDataType(NULL_PROCESSING_TYPE_OBJECT);
		objectExpansionObjectEDataType = createEDataType(OBJECT_EXPANSION_OBJECT);
		onlineModeTypeObjectEDataType = createEDataType(ONLINE_MODE_TYPE_OBJECT);
		optimizedStateTypeObjectEDataType = createEDataType(OPTIMIZED_STATE_TYPE_OBJECT);
		optionalityTypeObjectEDataType = createEDataType(OPTIONALITY_TYPE_OBJECT);
		orderByTypeObjectEDataType = createEDataType(ORDER_BY_TYPE_OBJECT);
		overrideBehaviorTypeObjectEDataType = createEDataType(OVERRIDE_BEHAVIOR_TYPE_OBJECT);
		parameterTypeObjectEDataType = createEDataType(PARAMETER_TYPE_OBJECT);
		parameterTypeObject1EDataType = createEDataType(PARAMETER_TYPE_OBJECT1);
		partitionCurrentStorageModeEnumTypeObjectEDataType = createEDataType(PARTITION_CURRENT_STORAGE_MODE_ENUM_TYPE_OBJECT);
		partitionModesObjectEDataType = createEDataType(PARTITION_MODES_OBJECT);
		partitionStorageModeEnumTypeObjectEDataType = createEDataType(PARTITION_STORAGE_MODE_ENUM_TYPE_OBJECT);
		permissionSetTypeObjectEDataType = createEDataType(PERMISSION_SET_TYPE_OBJECT);
		persistenceTypeObjectEDataType = createEDataType(PERSISTENCE_TYPE_OBJECT);
		persistenceTypeObject1EDataType = createEDataType(PERSISTENCE_TYPE_OBJECT1);
		processingGroupTypeObjectEDataType = createEDataType(PROCESSING_GROUP_TYPE_OBJECT);
		processingModeTypeObjectEDataType = createEDataType(PROCESSING_MODE_TYPE_OBJECT);
		processingModeTypeObject1EDataType = createEDataType(PROCESSING_MODE_TYPE_OBJECT1);
		processingModeTypeObject2EDataType = createEDataType(PROCESSING_MODE_TYPE_OBJECT2);
		processingModeTypeObject3EDataType = createEDataType(PROCESSING_MODE_TYPE_OBJECT3);
		processingStateTypeObjectEDataType = createEDataType(PROCESSING_STATE_TYPE_OBJECT);
		providerTypeTypeObjectEDataType = createEDataType(PROVIDER_TYPE_TYPE_OBJECT);
		readDefinitionTypeObjectEDataType = createEDataType(READ_DEFINITION_TYPE_OBJECT);
		readSourceDataTypeObjectEDataType = createEDataType(READ_SOURCE_DATA_TYPE_OBJECT);
		readTypeObjectEDataType = createEDataType(READ_TYPE_OBJECT);
		readTypeObject1EDataType = createEDataType(READ_TYPE_OBJECT1);
		refreshPolicyTypeObjectEDataType = createEDataType(REFRESH_POLICY_TYPE_OBJECT);
		refreshPolicyTypeObject1EDataType = createEDataType(REFRESH_POLICY_TYPE_OBJECT1);
		relationshipTypeTypeObjectEDataType = createEDataType(RELATIONSHIP_TYPE_TYPE_OBJECT);
		reportingFirstMonthTypeEDataType = createEDataType(REPORTING_FIRST_MONTH_TYPE);
		reportingFirstWeekOfMonthTypeObjectEDataType = createEDataType(REPORTING_FIRST_WEEK_OF_MONTH_TYPE_OBJECT);
		reportingWeekToMonthPatternTypeObjectEDataType = createEDataType(REPORTING_WEEK_TO_MONTH_PATTERN_TYPE_OBJECT);
		requestTypeTypeObjectEDataType = createEDataType(REQUEST_TYPE_TYPE_OBJECT);
		responseEncodingTypeObjectEDataType = createEDataType(RESPONSE_ENCODING_TYPE_OBJECT);
		retentionModesObjectEDataType = createEDataType(RETENTION_MODES_OBJECT);
		rootMemberIfTypeObjectEDataType = createEDataType(ROOT_MEMBER_IF_TYPE_OBJECT);
		safetyOptionsTypeObjectEDataType = createEDataType(SAFETY_OPTIONS_TYPE_OBJECT);
		scopeObjectEDataType = createEDataType(SCOPE_OBJECT);
		scriptCacheProcessingModeTypeObjectEDataType = createEDataType(SCRIPT_CACHE_PROCESSING_MODE_TYPE_OBJECT);
		scriptErrorHandlingModeTypeObjectEDataType = createEDataType(SCRIPT_ERROR_HANDLING_MODE_TYPE_OBJECT);
		securedCellValueTypeObjectEDataType = createEDataType(SECURED_CELL_VALUE_TYPE_OBJECT);
		securityTypeObjectEDataType = createEDataType(SECURITY_TYPE_OBJECT);
		securityTypeObject1EDataType = createEDataType(SECURITY_TYPE_OBJECT1);
		shareDimensionStorageTypeObjectEDataType = createEDataType(SHARE_DIMENSION_STORAGE_TYPE_OBJECT);
		sqlQueryModeTypeObjectEDataType = createEDataType(SQL_QUERY_MODE_TYPE_OBJECT);
		stateSupportTypeObjectEDataType = createEDataType(STATE_SUPPORT_TYPE_OBJECT);
		stateTypeObjectEDataType = createEDataType(STATE_TYPE_OBJECT);
		stateTypeObject1EDataType = createEDataType(STATE_TYPE_OBJECT1);
		stateTypeObject2EDataType = createEDataType(STATE_TYPE_OBJECT2);
		stateTypeObject3EDataType = createEDataType(STATE_TYPE_OBJECT3);
		stateTypeObject4EDataType = createEDataType(STATE_TYPE_OBJECT4);
		stateTypeObject5EDataType = createEDataType(STATE_TYPE_OBJECT5);
		stateTypeObject6EDataType = createEDataType(STATE_TYPE_OBJECT6);
		storageModeTypeObjectEDataType = createEDataType(STORAGE_MODE_TYPE_OBJECT);
		synchronizeSecurityTypeObjectEDataType = createEDataType(SYNCHRONIZE_SECURITY_TYPE_OBJECT);
		targetTypeTypeObjectEDataType = createEDataType(TARGET_TYPE_TYPE_OBJECT);
		targetTypeTypeObject1EDataType = createEDataType(TARGET_TYPE_TYPE_OBJECT1);
		targetTypeTypeObject2EDataType = createEDataType(TARGET_TYPE_TYPE_OBJECT2);
		trimmingTypeObjectEDataType = createEDataType(TRIMMING_TYPE_OBJECT);
		typeTypeObjectEDataType = createEDataType(TYPE_TYPE_OBJECT);
		typeTypeObject1EDataType = createEDataType(TYPE_TYPE_OBJECT1);
		typeTypeObject2EDataType = createEDataType(TYPE_TYPE_OBJECT2);
		typeTypeObject3EDataType = createEDataType(TYPE_TYPE_OBJECT3);
		typeTypeObject4EDataType = createEDataType(TYPE_TYPE_OBJECT4);
		typeTypeObject5EDataType = createEDataType(TYPE_TYPE_OBJECT5);
		typeTypeObject6EDataType = createEDataType(TYPE_TYPE_OBJECT6);
		typeTypeObject7EDataType = createEDataType(TYPE_TYPE_OBJECT7);
		typeTypeObject8EDataType = createEDataType(TYPE_TYPE_OBJECT8);
		typeTypeObject9EDataType = createEDataType(TYPE_TYPE_OBJECT9);
		typeTypeObject10EDataType = createEDataType(TYPE_TYPE_OBJECT10);
		typeTypeObject11EDataType = createEDataType(TYPE_TYPE_OBJECT11);
		typeTypeObject12EDataType = createEDataType(TYPE_TYPE_OBJECT12);
		unknownMemberEnumTypeObjectEDataType = createEDataType(UNKNOWN_MEMBER_ENUM_TYPE_OBJECT);
		updateIsolationLevelTypeObjectEDataType = createEDataType(UPDATE_ISOLATION_LEVEL_TYPE_OBJECT);
		usageTypeObjectEDataType = createEDataType(USAGE_TYPE_OBJECT);
		usageTypeObject1EDataType = createEDataType(USAGE_TYPE_OBJECT1);
		valuensTypeObjectEDataType = createEDataType(VALUENS_TYPE_OBJECT);
		valuensTypeObject1EDataType = createEDataType(VALUENS_TYPE_OBJECT1);
		valuensTypeObject2EDataType = createEDataType(VALUENS_TYPE_OBJECT2);
		valuensTypeObject3EDataType = createEDataType(VALUENS_TYPE_OBJECT3);
		valuensTypeObject4EDataType = createEDataType(VALUENS_TYPE_OBJECT4);
		valuensTypeObject5EDataType = createEDataType(VALUENS_TYPE_OBJECT5);
		valuensTypeObject6EDataType = createEDataType(VALUENS_TYPE_OBJECT6);
		visibilityTypeObjectEDataType = createEDataType(VISIBILITY_TYPE_OBJECT);
		visualModeTypeObjectEDataType = createEDataType(VISUAL_MODE_TYPE_OBJECT);
		writeBackTableCreationObjectEDataType = createEDataType(WRITE_BACK_TABLE_CREATION_OBJECT);
		writeTypeObjectEDataType = createEDataType(WRITE_TYPE_OBJECT);
		writeTypeObject1EDataType = createEDataType(WRITE_TYPE_OBJECT1);
		writeTypeObject2EDataType = createEDataType(WRITE_TYPE_OBJECT2);
		writeTypeObject3EDataType = createEDataType(WRITE_TYPE_OBJECT3);
		writeTypeObject4EDataType = createEDataType(WRITE_TYPE_OBJECT4);
		writeTypeObject5EDataType = createEDataType(WRITE_TYPE_OBJECT5);
		writeTypeObject6EDataType = createEDataType(WRITE_TYPE_OBJECT6);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private boolean isInitialized = false;

	/**
	 * Complete the initialization of the package and its meta-model.  This
	 * method is guarded to have no affect on any invocation but its first.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void initializePackageContents() {
		if (isInitialized) return;
		isInitialized = true;

		// Initialize package
		setName(eNAME);
		setNsPrefix(eNS_PREFIX);
		setNsURI(eNS_URI);

		// Obtain other dependent packages
		XMLTypePackage theXMLTypePackage = (XMLTypePackage)EPackage.Registry.INSTANCE.getEPackage(XMLTypePackage.eNS_URI);
		EnginePackage theEnginePackage = (EnginePackage)EPackage.Registry.INSTANCE.getEPackage(EnginePackage.eNS_URI);
		Engine100Package theEngine100Package = (Engine100Package)EPackage.Registry.INSTANCE.getEPackage(Engine100Package.eNS_URI);
		Engine300Package theEngine300Package = (Engine300Package)EPackage.Registry.INSTANCE.getEPackage(Engine300Package.eNS_URI);
		Engine800Package theEngine800Package = (Engine800Package)EPackage.Registry.INSTANCE.getEPackage(Engine800Package.eNS_URI);
		Engine200_200Package theEngine200_200Package = (Engine200_200Package)EPackage.Registry.INSTANCE.getEPackage(Engine200_200Package.eNS_URI);
		Engine300_300Package theEngine300_300Package = (Engine300_300Package)EPackage.Registry.INSTANCE.getEPackage(Engine300_300Package.eNS_URI);
		Engine200Package theEngine200Package = (Engine200Package)EPackage.Registry.INSTANCE.getEPackage(Engine200Package.eNS_URI);
		Engine2Package theEngine2Package = (Engine2Package)EPackage.Registry.INSTANCE.getEPackage(Engine2Package.eNS_URI);
		Xmla_mddatasetPackage theXmla_mddatasetPackage = (Xmla_mddatasetPackage)EPackage.Registry.INSTANCE.getEPackage(Xmla_mddatasetPackage.eNS_URI);
		Xmla_rowsetPackage theXmla_rowsetPackage = (Xmla_rowsetPackage)EPackage.Registry.INSTANCE.getEPackage(Xmla_rowsetPackage.eNS_URI);
		Xmla_emptyPackage theXmla_emptyPackage = (Xmla_emptyPackage)EPackage.Registry.INSTANCE.getEPackage(Xmla_emptyPackage.eNS_URI);
		Xmla_multipleresultsPackage theXmla_multipleresultsPackage = (Xmla_multipleresultsPackage)EPackage.Registry.INSTANCE.getEPackage(Xmla_multipleresultsPackage.eNS_URI);

		// Create type parameters

		// Set bounds for type parameters

		// Add supertypes to classes
		attributeBindingEClass.getESuperTypes().add(this.getBinding());
		calculatedMeasureBindingEClass.getESuperTypes().add(this.getBinding());
		clrAssemblyEClass.getESuperTypes().add(this.getAssembly());
		columnBindingEClass.getESuperTypes().add(this.getBinding());
		comAssemblyEClass.getESuperTypes().add(this.getAssembly());
		cubeAttributeBindingEClass.getESuperTypes().add(this.getBinding());
		cubeDimensionBindingEClass.getESuperTypes().add(this.getBinding());
		cubePermissionEClass.getESuperTypes().add(this.getPermission());
		databasePermissionEClass.getESuperTypes().add(this.getPermission());
		dataMiningMeasureGroupDimensionEClass.getESuperTypes().add(this.getMeasureGroupDimension());
		dataSourcePermissionEClass.getESuperTypes().add(this.getPermission());
		dataSourceViewBindingEClass.getESuperTypes().add(this.getBinding());
		degenerateMeasureGroupDimensionEClass.getESuperTypes().add(this.getMeasureGroupDimension());
		dimensionBindingEClass.getESuperTypes().add(this.getBinding());
		dimensionPermissionEClass.getESuperTypes().add(this.getPermission());
		drillThroughActionEClass.getESuperTypes().add(this.getAction());
		dsvTableBindingEClass.getESuperTypes().add(this.getTabularBinding());
		inheritedBindingEClass.getESuperTypes().add(this.getBinding());
		locationEClass.getESuperTypes().add(this.getLocationBackup());
		manyToManyMeasureGroupDimensionEClass.getESuperTypes().add(this.getMeasureGroupDimension());
		measureBindingEClass.getESuperTypes().add(this.getBinding());
		measureGroupBindingEClass.getESuperTypes().add(this.getBinding());
		measureGroupDimensionBindingEClass.getESuperTypes().add(this.getBinding());
		miningModelPermissionEClass.getESuperTypes().add(this.getPermission());
		miningStructurePermissionEClass.getESuperTypes().add(this.getPermission());
		olapDataSourceEClass.getESuperTypes().add(this.getDataSource());
		proactiveCachingIncrementalProcessingBindingEClass.getESuperTypes().add(this.getProactiveCachingBinding());
		proactiveCachingInheritedBindingEClass.getESuperTypes().add(this.getProactiveCachingObjectNotificationBinding());
		proactiveCachingQueryBindingEClass.getESuperTypes().add(this.getProactiveCachingBinding());
		proactiveCachingTablesBindingEClass.getESuperTypes().add(this.getProactiveCachingObjectNotificationBinding());
		queryBindingEClass.getESuperTypes().add(this.getTabularBinding());
		referenceMeasureGroupDimensionEClass.getESuperTypes().add(this.getMeasureGroupDimension());
		regularMeasureGroupDimensionEClass.getESuperTypes().add(this.getMeasureGroupDimension());
		relationalDataSourceEClass.getESuperTypes().add(this.getDataSource());
		reportActionEClass.getESuperTypes().add(this.getAction());
		rowBindingEClass.getESuperTypes().add(this.getBinding());
		standardActionEClass.getESuperTypes().add(this.getAction());
		tableBindingEClass.getESuperTypes().add(this.getTabularBinding());
		timeAttributeBindingEClass.getESuperTypes().add(this.getBinding());
		timeBindingEClass.getESuperTypes().add(this.getBinding());
		userDefinedGroupBindingEClass.getESuperTypes().add(this.getBinding());

		// Initialize classes, features, and operations; add parameters
		initEClass(accountEClass, Account.class, "Account", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAccount_AccountType(), theXMLTypePackage.getString(), "accountType", null, 1, 1, Account.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAccount_AggregationFunction(), this.getAggregationFunctionType(), "aggregationFunction", null, 0, 1, Account.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAccount_Aliases(), this.getAliasesType(), null, "aliases", null, 0, 1, Account.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAccount_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Account.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(accountsTypeEClass, AccountsType.class, "AccountsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAccountsType_Account(), this.getAccount(), null, "account", null, 0, -1, AccountsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(actionEClass, Action.class, "Action", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(actionsTypeEClass, ActionsType.class, "ActionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getActionsType_Action(), this.getAction(), null, "action", null, 0, -1, ActionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(actionsType1EClass, ActionsType1.class, "ActionsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getActionsType1_Action(), this.getPerspectiveAction(), null, "action", null, 0, -1, ActionsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(actionTypeEClass, ActionType.class, "ActionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getActionType_Module(), theXMLTypePackage.getString(), "module", null, 0, 1, ActionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getActionType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ActionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getActionType_Package(), theXMLTypePackage.getString(), "package", null, 1, 1, ActionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationEClass, Aggregation.class, "Aggregation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregation_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Aggregation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregation_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Aggregation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregation_Dimensions(), this.getDimensionsType(), null, "dimensions", null, 0, 1, Aggregation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregation_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Aggregation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregation_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Aggregation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationAttributeEClass, AggregationAttribute.class, "AggregationAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationAttribute_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, AggregationAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationAttribute_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AggregationAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationDesignEClass, AggregationDesign.class, "AggregationDesign", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationDesign_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationDesign_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationDesign_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationDesign_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationDesign_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationDesign_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationDesign_EstimatedRows(), theXMLTypePackage.getLong(), "estimatedRows", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationDesign_Dimensions(), this.getDimensionsType(), null, "dimensions", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationDesign_Aggregations(), this.getAggregationsType(), null, "aggregations", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationDesign_EstimatedPerformanceGain(), theXMLTypePackage.getInteger(), "estimatedPerformanceGain", null, 0, 1, AggregationDesign.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationDesignAttributeEClass, AggregationDesignAttribute.class, "AggregationDesignAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationDesignAttribute_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, AggregationDesignAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationDesignAttribute_EstimatedCount(), theXMLTypePackage.getLong(), "estimatedCount", null, 0, 1, AggregationDesignAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationDesignDimensionEClass, AggregationDesignDimension.class, "AggregationDesignDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationDesignDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, AggregationDesignDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationDesignDimension_Attributes(), this.getAttributesType8(), null, "attributes", null, 0, 1, AggregationDesignDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationDesignDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AggregationDesignDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationDesignsTypeEClass, AggregationDesignsType.class, "AggregationDesignsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAggregationDesignsType_AggregationDesign(), this.getAggregationDesign(), null, "aggregationDesign", null, 0, -1, AggregationDesignsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationDimensionEClass, AggregationDimension.class, "AggregationDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, AggregationDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationDimension_Attributes(), this.getAttributesType7(), null, "attributes", null, 0, 1, AggregationDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AggregationDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationInstanceEClass, AggregationInstance.class, "AggregationInstance", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationInstance_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationInstance_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationInstance_AggregationType(), this.getAggregationTypeType(), "aggregationType", null, 1, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationInstance_Source(), this.getTabularBinding(), null, "source", null, 0, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationInstance_Dimensions(), this.getDimensionsType(), null, "dimensions", null, 0, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationInstance_Measures(), this.getMeasuresType(), null, "measures", null, 0, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationInstance_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAggregationInstance_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, AggregationInstance.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationInstanceAttributeEClass, AggregationInstanceAttribute.class, "AggregationInstanceAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationInstanceAttribute_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, AggregationInstanceAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationInstanceAttribute_KeyColumns(), this.getKeyColumnsType4(), null, "keyColumns", null, 1, 1, AggregationInstanceAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationInstanceDimensionEClass, AggregationInstanceDimension.class, "AggregationInstanceDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationInstanceDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, AggregationInstanceDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationInstanceDimension_Attributes(), this.getAttributesType2(), null, "attributes", null, 0, 1, AggregationInstanceDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationInstanceMeasureEClass, AggregationInstanceMeasure.class, "AggregationInstanceMeasure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAggregationInstanceMeasure_MeasureID(), theXMLTypePackage.getString(), "measureID", null, 1, 1, AggregationInstanceMeasure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAggregationInstanceMeasure_Source(), this.getColumnBinding(), null, "source", null, 1, 1, AggregationInstanceMeasure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationInstancesTypeEClass, AggregationInstancesType.class, "AggregationInstancesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAggregationInstancesType_AggregationInstance(), this.getAggregationInstance(), null, "aggregationInstance", null, 0, -1, AggregationInstancesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aggregationsTypeEClass, AggregationsType.class, "AggregationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAggregationsType_Aggregation(), this.getAggregation(), null, "aggregation", null, 0, -1, AggregationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(algorithmParameterEClass, AlgorithmParameter.class, "AlgorithmParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAlgorithmParameter_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, AlgorithmParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAlgorithmParameter_Value(), theXMLTypePackage.getAnySimpleType(), "value", null, 1, 1, AlgorithmParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(algorithmParametersTypeEClass, AlgorithmParametersType.class, "AlgorithmParametersType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAlgorithmParametersType_AlgorithmParameter(), this.getAlgorithmParameter(), null, "algorithmParameter", null, 0, -1, AlgorithmParametersType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(aliasesTypeEClass, AliasesType.class, "AliasesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAliasesType_Alias(), theXMLTypePackage.getString(), "alias", null, 0, -1, AliasesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(allMemberTranslationsTypeEClass, AllMemberTranslationsType.class, "AllMemberTranslationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAllMemberTranslationsType_AllMemberTranslation(), this.getTranslation(), null, "allMemberTranslation", null, 0, -1, AllMemberTranslationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(alterEClass, Alter.class, "Alter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAlter_Object(), this.getObjectReference(), null, "object", null, 0, 1, Alter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAlter_ObjectDefinition(), this.getMajorObject(), null, "objectDefinition", null, 1, 1, Alter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAlter_AllowCreate(), theXMLTypePackage.getBoolean(), "allowCreate", null, 0, 1, Alter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAlter_ObjectExpansion(), this.getObjectExpansion(), "objectExpansion", null, 0, 1, Alter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAlter_Scope(), this.getScope(), "scope", null, 0, 1, Alter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(andOrTypeEClass, AndOrType.class, "AndOrType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAndOrType_Group(), ecorePackage.getEFeatureMapEntry(), "group", null, 0, -1, AndOrType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_Not(), this.getNotType(), null, "not", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_Or(), this.getAndOrType(), null, "or", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_And(), this.getAndOrType(), null, "and", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_Equal(), this.getBoolBinop(), null, "equal", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_NotEqual(), this.getBoolBinop(), null, "notEqual", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_Less(), this.getBoolBinop(), null, "less", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_LessOrEqual(), this.getBoolBinop(), null, "lessOrEqual", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_Greater(), this.getBoolBinop(), null, "greater", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_GreaterOrEqual(), this.getBoolBinop(), null, "greaterOrEqual", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_Like(), this.getBoolBinop(), null, "like", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getAndOrType_NotLike(), this.getBoolBinop(), null, "notLike", null, 0, 2, AndOrType.class, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);

		initEClass(annotationEClass, Annotation.class, "Annotation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAnnotation_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Annotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAnnotation_Visibility(), this.getVisibilityType(), "visibility", null, 0, 1, Annotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAnnotation_Value(), ecorePackage.getEObject(), null, "value", null, 0, 1, Annotation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(annotationsTypeEClass, AnnotationsType.class, "AnnotationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAnnotationsType_Annotation(), this.getAnnotation(), null, "annotation", null, 0, -1, AnnotationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(assembliesTypeEClass, AssembliesType.class, "AssembliesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAssembliesType_Assembly(), this.getAssembly(), null, "assembly", null, 0, -1, AssembliesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(assembliesType1EClass, AssembliesType1.class, "AssembliesType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAssembliesType1_Assembly(), this.getAssembly(), null, "assembly", null, 0, -1, AssembliesType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(assemblyEClass, Assembly.class, "Assembly", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAssembly_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Assembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAssembly_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Assembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAssembly_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Assembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAssembly_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Assembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAssembly_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Assembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAssembly_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Assembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAssembly_ImpersonationInfo(), theEnginePackage.getImpersonationInfo(), null, "impersonationInfo", null, 0, 1, Assembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attachEClass, Attach.class, "Attach", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAttach_Folder(), theXMLTypePackage.getString(), "folder", null, 1, 1, Attach.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttach_Password(), theXMLTypePackage.getString(), "password", null, 0, 1, Attach.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttach_AllowOverwrite(), theXMLTypePackage.getBoolean(), "allowOverwrite", null, 0, 1, Attach.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttach_ReadWriteMode(), theEngine100Package.getReadWriteModeType(), "readWriteMode", null, 0, 1, Attach.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributeAllMemberTranslationsTypeEClass, AttributeAllMemberTranslationsType.class, "AttributeAllMemberTranslationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributeAllMemberTranslationsType_MemberAllMemberTranslation(), this.getTranslation(), null, "memberAllMemberTranslation", null, 0, -1, AttributeAllMemberTranslationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributeBindingEClass, AttributeBinding.class, "AttributeBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAttributeBinding_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, AttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeBinding_Type(), this.getTypeType1(), "type", null, 1, 1, AttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeBinding_Ordinal(), theXMLTypePackage.getInteger(), "ordinal", null, 0, 1, AttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributeInsertUpdateEClass, AttributeInsertUpdate.class, "AttributeInsertUpdate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAttributeInsertUpdate_AttributeName(), theXMLTypePackage.getString(), "attributeName", null, 1, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeInsertUpdate_Name(), theXMLTypePackage.getString(), "name", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAttributeInsertUpdate_Keys(), this.getKeysType1(), null, "keys", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAttributeInsertUpdate_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeInsertUpdate_Value(), theXMLTypePackage.getString(), "value", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeInsertUpdate_CUSTOMROLLUP(), theXMLTypePackage.getString(), "cUSTOMROLLUP", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeInsertUpdate_CUSTOMROLLUPPROPERTIES(), theXMLTypePackage.getString(), "cUSTOMROLLUPPROPERTIES", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeInsertUpdate_UNARYOPERATOR(), theXMLTypePackage.getString(), "uNARYOPERATOR", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeInsertUpdate_SKIPPEDLEVELS(), theXMLTypePackage.getInteger(), "sKIPPEDLEVELS", null, 0, 1, AttributeInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributePermissionEClass, AttributePermission.class, "AttributePermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAttributePermission_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, AttributePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributePermission_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, AttributePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributePermission_DefaultMember(), theXMLTypePackage.getString(), "defaultMember", null, 0, 1, AttributePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributePermission_VisualTotals(), theXMLTypePackage.getString(), "visualTotals", null, 0, 1, AttributePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributePermission_AllowedSet(), theXMLTypePackage.getString(), "allowedSet", null, 0, 1, AttributePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributePermission_DeniedSet(), theXMLTypePackage.getString(), "deniedSet", null, 0, 1, AttributePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAttributePermission_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AttributePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributePermissionsTypeEClass, AttributePermissionsType.class, "AttributePermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributePermissionsType_AttributePermission(), this.getAttributePermission(), null, "attributePermission", null, 0, -1, AttributePermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributePermissionsType1EClass, AttributePermissionsType1.class, "AttributePermissionsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributePermissionsType1_AttributePermission(), this.getAttributePermission(), null, "attributePermission", null, 0, -1, AttributePermissionsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributeRelationshipEClass, AttributeRelationship.class, "AttributeRelationship", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAttributeRelationship_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeRelationship_RelationshipType(), this.getRelationshipTypeType(), "relationshipType", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeRelationship_Cardinality(), this.getCardinalityType1(), "cardinality", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeRelationship_Optionality(), this.getOptionalityType(), "optionality", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeRelationship_OverrideBehavior(), this.getOverrideBehaviorType(), "overrideBehavior", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAttributeRelationship_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeRelationship_Name(), theXMLTypePackage.getString(), "name", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeRelationship_Visible(), theXMLTypePackage.getBoolean(), "visible", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAttributeRelationship_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, AttributeRelationship.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributeRelationshipsTypeEClass, AttributeRelationshipsType.class, "AttributeRelationshipsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributeRelationshipsType_AttributeRelationship(), this.getAttributeRelationship(), null, "attributeRelationship", null, 0, -1, AttributeRelationshipsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesTypeEClass, AttributesType.class, "AttributesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType_Attribute(), this.getDimensionAttribute(), null, "attribute", null, 0, -1, AttributesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType1EClass, AttributesType1.class, "AttributesType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType1_Attribute(), this.getPerspectiveAttribute(), null, "attribute", null, 0, -1, AttributesType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType2EClass, AttributesType2.class, "AttributesType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType2_Attribute(), this.getAggregationInstanceAttribute(), null, "attribute", null, 0, -1, AttributesType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType3EClass, AttributesType3.class, "AttributesType3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType3_Attribute(), this.getAttributeInsertUpdate(), null, "attribute", null, 0, -1, AttributesType3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType4EClass, AttributesType4.class, "AttributesType4", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType4_Attribute(), this.getAttributeInsertUpdate(), null, "attribute", null, 0, -1, AttributesType4.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType5EClass, AttributesType5.class, "AttributesType5", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType5_Attribute(), this.getCubeAttribute(), null, "attribute", null, 0, -1, AttributesType5.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType6EClass, AttributesType6.class, "AttributesType6", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType6_Attribute(), this.getMeasureGroupAttribute(), null, "attribute", null, 1, -1, AttributesType6.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType7EClass, AttributesType7.class, "AttributesType7", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType7_Attribute(), this.getAggregationAttribute(), null, "attribute", null, 0, -1, AttributesType7.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributesType8EClass, AttributesType8.class, "AttributesType8", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getAttributesType8_Attribute(), this.getAggregationDesignAttribute(), null, "attribute", null, 0, -1, AttributesType8.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(attributeTranslationEClass, AttributeTranslation.class, "AttributeTranslation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getAttributeTranslation_Language(), theXMLTypePackage.getUnsignedInt(), "language", null, 1, 1, AttributeTranslation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeTranslation_Caption(), theXMLTypePackage.getString(), "caption", null, 0, 1, AttributeTranslation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeTranslation_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, AttributeTranslation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeTranslation_DisplayFolder(), theXMLTypePackage.getString(), "displayFolder", null, 0, 1, AttributeTranslation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAttributeTranslation_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, AttributeTranslation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getAttributeTranslation_CaptionColumn(), this.getDataItem(), null, "captionColumn", null, 0, 1, AttributeTranslation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getAttributeTranslation_MembersWithDataCaption(), theXMLTypePackage.getString(), "membersWithDataCaption", null, 0, 1, AttributeTranslation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(backupEClass, Backup.class, "Backup", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBackup_Object(), this.getObjectReference(), null, "object", null, 1, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBackup_File(), theXMLTypePackage.getString(), "file", null, 1, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBackup_Security(), this.getSecurityType1(), "security", null, 0, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBackup_ApplyCompression(), theXMLTypePackage.getBoolean(), "applyCompression", null, 0, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBackup_AllowOverwrite(), theXMLTypePackage.getBoolean(), "allowOverwrite", null, 0, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBackup_Password(), theXMLTypePackage.getString(), "password", null, 0, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBackup_BackupRemotePartitions(), theXMLTypePackage.getBoolean(), "backupRemotePartitions", null, 0, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBackup_Locations(), this.getLocationsType2(), null, "locations", null, 0, 1, Backup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(batchEClass, Batch.class, "Batch", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBatch_Parallel(), this.getParallelType(), null, "parallel", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Bindings(), this.getOutOfLineBinding(), null, "bindings", null, 0, 1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_DataSource(), this.getDataSource(), null, "dataSource", null, 0, 1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_DataSourceView(), this.getDataSourceView(), null, "dataSourceView", null, 0, 1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_ErrorConfiguration(), this.getErrorConfiguration(), null, "errorConfiguration", null, 0, 1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Create(), this.getCreate(), null, "create", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Alter(), this.getAlter(), null, "alter", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Delete(), this.getDelete(), null, "delete", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Process(), this.getProcess(), null, "process", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_MergePartitions(), this.getMergePartitions(), null, "mergePartitions", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_DesignAggregations(), this.getDesignAggregations(), null, "designAggregations", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_NotifyTableChange(), this.getNotifyTableChange(), null, "notifyTableChange", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Insert(), this.getInsert(), null, "insert", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Update(), this.getUpdate(), null, "update", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Drop(), this.getDrop(), null, "drop", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_UpdateCells(), this.getUpdateCells(), null, "updateCells", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Backup(), this.getBackup(), null, "backup", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Restore(), this.getRestore(), null, "restore", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Synchronize(), this.getSynchronize(), null, "synchronize", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Cancel(), this.getCancel(), null, "cancel", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_BeginTransaction(), this.getBeginTransaction(), null, "beginTransaction", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_CommitTransaction(), this.getCommitTransaction(), null, "commitTransaction", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_RollbackTransaction(), this.getRollbackTransaction(), null, "rollbackTransaction", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_ClearCache(), this.getClearCache(), null, "clearCache", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Subscribe(), this.getSubscribe(), null, "subscribe", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Unsubscribe(), this.getUnsubscribe(), null, "unsubscribe", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Detach(), this.getDetach(), null, "detach", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Attach(), this.getAttach(), null, "attach", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Lock(), this.getLock(), null, "lock", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Unlock(), this.getUnlock(), null, "unlock", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_ImageLoad(), this.getImageLoad(), null, "imageLoad", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_ImageSave(), this.getImageSave(), null, "imageSave", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_CloneDatabase(), this.getCloneDatabase(), null, "cloneDatabase", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_SetAuthContext(), this.getSetAuthContext(), null, "setAuthContext", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_DBCC(), this.getDBCC(), null, "dBCC", null, 0, 1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBatch_Discover(), this.getDiscoverType(), null, "discover", null, 0, -1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBatch_ProcessAffectedObjects(), theXMLTypePackage.getBoolean(), "processAffectedObjects", null, 0, 1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBatch_Transaction(), theXMLTypePackage.getBoolean(), "transaction", null, 0, 1, Batch.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(beginSessionTypeEClass, BeginSessionType.class, "BeginSessionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBeginSessionType_MustUnderstand(), theXMLTypePackage.getInt(), "mustUnderstand", null, 0, 1, BeginSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(beginTransactionEClass, BeginTransaction.class, "BeginTransaction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(bindingEClass, Binding.class, "Binding", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(bindingsEClass, Bindings.class, "Bindings", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBindings_Binding(), this.getOutOfLineBinding(), null, "binding", null, 0, -1, Bindings.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(boolBinopEClass, BoolBinop.class, "BoolBinop", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getBoolBinop_ColumnID(), theXMLTypePackage.getString(), "columnID", null, 1, 1, BoolBinop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getBoolBinop_Value(), theXMLTypePackage.getString(), "value", null, 1, 1, BoolBinop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(booleanExprEClass, BooleanExpr.class, "BooleanExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getBooleanExpr_And(), this.getBooleanExpr(), null, "and", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBooleanExpr_Or(), this.getBooleanExpr(), null, "or", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBooleanExpr_Not(), this.getUnaryExpr(), null, "not", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBooleanExpr_Leaf(), this.getPredLeaf(), null, "leaf", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBooleanExpr_And1(), this.getBooleanExpr(), null, "and1", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBooleanExpr_Or1(), this.getBooleanExpr(), null, "or1", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBooleanExpr_Not1(), this.getUnaryExpr(), null, "not1", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getBooleanExpr_Leaf1(), this.getPredLeaf(), null, "leaf1", null, 0, 1, BooleanExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(calculatedMeasureBindingEClass, CalculatedMeasureBinding.class, "CalculatedMeasureBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCalculatedMeasureBinding_MeasureName(), theXMLTypePackage.getString(), "measureName", null, 1, 1, CalculatedMeasureBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(calculationPropertiesTypeEClass, CalculationPropertiesType.class, "CalculationPropertiesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCalculationPropertiesType_CalculationProperty(), this.getCalculationProperty(), null, "calculationProperty", null, 0, -1, CalculationPropertiesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(calculationPropertyEClass, CalculationProperty.class, "CalculationProperty", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCalculationProperty_CalculationReference(), theXMLTypePackage.getString(), "calculationReference", null, 1, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_CalculationType(), this.getCalculationTypeType(), "calculationType", null, 1, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCalculationProperty_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_Visible(), theXMLTypePackage.getBoolean(), "visible", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_SolveOrder(), theXMLTypePackage.getInteger(), "solveOrder", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_FormatString(), theXMLTypePackage.getString(), "formatString", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_ForeColor(), theXMLTypePackage.getString(), "foreColor", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_BackColor(), theXMLTypePackage.getString(), "backColor", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_FontName(), theXMLTypePackage.getString(), "fontName", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_FontSize(), theXMLTypePackage.getString(), "fontSize", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_FontFlags(), theXMLTypePackage.getString(), "fontFlags", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_NonEmptyBehavior(), theXMLTypePackage.getString(), "nonEmptyBehavior", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_AssociatedMeasureGroupID(), theXMLTypePackage.getString(), "associatedMeasureGroupID", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_DisplayFolder(), theXMLTypePackage.getString(), "displayFolder", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCalculationProperty_Language(), theXMLTypePackage.getInteger(), "language", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCalculationProperty_VisualizationProperties(), theEngine300Package.getCalculationPropertiesVisualizationProperties(), null, "visualizationProperties", null, 0, 1, CalculationProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(calculationsTypeEClass, CalculationsType.class, "CalculationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCalculationsType_Calculation(), this.getPerspectiveCalculation(), null, "calculation", null, 0, -1, CalculationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cancelEClass, Cancel.class, "Cancel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCancel_ConnectionID(), theXMLTypePackage.getInteger(), "connectionID", null, 0, 1, Cancel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCancel_SessionID(), theXMLTypePackage.getString(), "sessionID", null, 0, 1, Cancel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCancel_SPID(), theXMLTypePackage.getInteger(), "sPID", null, 0, 1, Cancel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCancel_CancelAssociated(), theXMLTypePackage.getBoolean(), "cancelAssociated", null, 0, 1, Cancel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cellEClass, Cell.class, "Cell", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCell_Value(), theXMLTypePackage.getAnySimpleType(), "value", null, 1, 1, Cell.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCell_CellOrdinal(), theXMLTypePackage.getLong(), "cellOrdinal", null, 0, 1, Cell.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cellPermissionEClass, CellPermission.class, "CellPermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCellPermission_Access(), this.getAccessType(), "access", null, 1, 1, CellPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCellPermission_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, CellPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCellPermission_Expression(), theXMLTypePackage.getString(), "expression", null, 0, 1, CellPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCellPermission_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, CellPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cellPermissionsTypeEClass, CellPermissionsType.class, "CellPermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCellPermissionsType_CellPermission(), this.getCellPermission(), null, "cellPermission", null, 0, 3, CellPermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(classifiedColumnsTypeEClass, ClassifiedColumnsType.class, "ClassifiedColumnsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getClassifiedColumnsType_ClassifiedColumnID(), theXMLTypePackage.getString(), "classifiedColumnID", null, 0, -1, ClassifiedColumnsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(clearCacheEClass, ClearCache.class, "ClearCache", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getClearCache_Object(), this.getObjectReference(), null, "object", null, 1, 1, ClearCache.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(clearResultTypeEClass, ClearResultType.class, "ClearResultType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getClearResultType_ResultId(), theXMLTypePackage.getString(), "resultId", null, 1, 1, ClearResultType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cloneDatabaseEClass, CloneDatabase.class, "CloneDatabase", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCloneDatabase_Object(), this.getObjectType(), null, "object", null, 1, 1, CloneDatabase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCloneDatabase_Target(), this.getTargetType1(), null, "target", null, 1, 1, CloneDatabase.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(clrAssemblyEClass, ClrAssembly.class, "ClrAssembly", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getClrAssembly_Files(), this.getFilesType(), null, "files", null, 1, 1, ClrAssembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getClrAssembly_PermissionSet(), this.getPermissionSetType(), "permissionSet", null, 0, 1, ClrAssembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(clrAssemblyFileEClass, ClrAssemblyFile.class, "ClrAssemblyFile", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getClrAssemblyFile_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ClrAssemblyFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getClrAssemblyFile_Type(), this.getTypeType2(), "type", null, 1, 1, ClrAssemblyFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getClrAssemblyFile_Data(), this.getDataBlock(), null, "data", null, 1, 1, ClrAssemblyFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(columnBindingEClass, ColumnBinding.class, "ColumnBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getColumnBinding_TableID(), theXMLTypePackage.getString(), "tableID", null, 1, 1, ColumnBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColumnBinding_ColumnID(), theXMLTypePackage.getString(), "columnID", null, 1, 1, ColumnBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(columnsTypeEClass, ColumnsType.class, "ColumnsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getColumnsType_Column(), this.getBinding(), null, "column", null, 0, -1, ColumnsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(columnsType1EClass, ColumnsType1.class, "ColumnsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getColumnsType1_Column(), this.getMiningStructureColumn(), null, "column", null, 1, -1, ColumnsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(columnsType2EClass, ColumnsType2.class, "ColumnsType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getColumnsType2_Column(), this.getMiningModelColumn(), null, "column", null, 0, -1, ColumnsType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(columnsType3EClass, ColumnsType3.class, "ColumnsType3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getColumnsType3_Column(), this.getMiningModelColumn(), null, "column", null, 0, -1, ColumnsType3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(columnsType4EClass, ColumnsType4.class, "ColumnsType4", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getColumnsType4_Column(), this.getMiningStructureColumn(), null, "column", null, 1, -1, ColumnsType4.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(columnTypeEClass, ColumnType.class, "ColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getColumnType_ID(), theXMLTypePackage.getInteger(), "iD", null, 1, 1, ColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColumnType_Type(), theXMLTypePackage.getInteger(), "type", null, 1, 1, ColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColumnType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColumnType_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, ColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColumnType_Filterable(), theXMLTypePackage.getBoolean(), "filterable", null, 1, 1, ColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColumnType_Repeatable(), theXMLTypePackage.getBoolean(), "repeatable", null, 1, 1, ColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getColumnType_RepeatedBase(), theXMLTypePackage.getBoolean(), "repeatedBase", null, 1, 1, ColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(comAssemblyEClass, ComAssembly.class, "ComAssembly", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getComAssembly_Source(), theXMLTypePackage.getString(), "source", null, 0, 1, ComAssembly.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(commandEClass, Command.class, "Command", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCommand_Statement(), theXMLTypePackage.getString(), "statement", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Create(), this.getCreate(), null, "create", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Alter(), this.getAlter(), null, "alter", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Delete(), this.getDelete(), null, "delete", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Process(), this.getProcess(), null, "process", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_MergePartitions(), this.getMergePartitions(), null, "mergePartitions", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_DesignAggregations(), this.getDesignAggregations(), null, "designAggregations", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_ClearCache(), this.getClearCache(), null, "clearCache", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Subscribe(), this.getSubscribe(), null, "subscribe", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Unsubscribe(), this.getUnsubscribe(), null, "unsubscribe", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Cancel(), this.getCancel(), null, "cancel", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_BeginTransaction(), this.getBeginTransaction(), null, "beginTransaction", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_CommitTransaction(), this.getCommitTransaction(), null, "commitTransaction", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_RollbackTransaction(), this.getRollbackTransaction(), null, "rollbackTransaction", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Lock(), this.getLock(), null, "lock", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Unlock(), this.getUnlock(), null, "unlock", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Backup(), this.getBackup(), null, "backup", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Restore(), this.getRestore(), null, "restore", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Synchronize(), this.getSynchronize(), null, "synchronize", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Attach(), this.getAttach(), null, "attach", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Detach(), this.getDetach(), null, "detach", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Insert(), this.getInsert(), null, "insert", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Update(), this.getUpdate(), null, "update", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Drop(), this.getDrop(), null, "drop", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_UpdateCells(), this.getUpdateCells(), null, "updateCells", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_NotifyTableChange(), this.getNotifyTableChange(), null, "notifyTableChange", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_Batch(), this.getBatch(), null, "batch", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_ImageLoad(), this.getImageLoad(), null, "imageLoad", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_ImageSave(), this.getImageSave(), null, "imageSave", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_CloneDatabase(), this.getCloneDatabase(), null, "cloneDatabase", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_SetAuthContext(), this.getSetAuthContext(), null, "setAuthContext", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCommand_DBCC(), this.getDBCC(), null, "dBCC", null, 0, 1, Command.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(commandsTypeEClass, CommandsType.class, "CommandsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCommandsType_Command(), this.getCommand(), null, "command", null, 0, -1, CommandsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(commitTransactionEClass, CommitTransaction.class, "CommitTransaction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCommitTransaction_DurabilityGuarantee(), this.getDurabilityGuaranteeType(), "durabilityGuarantee", null, 0, 1, CommitTransaction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(comparatorTypeEClass, ComparatorType.class, "ComparatorType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getComparatorType_Module(), theXMLTypePackage.getString(), "module", null, 0, 1, ComparatorType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getComparatorType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ComparatorType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getComparatorType_Package(), theXMLTypePackage.getString(), "package", null, 1, 1, ComparatorType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(createEClass, Create.class, "Create", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCreate_ParentObject(), this.getObjectReference(), null, "parentObject", null, 0, 1, Create.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCreate_ObjectDefinition(), this.getMajorObject(), null, "objectDefinition", null, 1, 1, Create.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCreate_AllowOverwrite(), theXMLTypePackage.getBoolean(), "allowOverwrite", null, 0, 1, Create.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCreate_Scope(), this.getScope(), "scope", null, 0, 1, Create.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubeEClass, Cube.class, "Cube", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCube_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_Language(), theXMLTypePackage.getInteger(), "language", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_Collation(), theXMLTypePackage.getString(), "collation", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_Dimensions(), this.getDimensionsType(), null, "dimensions", null, 1, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_CubePermissions(), this.getCubePermissionsType(), null, "cubePermissions", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_MdxScripts(), this.getMdxScriptsType(), null, "mdxScripts", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_Perspectives(), this.getPerspectivesType(), null, "perspectives", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_State(), this.getStateType6(), "state", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_DefaultMeasure(), theXMLTypePackage.getString(), "defaultMeasure", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_Visible(), theXMLTypePackage.getBoolean(), "visible", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_MeasureGroups(), this.getMeasureGroupsType(), null, "measureGroups", null, 1, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_Source(), this.getDataSourceViewBinding(), null, "source", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_AggregationPrefix(), theXMLTypePackage.getString(), "aggregationPrefix", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_ProcessingPriority(), theXMLTypePackage.getInteger(), "processingPriority", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_StorageMode(), this.getStorageModeType(), null, "storageMode", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_ProcessingMode(), this.getProcessingModeType1(), "processingMode", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_ScriptCacheProcessingMode(), this.getScriptCacheProcessingModeType(), "scriptCacheProcessingMode", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_ScriptErrorHandlingMode(), this.getScriptErrorHandlingModeType(), "scriptErrorHandlingMode", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_DaxOptimizationMode(), theEngine800Package.getDaxOptimizationModeType(), "daxOptimizationMode", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_ProactiveCaching(), this.getProactiveCaching(), null, "proactiveCaching", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_Kpis(), this.getKpisType(), null, "kpis", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_ErrorConfiguration(), this.getErrorConfiguration(), null, "errorConfiguration", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCube_Actions(), this.getActionsType(), null, "actions", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_StorageLocation(), theXMLTypePackage.getString(), "storageLocation", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_EstimatedRows(), theXMLTypePackage.getLong(), "estimatedRows", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCube_LastProcessed(), theXMLTypePackage.getDateTime(), "lastProcessed", null, 0, 1, Cube.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubeAttributeEClass, CubeAttribute.class, "CubeAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCubeAttribute_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, CubeAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeAttribute_AggregationUsage(), this.getAggregationUsageType(), "aggregationUsage", null, 0, 1, CubeAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeAttribute_AttributeHierarchyOptimizedState(), this.getAttributeHierarchyOptimizedStateType1(), "attributeHierarchyOptimizedState", null, 0, 1, CubeAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeAttribute_AttributeHierarchyEnabled(), theXMLTypePackage.getBoolean(), "attributeHierarchyEnabled", null, 0, 1, CubeAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeAttribute_AttributeHierarchyVisible(), theXMLTypePackage.getBoolean(), "attributeHierarchyVisible", null, 0, 1, CubeAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeAttribute_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, CubeAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubeAttributeBindingEClass, CubeAttributeBinding.class, "CubeAttributeBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCubeAttributeBinding_CubeID(), theXMLTypePackage.getString(), "cubeID", null, 1, 1, CubeAttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeAttributeBinding_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, CubeAttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeAttributeBinding_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, CubeAttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeAttributeBinding_Type(), this.getTypeType5(), "type", null, 1, 1, CubeAttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeAttributeBinding_Ordinal(), this.getOrdinalType(), null, "ordinal", null, 0, 1, CubeAttributeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubeDimensionEClass, CubeDimension.class, "CubeDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCubeDimension_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimension_Name(), theXMLTypePackage.getString(), "name", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimension_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeDimension_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimension_DimensionID(), theXMLTypePackage.getString(), "dimensionID", null, 1, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimension_Visible(), theXMLTypePackage.getBoolean(), "visible", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimension_AllMemberAggregationUsage(), this.getAllMemberAggregationUsageType(), "allMemberAggregationUsage", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimension_HierarchyUniqueNameStyle(), this.getHierarchyUniqueNameStyleType(), "hierarchyUniqueNameStyle", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimension_MemberUniqueNameStyle(), this.getMemberUniqueNameStyleType(), "memberUniqueNameStyle", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeDimension_Attributes(), this.getAttributesType5(), null, "attributes", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeDimension_Hierarchies(), this.getHierarchiesType2(), null, "hierarchies", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, CubeDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubeDimensionBindingEClass, CubeDimensionBinding.class, "CubeDimensionBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCubeDimensionBinding_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 1, 1, CubeDimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimensionBinding_CubeID(), theXMLTypePackage.getString(), "cubeID", null, 1, 1, CubeDimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimensionBinding_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, CubeDimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimensionBinding_Filter(), theXMLTypePackage.getString(), "filter", null, 0, 1, CubeDimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubeDimensionPermissionEClass, CubeDimensionPermission.class, "CubeDimensionPermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCubeDimensionPermission_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, CubeDimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimensionPermission_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, CubeDimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimensionPermission_Read(), this.getReadType(), "read", null, 0, 1, CubeDimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeDimensionPermission_Write(), this.getWriteType6(), "write", null, 0, 1, CubeDimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeDimensionPermission_AttributePermissions(), this.getAttributePermissionsType1(), null, "attributePermissions", null, 0, 1, CubeDimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeDimensionPermission_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, CubeDimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubeHierarchyEClass, CubeHierarchy.class, "CubeHierarchy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCubeHierarchy_HierarchyID(), theXMLTypePackage.getString(), "hierarchyID", null, 1, 1, CubeHierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeHierarchy_OptimizedState(), this.getOptimizedStateType(), "optimizedState", null, 0, 1, CubeHierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeHierarchy_Visible(), theXMLTypePackage.getBoolean(), "visible", null, 0, 1, CubeHierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubeHierarchy_Enabled(), theXMLTypePackage.getBoolean(), "enabled", null, 0, 1, CubeHierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubeHierarchy_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, CubeHierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubePermissionEClass, CubePermission.class, "CubePermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCubePermission_ReadSourceData(), this.getReadSourceDataType(), "readSourceData", null, 0, 1, CubePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubePermission_DimensionPermissions(), this.getDimensionPermissionsType1(), null, "dimensionPermissions", null, 0, 1, CubePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getCubePermission_CellPermissions(), this.getCellPermissionsType(), null, "cellPermissions", null, 0, 1, CubePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCubePermission_Write(), this.getWriteType3(), "write", null, 0, 1, CubePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubePermissionsTypeEClass, CubePermissionsType.class, "CubePermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCubePermissionsType_CubePermission(), this.getCubePermission(), null, "cubePermission", null, 0, -1, CubePermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(cubesTypeEClass, CubesType.class, "CubesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCubesType_Cube(), this.getCube(), null, "cube", null, 0, -1, CubesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(currentStorageModeTypeEClass, CurrentStorageModeType.class, "CurrentStorageModeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCurrentStorageModeType_Value(), this.getDimensionCurrentStorageModeEnumType(), "value", null, 0, 1, CurrentStorageModeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCurrentStorageModeType_Valuens(), this.getValuensType3(), "valuens", null, 0, 1, CurrentStorageModeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(currentStorageModeType1EClass, CurrentStorageModeType1.class, "CurrentStorageModeType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getCurrentStorageModeType1_Value(), this.getPartitionCurrentStorageModeEnumType(), "value", null, 0, 1, CurrentStorageModeType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getCurrentStorageModeType1_Valuens(), this.getValuensType1(), "valuens", null, 0, 1, CurrentStorageModeType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customRollupColumnTypeEClass, CustomRollupColumnType.class, "CustomRollupColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCustomRollupColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, CustomRollupColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(customRollupPropertiesColumnTypeEClass, CustomRollupPropertiesColumnType.class, "CustomRollupPropertiesColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getCustomRollupPropertiesColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, CustomRollupPropertiesColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(databaseEClass, Database.class, "Database", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDatabase_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_LastUpdate(), theXMLTypePackage.getDateTime(), "lastUpdate", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_State(), this.getStateType(), "state", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_ReadWriteMode(), theEngine100Package.getReadWriteModeType(), "readWriteMode", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_DbStorageLocation(), theXMLTypePackage.getString(), "dbStorageLocation", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_AggregationPrefix(), theXMLTypePackage.getString(), "aggregationPrefix", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_ProcessingPriority(), theXMLTypePackage.getInteger(), "processingPriority", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_EstimatedSize(), theXMLTypePackage.getLong(), "estimatedSize", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_LastProcessed(), theXMLTypePackage.getDateTime(), "lastProcessed", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_Language(), theXMLTypePackage.getInteger(), "language", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_Collation(), theXMLTypePackage.getString(), "collation", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_Visible(), theXMLTypePackage.getBoolean(), "visible", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_MasterDataSourceID(), theXMLTypePackage.getString(), "masterDataSourceID", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_DataSourceImpersonationInfo(), theEnginePackage.getImpersonationInfo(), null, "dataSourceImpersonationInfo", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_Accounts(), this.getAccountsType(), null, "accounts", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_DataSources(), this.getDataSourcesType(), null, "dataSources", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_DataSourceViews(), this.getDataSourceViewsType(), null, "dataSourceViews", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_Dimensions(), this.getDimensionsType(), null, "dimensions", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_Cubes(), this.getCubesType(), null, "cubes", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_MiningStructures(), this.getMiningStructuresType(), null, "miningStructures", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_Roles(), this.getRolesType1(), null, "roles", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_Assemblies(), this.getAssembliesType1(), null, "assemblies", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_DatabasePermissions(), this.getDatabasePermissionsType(), null, "databasePermissions", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDatabase_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_StorageEngineUsed(), theEngine200_200Package.getStorageEngineUsedType(), "storageEngineUsed", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_ImagePath(), theXMLTypePackage.getString(), "imagePath", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_ImageUrl(), theXMLTypePackage.getString(), "imageUrl", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_ImageUniqueID(), theXMLTypePackage.getString(), "imageUniqueID", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_ImageVersion(), theXMLTypePackage.getString(), "imageVersion", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_Token(), theXMLTypePackage.getString(), "token", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_CompatibilityLevel(), theXMLTypePackage.getInteger(), "compatibilityLevel", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabase_DirectQueryMode(), theEngine300_300Package.getDirectQueryModeType(), "directQueryMode", null, 0, 1, Database.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(databasePermissionEClass, DatabasePermission.class, "DatabasePermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDatabasePermission_Administer(), theXMLTypePackage.getBoolean(), "administer", null, 0, 1, DatabasePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDatabasePermission_Write(), this.getWriteType4(), "write", null, 0, 1, DatabasePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(databasePermissionsTypeEClass, DatabasePermissionsType.class, "DatabasePermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDatabasePermissionsType_DatabasePermission(), this.getDatabasePermission(), null, "databasePermission", null, 0, -1, DatabasePermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(databasesTypeEClass, DatabasesType.class, "DatabasesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDatabasesType_Database(), this.getDatabase(), null, "database", null, 0, -1, DatabasesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataBlockEClass, DataBlock.class, "DataBlock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataBlock_Block(), theXMLTypePackage.getBase64Binary(), "block", null, 0, -1, DataBlock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataItemEClass, DataItem.class, "DataItem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataItem_DataType(), this.getDataTypeType(), "dataType", null, 1, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataItem_DataSize(), theXMLTypePackage.getInteger(), "dataSize", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataItem_MimeType(), theXMLTypePackage.getString(), "mimeType", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataItem_NullProcessing(), this.getNullProcessingType(), "nullProcessing", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataItem_Trimming(), this.getTrimmingType(), "trimming", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataItem_InvalidXmlCharacters(), this.getInvalidXmlCharactersType(), "invalidXmlCharacters", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataItem_Collation(), theXMLTypePackage.getString(), "collation", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataItem_Format(), this.getFormatType(), "format", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataItem_Source(), this.getBinding(), null, "source", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataItem_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, DataItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataMiningMeasureGroupDimensionEClass, DataMiningMeasureGroupDimension.class, "DataMiningMeasureGroupDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataMiningMeasureGroupDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, DataMiningMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataMiningMeasureGroupDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, DataMiningMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataMiningMeasureGroupDimension_Source(), this.getMeasureGroupDimensionBinding(), null, "source", null, 0, 1, DataMiningMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataMiningMeasureGroupDimension_CaseCubeDimensionID(), theXMLTypePackage.getString(), "caseCubeDimensionID", null, 1, 1, DataMiningMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataSourceEClass, DataSource.class, "DataSource", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataSource_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataSource_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_ManagedProvider(), theXMLTypePackage.getString(), "managedProvider", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_ConnectionString(), theXMLTypePackage.getString(), "connectionString", null, 1, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_ConnectionStringSecurity(), this.getConnectionStringSecurityType(), "connectionStringSecurity", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataSource_ImpersonationInfo(), theEnginePackage.getImpersonationInfo(), null, "impersonationInfo", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_Isolation(), this.getIsolationType(), "isolation", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_MaxActiveConnections(), theXMLTypePackage.getInteger(), "maxActiveConnections", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_Timeout(), theXMLTypePackage.getDuration(), "timeout", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataSource_DataSourcePermissions(), this.getDataSourcePermissionsType(), null, "dataSourcePermissions", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataSource_QueryImpersonationInfo(), theEnginePackage.getImpersonationInfo(), null, "queryImpersonationInfo", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSource_QueryHints(), theXMLTypePackage.getString(), "queryHints", null, 0, 1, DataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataSourcePermissionEClass, DataSourcePermission.class, "DataSourcePermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataSourcePermission_Write(), this.getWriteType5(), "write", null, 0, 1, DataSourcePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataSourcePermissionsTypeEClass, DataSourcePermissionsType.class, "DataSourcePermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDataSourcePermissionsType_DataSourcePermission(), this.getDataSourcePermission(), null, "dataSourcePermission", null, 0, -1, DataSourcePermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataSourcesTypeEClass, DataSourcesType.class, "DataSourcesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDataSourcesType_DataSource(), this.getDataSource(), null, "dataSource", null, 0, -1, DataSourcesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataSourceViewEClass, DataSourceView.class, "DataSourceView", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataSourceView_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, DataSourceView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSourceView_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, DataSourceView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSourceView_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, DataSourceView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSourceView_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, DataSourceView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSourceView_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, DataSourceView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataSourceView_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, DataSourceView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataSourceView_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 1, 1, DataSourceView.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataSourceViewBindingEClass, DataSourceViewBinding.class, "DataSourceViewBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataSourceViewBinding_DataSourceViewID(), theXMLTypePackage.getString(), "dataSourceViewID", null, 1, 1, DataSourceViewBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataSourceViewsTypeEClass, DataSourceViewsType.class, "DataSourceViewsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDataSourceViewsType_DataSourceView(), this.getDataSourceView(), null, "dataSourceView", null, 0, -1, DataSourceViewsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataTypeEClass, DataType.class, "DataType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDataType_Column(), this.getColumnType(), null, "column", null, 1, 1, DataType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataType1EClass, DataType1.class, "DataType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDataType1_EventCategory(), this.getEventCategoryType(), null, "eventCategory", null, 1, 1, DataType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataType2EClass, DataType2.class, "DataType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataType2_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, DataType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDataType2_Version(), this.getVersionType(), null, "version", null, 1, 1, DataType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataType2_Type(), theXMLTypePackage.getString(), "type", null, 0, 1, DataType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDataType2_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, DataType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dataType3EClass, DataType3.class, "DataType3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDataType3_DataBlock(), theXMLTypePackage.getString(), "dataBlock", null, 0, -1, DataType3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dbccEClass, org.eclipse.daanse.xmla.model.ecore.xmla.DBCC.class, "DBCC", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDBCC_Object(), this.getObjectReference(), null, "object", null, 0, 1, org.eclipse.daanse.xmla.model.ecore.xmla.DBCC.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(degenerateMeasureGroupDimensionEClass, DegenerateMeasureGroupDimension.class, "DegenerateMeasureGroupDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDegenerateMeasureGroupDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, DegenerateMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDegenerateMeasureGroupDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, DegenerateMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDegenerateMeasureGroupDimension_Source(), this.getMeasureGroupDimensionBinding(), null, "source", null, 0, 1, DegenerateMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDegenerateMeasureGroupDimension_ShareDimensionStorage(), theEngine200_200Package.getShareDimensionStorageType(), "shareDimensionStorage", null, 0, 1, DegenerateMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(deleteEClass, Delete.class, "Delete", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDelete_Object(), this.getObjectReference(), null, "object", null, 1, 1, Delete.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDelete_IgnoreFailures(), theXMLTypePackage.getBoolean(), "ignoreFailures", null, 0, 1, Delete.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(designAggregationsEClass, DesignAggregations.class, "DesignAggregations", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDesignAggregations_Object(), this.getObjectReference(), null, "object", null, 1, 1, DesignAggregations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDesignAggregations_Time(), theXMLTypePackage.getDuration(), "time", null, 0, 1, DesignAggregations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDesignAggregations_Steps(), theXMLTypePackage.getInteger(), "steps", null, 0, 1, DesignAggregations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDesignAggregations_Optimization(), theXMLTypePackage.getDouble(), "optimization", null, 0, 1, DesignAggregations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDesignAggregations_Storage(), theXMLTypePackage.getLong(), "storage", null, 0, 1, DesignAggregations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDesignAggregations_Materialize(), theXMLTypePackage.getBoolean(), "materialize", null, 0, 1, DesignAggregations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDesignAggregations_Queries(), this.getQueriesType(), null, "queries", null, 0, 1, DesignAggregations.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(detachEClass, Detach.class, "Detach", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDetach_Object(), this.getObjectReference(), null, "object", null, 1, 1, Detach.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDetach_Password(), theXMLTypePackage.getString(), "password", null, 0, 1, Detach.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionEClass, Dimension.class, "Dimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDimension_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_Source(), this.getBinding(), null, "source", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_MiningModelID(), theXMLTypePackage.getString(), "miningModelID", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_Type(), this.getTypeType3(), "type", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_UnknownMember(), this.getUnknownMemberType(), null, "unknownMember", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_MdxMissingMemberMode(), this.getMdxMissingMemberModeType(), "mdxMissingMemberMode", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_ErrorConfiguration(), this.getErrorConfiguration(), null, "errorConfiguration", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_StorageMode(), this.getStorageModeType1(), "storageMode", null, 1, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_WriteEnabled(), theXMLTypePackage.getBoolean(), "writeEnabled", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_ProcessingPriority(), theXMLTypePackage.getInteger(), "processingPriority", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_LastProcessed(), theXMLTypePackage.getDateTime(), "lastProcessed", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_DimensionPermissions(), this.getDimensionPermissionsType(), null, "dimensionPermissions", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_DependsOnDimensionID(), theXMLTypePackage.getString(), "dependsOnDimensionID", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_Language(), theXMLTypePackage.getInteger(), "language", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_Collation(), theXMLTypePackage.getString(), "collation", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_UnknownMemberName(), theXMLTypePackage.getString(), "unknownMemberName", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_UnknownMemberTranslations(), this.getUnknownMemberTranslationsType(), null, "unknownMemberTranslations", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_State(), this.getStateType2(), "state", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_ProactiveCaching(), this.getProactiveCaching(), null, "proactiveCaching", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_ProcessingMode(), this.getProcessingModeType(), "processingMode", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_ProcessingGroup(), this.getProcessingGroupType(), "processingGroup", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_CurrentStorageMode(), this.getCurrentStorageModeType(), null, "currentStorageMode", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_Attributes(), this.getAttributesType(), null, "attributes", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_AttributeAllMemberName(), theXMLTypePackage.getString(), "attributeAllMemberName", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_AttributeAllMemberTranslations(), this.getAttributeAllMemberTranslationsType(), null, "attributeAllMemberTranslations", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_Hierarchies(), this.getHierarchiesType(), null, "hierarchies", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_ProcessingRecommendation(), theEngine200_200Package.getProcessingRecommendationType(), "processingRecommendation", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimension_Relationships(), theEngine300_300Package.getRelationships(), null, "relationships", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_StringStoresCompatibilityLevel(), theEngine300Package.getStringStoresCompatibilityLevelType(), "stringStoresCompatibilityLevel", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimension_CurrentStringStoresCompatibilityLevel(), theEngine300Package.getCurrentStringStoresCompatibilityLevelType(), "currentStringStoresCompatibilityLevel", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionAttributeEClass, DimensionAttribute.class, "DimensionAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDimensionAttribute_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_Type(), this.getTypeType6(), null, "type", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_Usage(), this.getUsageType1(), "usage", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_Source(), this.getBinding(), null, "source", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_EstimatedCount(), theXMLTypePackage.getLong(), "estimatedCount", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_KeyColumns(), this.getKeyColumnsType(), null, "keyColumns", null, 1, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_NameColumn(), this.getDataItem(), null, "nameColumn", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_ValueColumn(), this.getDataItem(), null, "valueColumn", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_AttributeRelationships(), this.getAttributeRelationshipsType(), null, "attributeRelationships", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_DiscretizationMethod(), this.getDiscretizationMethodType(), "discretizationMethod", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_DiscretizationBucketCount(), theXMLTypePackage.getInteger(), "discretizationBucketCount", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_RootMemberIf(), this.getRootMemberIfType(), "rootMemberIf", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_OrderBy(), this.getOrderByType(), "orderBy", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_DefaultMember(), theXMLTypePackage.getString(), "defaultMember", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_OrderByAttributeID(), theXMLTypePackage.getString(), "orderByAttributeID", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_SkippedLevelsColumn(), this.getDataItem(), null, "skippedLevelsColumn", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_NamingTemplate(), theXMLTypePackage.getString(), "namingTemplate", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_MembersWithData(), this.getMembersWithDataType(), "membersWithData", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_MembersWithDataCaption(), theXMLTypePackage.getString(), "membersWithDataCaption", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_NamingTemplateTranslations(), this.getNamingTemplateTranslationsType(), null, "namingTemplateTranslations", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_CustomRollupColumn(), this.getDataItem(), null, "customRollupColumn", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_CustomRollupPropertiesColumn(), this.getDataItem(), null, "customRollupPropertiesColumn", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_UnaryOperatorColumn(), this.getDataItem(), null, "unaryOperatorColumn", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_AttributeHierarchyOrdered(), theXMLTypePackage.getBoolean(), "attributeHierarchyOrdered", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_MemberNamesUnique(), theXMLTypePackage.getBoolean(), "memberNamesUnique", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_IsAggregatable(), theXMLTypePackage.getBoolean(), "isAggregatable", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_AttributeHierarchyEnabled(), theXMLTypePackage.getBoolean(), "attributeHierarchyEnabled", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_AttributeHierarchyOptimizedState(), this.getAttributeHierarchyOptimizedStateType(), "attributeHierarchyOptimizedState", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_AttributeHierarchyVisible(), theXMLTypePackage.getBoolean(), "attributeHierarchyVisible", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_AttributeHierarchyDisplayFolder(), theXMLTypePackage.getString(), "attributeHierarchyDisplayFolder", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_KeyUniquenessGuarantee(), theXMLTypePackage.getBoolean(), "keyUniquenessGuarantee", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_GroupingBehavior(), this.getGroupingBehaviorType(), "groupingBehavior", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_InstanceSelection(), this.getInstanceSelectionType(), "instanceSelection", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_ProcessingState(), this.getProcessingStateType(), "processingState", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_AttributeHierarchyProcessingState(), theEngine300Package.getAttributeHierarchyProcessingState(), "attributeHierarchyProcessingState", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDimensionAttribute_VisualizationProperties(), theEngine300Package.getDimensionAttributeVisualizationProperties(), null, "visualizationProperties", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionAttribute_ExtendedType(), theXMLTypePackage.getString(), "extendedType", null, 0, 1, DimensionAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionBindingEClass, DimensionBinding.class, "DimensionBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDimensionBinding_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 1, 1, DimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionBinding_DimensionID(), theXMLTypePackage.getString(), "dimensionID", null, 1, 1, DimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionBinding_Persistence(), this.getPersistenceType(), "persistence", null, 0, 1, DimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionBinding_RefreshPolicy(), this.getRefreshPolicyType(), "refreshPolicy", null, 0, 1, DimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionBinding_RefreshInterval(), theXMLTypePackage.getDuration(), "refreshInterval", null, 0, 1, DimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionPermissionEClass, DimensionPermission.class, "DimensionPermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDimensionPermission_AttributePermissions(), this.getAttributePermissionsType(), null, "attributePermissions", null, 0, 1, DimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionPermission_Write(), this.getWriteType1(), "write", null, 0, 1, DimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDimensionPermission_AllowedRowsExpression(), theXMLTypePackage.getString(), "allowedRowsExpression", null, 0, 1, DimensionPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionPermissionsTypeEClass, DimensionPermissionsType.class, "DimensionPermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDimensionPermissionsType_DimensionPermission(), this.getDimensionPermission(), null, "dimensionPermission", null, 0, -1, DimensionPermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionPermissionsType1EClass, DimensionPermissionsType1.class, "DimensionPermissionsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDimensionPermissionsType1_DimensionPermission(), this.getCubeDimensionPermission(), null, "dimensionPermission", null, 0, -1, DimensionPermissionsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dimensionsTypeEClass, DimensionsType.class, "DimensionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDimensionsType_Dimension(), this.getDimension(), null, "dimension", null, 0, -1, DimensionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(discoverResponseTypeEClass, DiscoverResponseType.class, "DiscoverResponseType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDiscoverResponseType_Return(), this.getReturnType(), null, "return", null, 0, 1, DiscoverResponseType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(discoverTypeEClass, DiscoverType.class, "DiscoverType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDiscoverType_RequestType(), this.getRequestTypeType(), "requestType", null, 1, 1, DiscoverType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDiscoverType_Restrictions(), this.getRestrictionsType(), null, "restrictions", null, 1, 1, DiscoverType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDiscoverType_Properties(), this.getProperties(), null, "properties", null, 1, 1, DiscoverType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(documentRootEClass, DocumentRoot.class, "DocumentRoot", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDocumentRoot_Mixed(), ecorePackage.getEFeatureMapEntry(), "mixed", null, 0, -1, null, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_XMLNSPrefixMap(), ecorePackage.getEStringToStringMapEntry(), null, "xMLNSPrefixMap", null, 0, -1, null, IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_XSISchemaLocation(), ecorePackage.getEStringToStringMapEntry(), null, "xSISchemaLocation", null, 0, -1, null, IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Action(), this.getActionType(), null, "action", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEAttribute(getDocumentRoot_AllowedRowsExpression(), theXMLTypePackage.getString(), "allowedRowsExpression", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_BeginSession(), this.getBeginSessionType(), null, "beginSession", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_ClearResult(), this.getClearResultType(), null, "clearResult", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Discover(), this.getDiscoverType(), null, "discover", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_DiscoverResponse(), this.getDiscoverResponseType(), null, "discoverResponse", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_EndSession(), this.getEndSessionType(), null, "endSession", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Event(), this.getEventType1(), null, "event", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_EventSession(), this.getEventSessionType(), null, "eventSession", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_EventType(), this.getEventTypeType(), null, "eventType", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Execute(), this.getExecuteType(), null, "execute", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_ExecuteResponse(), this.getExecuteResponseType(), null, "executeResponse", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_KeepResult(), this.getKeepResultType(), null, "keepResult", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Parameter(), this.getParameterType2(), null, "parameter", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Result(), this.getResultType(), null, "result", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Session(), this.getSessionType(), null, "session", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEAttribute(getDocumentRoot_ShareDimensionStorage(), this.getShareDimensionStorageType(), "shareDimensionStorage", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, IS_DERIVED, IS_ORDERED);
		initEReference(getDocumentRoot_Target(), this.getTargetType(), null, "target", null, 0, -2, null, IS_TRANSIENT, IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, IS_DERIVED, IS_ORDERED);

		initEClass(drillThroughActionEClass, DrillThroughAction.class, "DrillThroughAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDrillThroughAction_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Caption(), theXMLTypePackage.getString(), "caption", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_CaptionIsMdx(), theXMLTypePackage.getBoolean(), "captionIsMdx", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDrillThroughAction_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_TargetType(), this.getTargetTypeType2(), "targetType", null, 1, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Target(), theXMLTypePackage.getString(), "target", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Condition(), theXMLTypePackage.getString(), "condition", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Type(), this.getTypeType4(), "type", null, 1, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Invocation(), this.getInvocationType2(), "invocation", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Application(), theXMLTypePackage.getString(), "application", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDrillThroughAction_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_Default(), theXMLTypePackage.getBoolean(), "default", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDrillThroughAction_Columns(), this.getColumnsType(), null, "columns", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrillThroughAction_MaximumRows(), theXMLTypePackage.getInteger(), "maximumRows", null, 0, 1, DrillThroughAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dropEClass, Drop.class, "Drop", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getDrop_Object(), this.getObject(), null, "object", null, 1, 1, Drop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDrop_DeleteWithDescendants(), theXMLTypePackage.getBoolean(), "deleteWithDescendants", null, 0, 1, Drop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getDrop_Where(), this.getWhere(), null, "where", null, 1, 1, Drop.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(dsvTableBindingEClass, DSVTableBinding.class, "DSVTableBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getDSVTableBinding_DataSourceViewID(), theXMLTypePackage.getString(), "dataSourceViewID", null, 0, 1, DSVTableBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDSVTableBinding_TableID(), theXMLTypePackage.getString(), "tableID", null, 1, 1, DSVTableBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getDSVTableBinding_DataEmbeddingStyle(), theEngine300Package.getDataEmbeddingStyleType(), "dataEmbeddingStyle", null, 0, 1, DSVTableBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(endOfDataTypeEClass, EndOfDataType.class, "EndOfDataType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEndOfDataType_Parameter(), this.getParameterType(), "parameter", null, 0, 1, EndOfDataType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(endSessionTypeEClass, EndSessionType.class, "EndSessionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEndSessionType_MustUnderstand(), theXMLTypePackage.getInt(), "mustUnderstand", null, 0, 1, EndSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEndSessionType_SessionId(), theXMLTypePackage.getString(), "sessionId", null, 0, 1, EndSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(errorConfigurationEClass, ErrorConfiguration.class, "ErrorConfiguration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getErrorConfiguration_KeyErrorLimit(), theXMLTypePackage.getLong(), "keyErrorLimit", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_KeyErrorLogFile(), theXMLTypePackage.getString(), "keyErrorLogFile", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_KeyErrorAction(), this.getKeyErrorActionType(), "keyErrorAction", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_KeyErrorLimitAction(), this.getKeyErrorLimitActionType(), "keyErrorLimitAction", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_KeyNotFound(), this.getKeyNotFoundType(), "keyNotFound", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_KeyDuplicate(), this.getKeyDuplicateType(), "keyDuplicate", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_NullKeyConvertedToUnknown(), this.getNullKeyConvertedToUnknownType(), "nullKeyConvertedToUnknown", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_NullKeyNotAllowed(), this.getNullKeyNotAllowedType(), "nullKeyNotAllowed", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getErrorConfiguration_CalculationError(), theEngine200Package.getCalculationErrorType(), "calculationError", null, 0, 1, ErrorConfiguration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventEClass, Event.class, "Event", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEvent_EventID(), theXMLTypePackage.getString(), "eventID", null, 1, 1, Event.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEvent_Columns(), this.getEventColumnID(), null, "columns", null, 1, 1, Event.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventCategoryTypeEClass, EventCategoryType.class, "EventCategoryType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEventCategoryType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, EventCategoryType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventCategoryType_Type(), theXMLTypePackage.getString(), "type", null, 0, 1, EventCategoryType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventCategoryType_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, EventCategoryType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEventCategoryType_EventList(), this.getEventListType(), null, "eventList", null, 1, 1, EventCategoryType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventColumnEClass, EventColumn.class, "EventColumn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEventColumn_ID(), theXMLTypePackage.getInteger(), "iD", null, 1, 1, EventColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEventColumn_EventColumnSubclassList(), this.getEventColumnSubclassListType(), null, "eventColumnSubclassList", null, 0, 1, EventColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventColumnIDEClass, EventColumnID.class, "EventColumnID", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEventColumnID_ColumnID(), theXMLTypePackage.getString(), "columnID", null, 1, -1, EventColumnID.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventColumnListTypeEClass, EventColumnListType.class, "EventColumnListType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getEventColumnListType_EventColumn(), this.getEventColumn(), null, "eventColumn", null, 0, -1, EventColumnListType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventColumnSubclassListTypeEClass, EventColumnSubclassListType.class, "EventColumnSubclassListType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getEventColumnSubclassListType_EventColumnSubclass(), this.getEventColumnSubclassType(), null, "eventColumnSubclass", null, 0, -1, EventColumnSubclassListType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventColumnSubclassTypeEClass, EventColumnSubclassType.class, "EventColumnSubclassType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEventColumnSubclassType_ID(), theXMLTypePackage.getInteger(), "iD", null, 1, 1, EventColumnSubclassType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventColumnSubclassType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, EventColumnSubclassType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventListTypeEClass, EventListType.class, "EventListType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getEventListType_Event(), this.getTraceEvent(), null, "event", null, 0, -1, EventListType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventSessionTypeEClass, EventSessionType.class, "EventSessionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEventSessionType_TemplateCategory(), theXMLTypePackage.getString(), "templateCategory", null, 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_TemplateName(), theXMLTypePackage.getString(), "templateName", null, 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_TemplateDescription(), theXMLTypePackage.getString(), "templateDescription", null, 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEventSessionType_Event(), ecorePackage.getEObject(), null, "event", null, 0, -1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEventSessionType_Target(), ecorePackage.getEObject(), null, "target", null, 0, -1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_DispatchLatency(), theXMLTypePackage.getUnsignedInt(), "dispatchLatency", "30", 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_EventRetentionMode(), this.getRetentionModes(), "eventRetentionMode", "allowSingleEventLoss", 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_MaxEventSize(), theXMLTypePackage.getUnsignedInt(), "maxEventSize", "0", 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_MaxMemory(), theXMLTypePackage.getUnsignedLong(), "maxMemory", "4", 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_MemoryPartitionMode(), this.getPartitionModes(), "memoryPartitionMode", "none", 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventSessionType_TrackCausality(), theXMLTypePackage.getBoolean(), "trackCausality", "false", 0, 1, EventSessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventsTypeEClass, EventsType.class, "EventsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getEventsType_Event(), this.getEvent(), null, "event", null, 0, -1, EventsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventTypeEClass, EventType.class, "EventType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getEventType_Field(), theXMLTypePackage.getString(), "field", null, 0, 1, EventType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventType_Module(), theXMLTypePackage.getString(), "module", null, 0, 1, EventType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, EventType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventType_Package(), theXMLTypePackage.getString(), "package", null, 1, 1, EventType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventType1EClass, EventType1.class, "EventType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getEventType1_Action(), ecorePackage.getEObject(), null, "action", null, 0, -1, EventType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEventType1_Parameter(), this.getParameterType2(), null, "parameter", null, 0, -1, EventType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEventType1_Predicate(), this.getUnaryExpr(), null, "predicate", null, 0, 1, EventType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventType1_Module(), theXMLTypePackage.getString(), "module", null, 0, 1, EventType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventType1_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, EventType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getEventType1_Package(), theXMLTypePackage.getString(), "package", null, 1, 1, EventType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(eventTypeTypeEClass, EventTypeType.class, "EventTypeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getEventTypeType_Events(), this.getEventsType(), null, "events", null, 0, 1, EventTypeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getEventTypeType_XEvent(), theEngine300_300Package.getXEventType(), null, "xEvent", null, 0, 1, EventTypeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(executeParameterEClass, ExecuteParameter.class, "ExecuteParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getExecuteParameter_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ExecuteParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getExecuteParameter_Value(), ecorePackage.getEObject(), null, "value", null, 1, 1, ExecuteParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(executeResponseTypeEClass, ExecuteResponseType.class, "ExecuteResponseType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getExecuteResponseType_Return(), this.getReturn(), null, "return", null, 1, 1, ExecuteResponseType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(executeTypeEClass, ExecuteType.class, "ExecuteType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getExecuteType_Command(), this.getCommand(), null, "command", null, 1, 1, ExecuteType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getExecuteType_Properties(), this.getPropertiesType(), null, "properties", null, 1, 1, ExecuteType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getExecuteType_Parameters(), this.getParametersType(), null, "parameters", null, 0, 1, ExecuteType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(filesTypeEClass, FilesType.class, "FilesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getFilesType_File(), this.getClrAssemblyFile(), null, "file", null, 1, -1, FilesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(folderEClass, Folder.class, "Folder", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getFolder_Original(), theXMLTypePackage.getString(), "original", null, 1, 1, Folder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFolder_New(), theXMLTypePackage.getString(), "new", null, 1, 1, Folder.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(foldingParametersEClass, FoldingParameters.class, "FoldingParameters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getFoldingParameters_FoldIndex(), theXMLTypePackage.getInteger(), "foldIndex", null, 1, 1, FoldingParameters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFoldingParameters_FoldCount(), theXMLTypePackage.getInteger(), "foldCount", null, 1, 1, FoldingParameters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFoldingParameters_FoldMaxCases(), theXMLTypePackage.getLong(), "foldMaxCases", null, 0, 1, FoldingParameters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getFoldingParameters_FoldTargetAttribute(), theXMLTypePackage.getString(), "foldTargetAttribute", null, 0, 1, FoldingParameters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(foreignKeyColumnsTypeEClass, ForeignKeyColumnsType.class, "ForeignKeyColumnsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getForeignKeyColumnsType_ForeignKeyColumn(), this.getDataItem(), null, "foreignKeyColumn", null, 0, -1, ForeignKeyColumnsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(foreignKeyColumnsType1EClass, ForeignKeyColumnsType1.class, "ForeignKeyColumnsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getForeignKeyColumnsType1_ForeignKeyColumn(), this.getForeignKeyColumnType(), null, "foreignKeyColumn", null, 0, -1, ForeignKeyColumnsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(foreignKeyColumnTypeEClass, ForeignKeyColumnType.class, "ForeignKeyColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getForeignKeyColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, ForeignKeyColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(globalTypeEClass, GlobalType.class, "GlobalType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getGlobalType_Module(), theXMLTypePackage.getString(), "module", null, 0, 1, GlobalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGlobalType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, GlobalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getGlobalType_Package(), theXMLTypePackage.getString(), "package", null, 1, 1, GlobalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(groupEClass, Group.class, "Group", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getGroup_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Group.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getGroup_Members(), this.getMembersType(), null, "members", null, 0, 1, Group.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(groupsTypeEClass, GroupsType.class, "GroupsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getGroupsType_Group(), this.getGroup(), null, "group", null, 0, -1, GroupsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(hierarchiesTypeEClass, HierarchiesType.class, "HierarchiesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getHierarchiesType_Hierarchy(), this.getHierarchy(), null, "hierarchy", null, 0, -1, HierarchiesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(hierarchiesType1EClass, HierarchiesType1.class, "HierarchiesType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getHierarchiesType1_Hierarchy(), this.getPerspectiveHierarchy(), null, "hierarchy", null, 0, -1, HierarchiesType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(hierarchiesType2EClass, HierarchiesType2.class, "HierarchiesType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getHierarchiesType2_Hierarchy(), this.getCubeHierarchy(), null, "hierarchy", null, 0, -1, HierarchiesType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(hierarchyEClass, Hierarchy.class, "Hierarchy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getHierarchy_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_ProcessingState(), theEngine300Package.getProcessingStateType(), "processingState", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_StructureType(), theEngine300Package.getStructureTypeType(), "structureType", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_DisplayFolder(), theXMLTypePackage.getString(), "displayFolder", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getHierarchy_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_AllMemberName(), theXMLTypePackage.getString(), "allMemberName", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getHierarchy_AllMemberTranslations(), this.getAllMemberTranslationsType(), null, "allMemberTranslations", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_MemberNamesUnique(), theXMLTypePackage.getBoolean(), "memberNamesUnique", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_MemberKeysUnique(), theEngine2Package.getMemberKeysUniqueType(), "memberKeysUnique", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getHierarchy_AllowDuplicateNames(), theXMLTypePackage.getBoolean(), "allowDuplicateNames", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getHierarchy_Levels(), this.getLevelsType(), null, "levels", null, 1, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getHierarchy_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getHierarchy_VisualizationProperties(), theEngine300Package.getHierarchyVisualizationProperties(), null, "visualizationProperties", null, 0, 1, Hierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(imageLoadEClass, ImageLoad.class, "ImageLoad", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getImageLoad_ImagePath(), theXMLTypePackage.getString(), "imagePath", null, 0, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageLoad_ImageUrl(), theXMLTypePackage.getString(), "imageUrl", null, 0, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageLoad_ImageUniqueID(), theXMLTypePackage.getString(), "imageUniqueID", null, 0, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageLoad_ImageVersion(), theXMLTypePackage.getString(), "imageVersion", null, 0, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageLoad_ReadWriteMode(), theEngine100Package.getReadWriteModeType(), "readWriteMode", null, 1, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageLoad_DbStorageLocation(), theXMLTypePackage.getString(), "dbStorageLocation", null, 0, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageLoad_DatabaseName(), theXMLTypePackage.getString(), "databaseName", null, 1, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageLoad_DatabaseID(), theXMLTypePackage.getString(), "databaseID", null, 1, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getImageLoad_Data(), this.getDataType3(), null, "data", null, 0, 1, ImageLoad.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(imageSaveEClass, ImageSave.class, "ImageSave", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getImageSave_Object(), this.getObjectReference(), null, "object", null, 1, 1, ImageSave.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getImageSave_Data(), theXMLTypePackage.getBoolean(), "data", null, 0, 1, ImageSave.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(incrementalProcessingNotificationEClass, IncrementalProcessingNotification.class, "IncrementalProcessingNotification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getIncrementalProcessingNotification_TableID(), theXMLTypePackage.getString(), "tableID", null, 1, 1, IncrementalProcessingNotification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getIncrementalProcessingNotification_ProcessingQuery(), theXMLTypePackage.getString(), "processingQuery", null, 1, 1, IncrementalProcessingNotification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(incrementalProcessingNotificationsTypeEClass, IncrementalProcessingNotificationsType.class, "IncrementalProcessingNotificationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getIncrementalProcessingNotificationsType_IncrementalProcessingNotification(), this.getIncrementalProcessingNotification(), null, "incrementalProcessingNotification", null, 0, -1, IncrementalProcessingNotificationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(inheritedBindingEClass, InheritedBinding.class, "InheritedBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(insertEClass, Insert.class, "Insert", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getInsert_Object(), this.getObject(), null, "object", null, 1, 1, Insert.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getInsert_Attributes(), this.getAttributesType4(), null, "attributes", null, 0, 1, Insert.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keepResultTypeEClass, KeepResultType.class, "KeepResultType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(keyColumnsTypeEClass, KeyColumnsType.class, "KeyColumnsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKeyColumnsType_KeyColumn(), this.getDataItem(), null, "keyColumn", null, 0, -1, KeyColumnsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keyColumnsType1EClass, KeyColumnsType1.class, "KeyColumnsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKeyColumnsType1_KeyColumn(), this.getDataItem(), null, "keyColumn", null, 0, -1, KeyColumnsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keyColumnsType2EClass, KeyColumnsType2.class, "KeyColumnsType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKeyColumnsType2_KeyColumn(), this.getKeyColumnType(), null, "keyColumn", null, 0, -1, KeyColumnsType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keyColumnsType3EClass, KeyColumnsType3.class, "KeyColumnsType3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKeyColumnsType3_KeyColumn(), this.getDataItem(), null, "keyColumn", null, 0, -1, KeyColumnsType3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keyColumnsType4EClass, KeyColumnsType4.class, "KeyColumnsType4", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKeyColumnsType4_KeyColumn(), this.getDataItem(), null, "keyColumn", null, 0, -1, KeyColumnsType4.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keyColumnTypeEClass, KeyColumnType.class, "KeyColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKeyColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, KeyColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keysTypeEClass, KeysType.class, "KeysType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getKeysType_Key(), theXMLTypePackage.getAnySimpleType(), "key", null, 0, -1, KeysType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(keysType1EClass, KeysType1.class, "KeysType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getKeysType1_Key(), theXMLTypePackage.getAnySimpleType(), "key", null, 0, -1, KeysType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(kpiEClass, Kpi.class, "Kpi", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getKpi_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getKpi_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_DisplayFolder(), theXMLTypePackage.getString(), "displayFolder", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_AssociatedMeasureGroupID(), theXMLTypePackage.getString(), "associatedMeasureGroupID", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_Value(), theXMLTypePackage.getString(), "value", null, 1, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_Goal(), theXMLTypePackage.getString(), "goal", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_Status(), theXMLTypePackage.getString(), "status", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_Trend(), theXMLTypePackage.getString(), "trend", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_Weight(), theXMLTypePackage.getString(), "weight", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_TrendGraphic(), theXMLTypePackage.getString(), "trendGraphic", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_StatusGraphic(), theXMLTypePackage.getString(), "statusGraphic", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_CurrentTimeMember(), theXMLTypePackage.getString(), "currentTimeMember", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getKpi_ParentKpiID(), theXMLTypePackage.getString(), "parentKpiID", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getKpi_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Kpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(kpisTypeEClass, KpisType.class, "KpisType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKpisType_Kpi(), this.getKpi(), null, "kpi", null, 0, -1, KpisType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(kpisType1EClass, KpisType1.class, "KpisType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getKpisType1_Kpi(), this.getPerspectiveKpi(), null, "kpi", null, 0, -1, KpisType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(levelEClass, Level.class, "Level", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getLevel_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Level.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLevel_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Level.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLevel_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Level.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLevel_SourceAttributeID(), theXMLTypePackage.getString(), "sourceAttributeID", null, 0, 1, Level.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLevel_HideMemberIf(), this.getHideMemberIfType(), "hideMemberIf", null, 0, 1, Level.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getLevel_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Level.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getLevel_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Level.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(levelsTypeEClass, LevelsType.class, "LevelsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLevelsType_Level(), this.getLevel(), null, "level", null, 1, -1, LevelsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(locationEClass, Location.class, "Location", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(locationBackupEClass, LocationBackup.class, "LocationBackup", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getLocationBackup_File(), theXMLTypePackage.getString(), "file", null, 1, 1, LocationBackup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLocationBackup_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 1, 1, LocationBackup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(locationsTypeEClass, LocationsType.class, "LocationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLocationsType_Location(), this.getLocation(), null, "location", null, 0, -1, LocationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(locationsType1EClass, LocationsType1.class, "LocationsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLocationsType1_Location(), this.getLocation(), null, "location", null, 0, -1, LocationsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(locationsType2EClass, LocationsType2.class, "LocationsType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getLocationsType2_Location(), this.getLocationBackup(), null, "location", null, 0, -1, LocationsType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(lockEClass, Lock.class, "Lock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getLock_ID(), this.getIDType1(), "iD", null, 1, 1, Lock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getLock_Object(), this.getObjectReference(), null, "object", null, 1, 1, Lock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getLock_Mode(), this.getModeType(), "mode", null, 1, 1, Lock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(majorObjectEClass, MajorObject.class, "MajorObject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMajorObject_AggregationDesign(), this.getAggregationDesign(), null, "aggregationDesign", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Assembly(), this.getAssembly(), null, "assembly", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Cube(), this.getCube(), null, "cube", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Database(), this.getDatabase(), null, "database", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_DataSource(), this.getDataSource(), null, "dataSource", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_DataSourceView(), this.getDataSourceView(), null, "dataSourceView", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Dimension(), this.getDimension(), null, "dimension", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_MdxScript(), this.getMdxScript(), null, "mdxScript", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_MeasureGroup(), this.getMeasureGroup(), null, "measureGroup", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_MiningModel(), this.getMiningModel(), null, "miningModel", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_MiningStructure(), this.getMiningStructure(), null, "miningStructure", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Partition(), this.getPartition(), null, "partition", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Permission(), this.getPermission(), null, "permission", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Perspective(), this.getPerspective(), null, "perspective", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Role(), this.getRole(), null, "role", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Server(), this.getServer(), null, "server", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMajorObject_Trace(), this.getTrace(), null, "trace", null, 0, 1, MajorObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(manyToManyMeasureGroupDimensionEClass, ManyToManyMeasureGroupDimension.class, "ManyToManyMeasureGroupDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getManyToManyMeasureGroupDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, ManyToManyMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getManyToManyMeasureGroupDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, ManyToManyMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getManyToManyMeasureGroupDimension_Source(), this.getMeasureGroupDimensionBinding(), null, "source", null, 0, 1, ManyToManyMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getManyToManyMeasureGroupDimension_MeasureGroupID(), theXMLTypePackage.getString(), "measureGroupID", null, 0, 1, ManyToManyMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getManyToManyMeasureGroupDimension_DirectSlice(), theXMLTypePackage.getString(), "directSlice", null, 0, 1, ManyToManyMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(mdxScriptEClass, MdxScript.class, "MdxScript", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMdxScript_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMdxScript_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMdxScript_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMdxScript_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMdxScript_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMdxScript_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMdxScript_Commands(), this.getCommandsType(), null, "commands", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMdxScript_DefaultScript(), theXMLTypePackage.getBoolean(), "defaultScript", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMdxScript_CalculationProperties(), this.getCalculationPropertiesType(), null, "calculationProperties", null, 0, 1, MdxScript.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(mdxScriptsTypeEClass, MdxScriptsType.class, "MdxScriptsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMdxScriptsType_MdxScript(), this.getMdxScript(), null, "mdxScript", null, 0, -1, MdxScriptsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureEClass, Measure.class, "Measure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMeasure_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_AggregateFunction(), this.getAggregateFunctionType(), "aggregateFunction", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_DataType(), this.getDataTypeType1(), "dataType", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasure_Source(), this.getDataItem(), null, "source", null, 1, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_Visible(), theXMLTypePackage.getBoolean(), "visible", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_MeasureExpression(), theXMLTypePackage.getString(), "measureExpression", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_DisplayFolder(), theXMLTypePackage.getString(), "displayFolder", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_FormatString(), theXMLTypePackage.getString(), "formatString", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_BackColor(), theXMLTypePackage.getString(), "backColor", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_ForeColor(), theXMLTypePackage.getString(), "foreColor", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_FontName(), theXMLTypePackage.getString(), "fontName", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_FontSize(), theXMLTypePackage.getString(), "fontSize", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasure_FontFlags(), theXMLTypePackage.getString(), "fontFlags", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasure_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasure_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Measure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureBindingEClass, MeasureBinding.class, "MeasureBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMeasureBinding_MeasureID(), theXMLTypePackage.getString(), "measureID", null, 1, 1, MeasureBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureGroupEClass, MeasureGroup.class, "MeasureGroup", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMeasureGroup_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_LastProcessed(), theXMLTypePackage.getDateTime(), "lastProcessed", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_Type(), this.getTypeType11(), "type", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_State(), this.getStateType3(), "state", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_Measures(), this.getMeasuresType1(), null, "measures", null, 1, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_DataAggregation(), this.getDataAggregationType(), "dataAggregation", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_Source(), this.getMeasureGroupBinding(), null, "source", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_StorageMode(), this.getStorageModeType3(), null, "storageMode", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_StorageLocation(), theXMLTypePackage.getString(), "storageLocation", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_IgnoreUnrelatedDimensions(), theXMLTypePackage.getBoolean(), "ignoreUnrelatedDimensions", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_ProactiveCaching(), this.getProactiveCaching(), null, "proactiveCaching", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_EstimatedRows(), theXMLTypePackage.getLong(), "estimatedRows", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_ErrorConfiguration(), this.getErrorConfiguration(), null, "errorConfiguration", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_EstimatedSize(), theXMLTypePackage.getLong(), "estimatedSize", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_ProcessingMode(), this.getProcessingModeType3(), "processingMode", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_Dimensions(), this.getDimensionsType(), null, "dimensions", null, 1, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_Partitions(), this.getPartitionsType(), null, "partitions", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_AggregationPrefix(), theXMLTypePackage.getString(), "aggregationPrefix", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroup_ProcessingPriority(), theXMLTypePackage.getInteger(), "processingPriority", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroup_AggregationDesigns(), this.getAggregationDesignsType(), null, "aggregationDesigns", null, 0, 1, MeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureGroupAttributeEClass, MeasureGroupAttribute.class, "MeasureGroupAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMeasureGroupAttribute_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, MeasureGroupAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroupAttribute_KeyColumns(), this.getKeyColumnsType3(), null, "keyColumns", null, 0, 1, MeasureGroupAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroupAttribute_Type(), this.getTypeType12(), "type", null, 0, 1, MeasureGroupAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMeasureGroupAttribute_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, MeasureGroupAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureGroupBindingEClass, MeasureGroupBinding.class, "MeasureGroupBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMeasureGroupBinding_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 1, 1, MeasureGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroupBinding_CubeID(), theXMLTypePackage.getString(), "cubeID", null, 1, 1, MeasureGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroupBinding_MeasureGroupID(), theXMLTypePackage.getString(), "measureGroupID", null, 1, 1, MeasureGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroupBinding_Persistence(), this.getPersistenceType1(), "persistence", null, 0, 1, MeasureGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroupBinding_RefreshPolicy(), this.getRefreshPolicyType1(), "refreshPolicy", null, 0, 1, MeasureGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroupBinding_RefreshInterval(), theXMLTypePackage.getDuration(), "refreshInterval", null, 0, 1, MeasureGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMeasureGroupBinding_Filter(), theXMLTypePackage.getString(), "filter", null, 0, 1, MeasureGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureGroupDimensionEClass, MeasureGroupDimension.class, "MeasureGroupDimension", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(measureGroupDimensionBindingEClass, MeasureGroupDimensionBinding.class, "MeasureGroupDimensionBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMeasureGroupDimensionBinding_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, MeasureGroupDimensionBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureGroupsTypeEClass, MeasureGroupsType.class, "MeasureGroupsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMeasureGroupsType_MeasureGroup(), this.getMeasureGroup(), null, "measureGroup", null, 0, -1, MeasureGroupsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measureGroupsType1EClass, MeasureGroupsType1.class, "MeasureGroupsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMeasureGroupsType1_MeasureGroup(), this.getPerspectiveMeasureGroup(), null, "measureGroup", null, 0, -1, MeasureGroupsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measuresTypeEClass, MeasuresType.class, "MeasuresType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMeasuresType_Measure(), this.getAggregationInstanceMeasure(), null, "measure", null, 0, -1, MeasuresType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measuresType1EClass, MeasuresType1.class, "MeasuresType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMeasuresType1_Measure(), this.getMeasure(), null, "measure", null, 1, -1, MeasuresType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(measuresType2EClass, MeasuresType2.class, "MeasuresType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMeasuresType2_Measure(), this.getPerspectiveMeasure(), null, "measure", null, 0, -1, MeasuresType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(memberEClass, Member.class, "Member", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMember_Name(), theXMLTypePackage.getString(), "name", null, 0, 1, Member.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMember_Sid(), theXMLTypePackage.getString(), "sid", null, 0, 1, Member.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(membersTypeEClass, MembersType.class, "MembersType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMembersType_Member(), theXMLTypePackage.getString(), "member", null, 0, -1, MembersType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(membersType1EClass, MembersType1.class, "MembersType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMembersType1_Member(), this.getMember(), null, "member", null, 0, -1, MembersType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(mergePartitionsEClass, MergePartitions.class, "MergePartitions", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMergePartitions_Sources(), this.getSourcesType(), null, "sources", null, 1, 1, MergePartitions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMergePartitions_Target(), this.getObjectReference(), null, "target", null, 1, 1, MergePartitions.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningModelEClass, MiningModel.class, "MiningModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMiningModel_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModel_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_Algorithm(), this.getAlgorithmType(), "algorithm", null, 1, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_LastProcessed(), theXMLTypePackage.getDateTime(), "lastProcessed", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModel_AlgorithmParameters(), this.getAlgorithmParametersType(), null, "algorithmParameters", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_AllowDrillThrough(), theXMLTypePackage.getBoolean(), "allowDrillThrough", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModel_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModel_Columns(), this.getColumnsType2(), null, "columns", null, 1, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_State(), this.getStateType1(), "state", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModel_FoldingParameters(), this.getFoldingParameters(), null, "foldingParameters", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_Filter(), theXMLTypePackage.getString(), "filter", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModel_MiningModelPermissions(), this.getMiningModelPermissionsType(), null, "miningModelPermissions", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_Language(), theXMLTypePackage.getString(), "language", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModel_Collation(), theXMLTypePackage.getString(), "collation", null, 0, 1, MiningModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningModelColumnEClass, MiningModelColumn.class, "MiningModelColumn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMiningModelColumn_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModelColumn_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModelColumn_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModelColumn_SourceColumnID(), theXMLTypePackage.getString(), "sourceColumnID", null, 1, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModelColumn_Usage(), this.getUsageType(), "usage", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModelColumn_Filter(), theXMLTypePackage.getString(), "filter", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModelColumn_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModelColumn_Columns(), this.getColumnsType3(), null, "columns", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModelColumn_ModelingFlags(), this.getModelingFlagsType1(), null, "modelingFlags", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningModelColumn_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, MiningModelColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningModelingFlagEClass, MiningModelingFlag.class, "MiningModelingFlag", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMiningModelingFlag_ModelingFlag(), theXMLTypePackage.getString(), "modelingFlag", null, 1, 1, MiningModelingFlag.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningModelPermissionEClass, MiningModelPermission.class, "MiningModelPermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMiningModelPermission_AllowDrillThrough(), theXMLTypePackage.getBoolean(), "allowDrillThrough", null, 0, 1, MiningModelPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModelPermission_AllowBrowsing(), theXMLTypePackage.getBoolean(), "allowBrowsing", null, 0, 1, MiningModelPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningModelPermission_Write(), this.getWriteType2(), "write", null, 0, 1, MiningModelPermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningModelPermissionsTypeEClass, MiningModelPermissionsType.class, "MiningModelPermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMiningModelPermissionsType_MiningModelPermission(), this.getMiningModelPermission(), null, "miningModelPermission", null, 0, -1, MiningModelPermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningModelsTypeEClass, MiningModelsType.class, "MiningModelsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMiningModelsType_MiningModel(), this.getMiningModel(), null, "miningModel", null, 0, -1, MiningModelsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningStructureEClass, MiningStructure.class, "MiningStructure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMiningStructure_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningStructure_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningStructure_Source(), this.getBinding(), null, "source", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_LastProcessed(), theXMLTypePackage.getDateTime(), "lastProcessed", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningStructure_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_Language(), theXMLTypePackage.getInteger(), "language", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_Collation(), theXMLTypePackage.getString(), "collation", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningStructure_ErrorConfiguration(), this.getErrorConfiguration(), null, "errorConfiguration", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_CacheMode(), this.getCacheModeType(), "cacheMode", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_HoldoutMaxPercent(), theXMLTypePackage.getInt(), "holdoutMaxPercent", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_HoldoutMaxCases(), theXMLTypePackage.getInt(), "holdoutMaxCases", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_HoldoutSeed(), theXMLTypePackage.getInt(), "holdoutSeed", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_HoldoutActualSize(), theXMLTypePackage.getInt(), "holdoutActualSize", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningStructure_Columns(), this.getColumnsType4(), null, "columns", null, 1, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructure_State(), this.getStateType5(), "state", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningStructure_MiningStructurePermissions(), this.getMiningStructurePermissionsType(), null, "miningStructurePermissions", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getMiningStructure_MiningModels(), this.getMiningModelsType(), null, "miningModels", null, 0, 1, MiningStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningStructureColumnEClass, MiningStructureColumn.class, "MiningStructureColumn", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(miningStructurePermissionEClass, MiningStructurePermission.class, "MiningStructurePermission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getMiningStructurePermission_AllowDrillThrough(), theXMLTypePackage.getBoolean(), "allowDrillThrough", null, 0, 1, MiningStructurePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getMiningStructurePermission_Write(), this.getWriteType(), "write", null, 0, 1, MiningStructurePermission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningStructurePermissionsTypeEClass, MiningStructurePermissionsType.class, "MiningStructurePermissionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMiningStructurePermissionsType_MiningStructurePermission(), this.getMiningStructurePermission(), null, "miningStructurePermission", null, 0, -1, MiningStructurePermissionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(miningStructuresTypeEClass, MiningStructuresType.class, "MiningStructuresType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getMiningStructuresType_MiningStructure(), this.getMiningStructure(), null, "miningStructure", null, 0, -1, MiningStructuresType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(modelingFlagsTypeEClass, ModelingFlagsType.class, "ModelingFlagsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getModelingFlagsType_ModelingFlag(), this.getMiningModelingFlag(), null, "modelingFlag", null, 0, -1, ModelingFlagsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(modelingFlagsType1EClass, ModelingFlagsType1.class, "ModelingFlagsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getModelingFlagsType1_ModelingFlag(), this.getMiningModelingFlag(), null, "modelingFlag", null, 0, -1, ModelingFlagsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(nameColumnTypeEClass, NameColumnType.class, "NameColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getNameColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, NameColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(namingTemplateTranslationsTypeEClass, NamingTemplateTranslationsType.class, "NamingTemplateTranslationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getNamingTemplateTranslationsType_NamingTemplateTranslation(), this.getTranslation(), null, "namingTemplateTranslation", null, 0, -1, NamingTemplateTranslationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(notifyTableChangeEClass, NotifyTableChange.class, "NotifyTableChange", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getNotifyTableChange_Object(), this.getObjectReference(), null, "object", null, 1, 1, NotifyTableChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotifyTableChange_TableNotifications(), this.getTableNotificationsType1(), null, "tableNotifications", null, 1, 1, NotifyTableChange.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(notTypeEClass, NotType.class, "NotType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getNotType_Not(), this.getNotType(), null, "not", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_Or(), this.getAndOrType(), null, "or", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_And(), this.getAndOrType(), null, "and", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_Equal(), this.getBoolBinop(), null, "equal", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_NotEqual(), this.getBoolBinop(), null, "notEqual", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_Less(), this.getBoolBinop(), null, "less", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_LessOrEqual(), this.getBoolBinop(), null, "lessOrEqual", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_Greater(), this.getBoolBinop(), null, "greater", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_GreaterOrEqual(), this.getBoolBinop(), null, "greaterOrEqual", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_Like(), this.getBoolBinop(), null, "like", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getNotType_NotLike(), this.getBoolBinop(), null, "notLike", null, 0, 1, NotType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(objectEClass, org.eclipse.daanse.xmla.model.ecore.xmla.Object.class, "Object", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getObject_Database(), theXMLTypePackage.getString(), "database", null, 1, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Object.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObject_Cube(), theXMLTypePackage.getString(), "cube", null, 1, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Object.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObject_Dimension(), theXMLTypePackage.getString(), "dimension", null, 1, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Object.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(objectReferenceEClass, ObjectReference.class, "ObjectReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getObjectReference_ServerID(), theXMLTypePackage.getString(), "serverID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_DatabaseID(), theXMLTypePackage.getString(), "databaseID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_RoleID(), theXMLTypePackage.getString(), "roleID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_TraceID(), theXMLTypePackage.getString(), "traceID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_AssemblyID(), theXMLTypePackage.getString(), "assemblyID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_DimensionID(), theXMLTypePackage.getString(), "dimensionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_DimensionPermissionID(), theXMLTypePackage.getString(), "dimensionPermissionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_DataSourcePermissionID(), theXMLTypePackage.getString(), "dataSourcePermissionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_DatabasePermissionID(), theXMLTypePackage.getString(), "databasePermissionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_DataSourceViewID(), theXMLTypePackage.getString(), "dataSourceViewID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_CubeID(), theXMLTypePackage.getString(), "cubeID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_MiningStructureID(), theXMLTypePackage.getString(), "miningStructureID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_MeasureGroupID(), theXMLTypePackage.getString(), "measureGroupID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_PerspectiveID(), theXMLTypePackage.getString(), "perspectiveID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_CubePermissionID(), theXMLTypePackage.getString(), "cubePermissionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_MdxScriptID(), theXMLTypePackage.getString(), "mdxScriptID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_PartitionID(), theXMLTypePackage.getString(), "partitionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_AggregationDesignID(), theXMLTypePackage.getString(), "aggregationDesignID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_MiningModelID(), theXMLTypePackage.getString(), "miningModelID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_MiningModelPermissionID(), theXMLTypePackage.getString(), "miningModelPermissionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getObjectReference_MiningStructurePermissionID(), theXMLTypePackage.getString(), "miningStructurePermissionID", null, 0, 1, ObjectReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(objectTypeEClass, ObjectType.class, "ObjectType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getObjectType_DatabaseID(), this.getObjectReference(), null, "databaseID", null, 1, 1, ObjectType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(olapDataSourceEClass, OlapDataSource.class, "OlapDataSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(ordinalTypeEClass, OrdinalType.class, "OrdinalType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getOrdinalType_Ordinal(), theXMLTypePackage.getInteger(), "ordinal", null, 0, -1, OrdinalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(outOfLineBindingEClass, OutOfLineBinding.class, "OutOfLineBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getOutOfLineBinding_DatabaseID(), theXMLTypePackage.getString(), "databaseID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_DimensionID(), theXMLTypePackage.getString(), "dimensionID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_CubeID(), theXMLTypePackage.getString(), "cubeID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_MeasureGroupID(), theXMLTypePackage.getString(), "measureGroupID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_PartitionID(), theXMLTypePackage.getString(), "partitionID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_MiningModelID(), theXMLTypePackage.getString(), "miningModelID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_MiningStructureID(), theXMLTypePackage.getString(), "miningStructureID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_MeasureID(), theXMLTypePackage.getString(), "measureID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_ParentColumnID(), theXMLTypePackage.getString(), "parentColumnID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getOutOfLineBinding_ColumnID(), theXMLTypePackage.getString(), "columnID", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_Source(), this.getBinding(), null, "source", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_NameColumn(), this.getNameColumnType(), null, "nameColumn", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_SkippedLevelsColumn(), this.getSkippedLevelsColumnType(), null, "skippedLevelsColumn", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_CustomRollupColumn(), this.getCustomRollupColumnType(), null, "customRollupColumn", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_CustomRollupPropertiesColumn(), this.getCustomRollupPropertiesColumnType(), null, "customRollupPropertiesColumn", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_ValueColumn(), this.getValueColumnType(), null, "valueColumn", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_UnaryOperatorColumn(), this.getUnaryOperatorColumnType(), null, "unaryOperatorColumn", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_KeyColumns(), this.getKeyColumnsType2(), null, "keyColumns", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_ForeignKeyColumns(), this.getForeignKeyColumnsType1(), null, "foreignKeyColumns", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getOutOfLineBinding_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, OutOfLineBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(parallelTypeEClass, ParallelType.class, "ParallelType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getParallelType_Process(), this.getProcess(), null, "process", null, 0, -1, ParallelType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getParallelType_MaxParallel(), theXMLTypePackage.getInt(), "maxParallel", "0", 0, 1, ParallelType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(parametersEClass, Parameters.class, "Parameters", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getParameters_Parameter(), this.getExecuteParameter(), null, "parameter", null, 0, -1, Parameters.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(parametersTypeEClass, ParametersType.class, "ParametersType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getParametersType_Parameter(), this.getExecuteParameter(), null, "parameter", null, 0, -1, ParametersType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(parameterType2EClass, ParameterType2.class, "ParameterType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getParameterType2_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ParameterType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getParameterType2_Value(), theXMLTypePackage.getAnySimpleType(), "value", null, 1, 1, ParameterType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(partitionEClass, Partition.class, "Partition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPartition_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_Source(), this.getTabularBinding(), null, "source", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_ProcessingPriority(), theXMLTypePackage.getInteger(), "processingPriority", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_AggregationPrefix(), theXMLTypePackage.getString(), "aggregationPrefix", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_StorageMode(), this.getStorageModeType2(), null, "storageMode", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_ProcessingMode(), this.getProcessingModeType2(), "processingMode", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_ErrorConfiguration(), this.getErrorConfiguration(), null, "errorConfiguration", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_StorageLocation(), theXMLTypePackage.getString(), "storageLocation", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_RemoteDatasourceID(), theXMLTypePackage.getString(), "remoteDatasourceID", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_Slice(), theXMLTypePackage.getString(), "slice", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_ProactiveCaching(), this.getProactiveCaching(), null, "proactiveCaching", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_Type(), this.getTypeType(), "type", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_EstimatedSize(), theXMLTypePackage.getLong(), "estimatedSize", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_EstimatedRows(), theXMLTypePackage.getLong(), "estimatedRows", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_CurrentStorageMode(), this.getCurrentStorageModeType1(), null, "currentStorageMode", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_AggregationDesignID(), theXMLTypePackage.getString(), "aggregationDesignID", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_AggregationInstances(), this.getAggregationInstancesType(), null, "aggregationInstances", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPartition_AggregationInstanceSource(), this.getDataSourceViewBinding(), null, "aggregationInstanceSource", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_LastProcessed(), theXMLTypePackage.getDateTime(), "lastProcessed", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_State(), this.getStateType4(), "state", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_StringStoresCompatibilityLevel(), theEngine300Package.getStringStoresCompatibilityLevelType(), "stringStoresCompatibilityLevel", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_CurrentStringStoresCompatibilityLevel(), theEngine300Package.getCurrentStringStoresCompatibilityLevelType(), "currentStringStoresCompatibilityLevel", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPartition_DirectQueryUsage(), theEngine300_300Package.getDirectQueryUsageType(), "directQueryUsage", null, 0, 1, Partition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(partitionsTypeEClass, PartitionsType.class, "PartitionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getPartitionsType_Partition(), this.getPartition(), null, "partition", null, 0, -1, PartitionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(permissionEClass, Permission.class, "Permission", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPermission_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPermission_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_RoleID(), theXMLTypePackage.getString(), "roleID", null, 1, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_Process(), theXMLTypePackage.getBoolean(), "process", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_ReadDefinition(), this.getReadDefinitionType(), "readDefinition", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPermission_Read(), this.getReadType1(), "read", null, 0, 1, Permission.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveEClass, Perspective.class, "Perspective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspective_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspective_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspective_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspective_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspective_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspective_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspective_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspective_DefaultMeasure(), theXMLTypePackage.getString(), "defaultMeasure", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspective_Dimensions(), this.getDimensionsType(), null, "dimensions", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspective_MeasureGroups(), this.getMeasureGroupsType1(), null, "measureGroups", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspective_Calculations(), this.getCalculationsType(), null, "calculations", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspective_Kpis(), this.getKpisType1(), null, "kpis", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspective_Actions(), this.getActionsType1(), null, "actions", null, 0, 1, Perspective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveActionEClass, PerspectiveAction.class, "PerspectiveAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveAction_ActionID(), theXMLTypePackage.getString(), "actionID", null, 1, 1, PerspectiveAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveAction_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveAttributeEClass, PerspectiveAttribute.class, "PerspectiveAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveAttribute_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, PerspectiveAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspectiveAttribute_AttributeHierarchyVisible(), theXMLTypePackage.getBoolean(), "attributeHierarchyVisible", null, 0, 1, PerspectiveAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspectiveAttribute_DefaultMember(), theXMLTypePackage.getString(), "defaultMember", null, 0, 1, PerspectiveAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveAttribute_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveCalculationEClass, PerspectiveCalculation.class, "PerspectiveCalculation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveCalculation_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, PerspectiveCalculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPerspectiveCalculation_Type(), this.getTypeType13(), "type", null, 1, 1, PerspectiveCalculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveCalculation_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveCalculation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveDimensionEClass, PerspectiveDimension.class, "PerspectiveDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, PerspectiveDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveDimension_Attributes(), this.getAttributesType1(), null, "attributes", null, 0, 1, PerspectiveDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveDimension_Hierarchies(), this.getHierarchiesType1(), null, "hierarchies", null, 0, 1, PerspectiveDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveHierarchyEClass, PerspectiveHierarchy.class, "PerspectiveHierarchy", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveHierarchy_HierarchyID(), theXMLTypePackage.getString(), "hierarchyID", null, 1, 1, PerspectiveHierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveHierarchy_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveHierarchy.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveKpiEClass, PerspectiveKpi.class, "PerspectiveKpi", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveKpi_KpiID(), theXMLTypePackage.getString(), "kpiID", null, 1, 1, PerspectiveKpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveKpi_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveKpi.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveMeasureEClass, PerspectiveMeasure.class, "PerspectiveMeasure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveMeasure_MeasureID(), theXMLTypePackage.getString(), "measureID", null, 1, 1, PerspectiveMeasure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveMeasure_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveMeasure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectiveMeasureGroupEClass, PerspectiveMeasureGroup.class, "PerspectiveMeasureGroup", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPerspectiveMeasureGroup_MeasureGroupID(), theXMLTypePackage.getString(), "measureGroupID", null, 1, 1, PerspectiveMeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveMeasureGroup_Measures(), this.getMeasuresType2(), null, "measures", null, 0, 1, PerspectiveMeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPerspectiveMeasureGroup_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, PerspectiveMeasureGroup.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(perspectivesTypeEClass, PerspectivesType.class, "PerspectivesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getPerspectivesType_Perspective(), this.getPerspective(), null, "perspective", null, 0, -1, PerspectivesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(predLeafEClass, PredLeaf.class, "PredLeaf", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getPredLeaf_Comparator(), this.getComparatorType(), null, "comparator", null, 1, 1, PredLeaf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPredLeaf_Event(), this.getEventType(), null, "event", null, 0, 1, PredLeaf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPredLeaf_Global(), this.getGlobalType(), null, "global", null, 0, 1, PredLeaf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPredLeaf_Value(), ecorePackage.getEObject(), null, "value", null, 1, 1, PredLeaf.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(proactiveCachingEClass, ProactiveCaching.class, "ProactiveCaching", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getProactiveCaching_OnlineMode(), this.getOnlineModeType(), "onlineMode", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getProactiveCaching_AggregationStorage(), this.getAggregationStorageType(), "aggregationStorage", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProactiveCaching_Source(), this.getProactiveCachingBinding(), null, "source", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getProactiveCaching_SilenceInterval(), theXMLTypePackage.getDuration(), "silenceInterval", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getProactiveCaching_Latency(), theXMLTypePackage.getDuration(), "latency", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getProactiveCaching_SilenceOverrideInterval(), theXMLTypePackage.getDuration(), "silenceOverrideInterval", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getProactiveCaching_ForceRebuildInterval(), theXMLTypePackage.getDuration(), "forceRebuildInterval", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getProactiveCaching_Enabled(), theXMLTypePackage.getBoolean(), "enabled", null, 0, 1, ProactiveCaching.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(proactiveCachingBindingEClass, ProactiveCachingBinding.class, "ProactiveCachingBinding", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(proactiveCachingIncrementalProcessingBindingEClass, ProactiveCachingIncrementalProcessingBinding.class, "ProactiveCachingIncrementalProcessingBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getProactiveCachingIncrementalProcessingBinding_RefreshInterval(), theXMLTypePackage.getDuration(), "refreshInterval", null, 0, 1, ProactiveCachingIncrementalProcessingBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProactiveCachingIncrementalProcessingBinding_IncrementalProcessingNotifications(), this.getIncrementalProcessingNotificationsType(), null, "incrementalProcessingNotifications", null, 1, 1, ProactiveCachingIncrementalProcessingBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(proactiveCachingInheritedBindingEClass, ProactiveCachingInheritedBinding.class, "ProactiveCachingInheritedBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getProactiveCachingInheritedBinding_NotificationTechnique(), this.getNotificationTechniqueType1(), "notificationTechnique", null, 0, 1, ProactiveCachingInheritedBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(proactiveCachingObjectNotificationBindingEClass, ProactiveCachingObjectNotificationBinding.class, "ProactiveCachingObjectNotificationBinding", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(proactiveCachingQueryBindingEClass, ProactiveCachingQueryBinding.class, "ProactiveCachingQueryBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getProactiveCachingQueryBinding_RefreshInterval(), theXMLTypePackage.getDuration(), "refreshInterval", null, 1, 1, ProactiveCachingQueryBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProactiveCachingQueryBinding_QueryNotifications(), this.getQueryNotificationsType(), null, "queryNotifications", null, 1, 1, ProactiveCachingQueryBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(proactiveCachingTablesBindingEClass, ProactiveCachingTablesBinding.class, "ProactiveCachingTablesBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getProactiveCachingTablesBinding_NotificationTechnique(), this.getNotificationTechniqueType(), "notificationTechnique", null, 0, 1, ProactiveCachingTablesBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProactiveCachingTablesBinding_TableNotifications(), this.getTableNotificationsType(), null, "tableNotifications", null, 1, 1, ProactiveCachingTablesBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(processEClass, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, "Process", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getProcess_Type(), this.getTypeType7(), "type", null, 1, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProcess_Object(), this.getObjectReference(), null, "object", null, 1, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProcess_Bindings(), this.getBindings(), null, "bindings", null, 0, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProcess_DataSource(), this.getDataSource(), null, "dataSource", null, 0, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProcess_DataSourceView(), this.getDataSourceView(), null, "dataSourceView", null, 0, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getProcess_ErrorConfiguration(), this.getErrorConfiguration(), null, "errorConfiguration", null, 0, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getProcess_WriteBackTableCreation(), this.getWriteBackTableCreation(), "writeBackTableCreation", null, 0, 1, org.eclipse.daanse.xmla.model.ecore.xmla.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(propertiesEClass, Properties.class, "Properties", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getProperties_PropertyList(), this.getPropertyList(), null, "propertyList", null, 0, 1, Properties.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(propertiesTypeEClass, PropertiesType.class, "PropertiesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getPropertiesType_PropertyList(), this.getPropertyList(), null, "propertyList", null, 0, 1, PropertiesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(propertyListEClass, PropertyList.class, "PropertyList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getPropertyList_DataSourceInfo(), theXMLTypePackage.getString(), "dataSourceInfo", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Timeout(), theXMLTypePackage.getInteger(), "timeout", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_UserName(), theXMLTypePackage.getString(), "userName", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Password(), theXMLTypePackage.getString(), "password", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_LocaleIdentifier(), theXMLTypePackage.getInteger(), "localeIdentifier", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Catalog(), theXMLTypePackage.getString(), "catalog", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_StateSupport(), this.getStateSupportType(), "stateSupport", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Content(), this.getContentType1(), "content", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Format(), this.getFormatType1(), "format", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_AxisFormat(), this.getAxisFormatType(), "axisFormat", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_BeginRange(), theXMLTypePackage.getInteger(), "beginRange", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_EndRange(), theXMLTypePackage.getInteger(), "endRange", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MDXSupport(), this.getMDXSupportType(), "mDXSupport", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ProviderName(), theXMLTypePackage.getString(), "providerName", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ProviderVersion(), theXMLTypePackage.getString(), "providerVersion", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DBMSVersion(), theXMLTypePackage.getString(), "dBMSVersion", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ProviderType(), this.getProviderTypeType(), "providerType", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ShowHiddenCubes(), theXMLTypePackage.getBoolean(), "showHiddenCubes", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_SQLSupport(), theXMLTypePackage.getInteger(), "sQLSupport", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_TransactionDDL(), theXMLTypePackage.getInteger(), "transactionDDL", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MaximumRows(), theXMLTypePackage.getInteger(), "maximumRows", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Roles(), theXMLTypePackage.getString(), "roles", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_VisualMode(), this.getVisualModeType(), "visualMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_EffectiveRoles(), theXMLTypePackage.getString(), "effectiveRoles", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_EffectiveUserName(), theXMLTypePackage.getString(), "effectiveUserName", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ServerName(), theXMLTypePackage.getString(), "serverName", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_CatalogLocation(), this.getCatalogLocationType(), "catalogLocation", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropCatalogTerm(), theXMLTypePackage.getString(), "dbpropCatalogTerm", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropCatalogUsage(), theXMLTypePackage.getInteger(), "dbpropCatalogUsage", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropColumnDefinition(), theXMLTypePackage.getInteger(), "dbpropColumnDefinition", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropConcatNullBehavior(), this.getDbpropConcatNullBehaviorType(), "dbpropConcatNullBehavior", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropDataSourceReadOnly(), theXMLTypePackage.getBoolean(), "dbpropDataSourceReadOnly", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropGroupBy(), theXMLTypePackage.getInteger(), "dbpropGroupBy", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropHeterogeneousTables(), theXMLTypePackage.getInteger(), "dbpropHeterogeneousTables", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropIdentifierCase(), theXMLTypePackage.getInteger(), "dbpropIdentifierCase", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMaxIndexSize(), theXMLTypePackage.getInteger(), "dbpropMaxIndexSize", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMaxOpenChapters(), theXMLTypePackage.getInteger(), "dbpropMaxOpenChapters", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMaxRowSize(), theXMLTypePackage.getInteger(), "dbpropMaxRowSize", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMaxRowSizeIncludeBlob(), theXMLTypePackage.getBoolean(), "dbpropMaxRowSizeIncludeBlob", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMaxTablesInSelect(), theXMLTypePackage.getInteger(), "dbpropMaxTablesInSelect", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMultiTableUpdate(), theXMLTypePackage.getBoolean(), "dbpropMultiTableUpdate", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropNullCollation(), this.getDbpropNullCollationType(), "dbpropNullCollation", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropOrderByColumnsInSelect(), theXMLTypePackage.getBoolean(), "dbpropOrderByColumnsInSelect", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropOutputParameterAvailable(), this.getDbpropOutputParameterAvailableType(), "dbpropOutputParameterAvailable", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropPersistentIdType(), this.getDbpropPersistentIdTypeType(), "dbpropPersistentIdType", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropPrepareAbortBehavior(), this.getDbpropPrepareAbortBehaviorType(), "dbpropPrepareAbortBehavior", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropPrepareCommitBehavior(), this.getDbpropPrepareCommitBehaviorType(), "dbpropPrepareCommitBehavior", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropProcedureTerm(), theXMLTypePackage.getString(), "dbpropProcedureTerm", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropQuotedIdentifierCase(), this.getDbpropQuotedIdentifierCaseType(), "dbpropQuotedIdentifierCase", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropSchemaUsage(), theXMLTypePackage.getInteger(), "dbpropSchemaUsage", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropSqlSupport(), theXMLTypePackage.getInteger(), "dbpropSqlSupport", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropSubqueries(), theXMLTypePackage.getInteger(), "dbpropSubqueries", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropSupportedTxnDdl(), theXMLTypePackage.getInteger(), "dbpropSupportedTxnDdl", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxSubqueries(), theXMLTypePackage.getInteger(), "mdpropMdxSubqueries", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropSupportedTxnIsoLevels(), theXMLTypePackage.getInteger(), "dbpropSupportedTxnIsoLevels", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropSupportedTxnIsoRetain(), theXMLTypePackage.getInteger(), "dbpropSupportedTxnIsoRetain", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropTableTerm(), theXMLTypePackage.getString(), "dbpropTableTerm", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropAggregateCellUpdate(), this.getMdpropAggregateCellUpdateType(), "mdpropAggregateCellUpdate", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropAxes(), theXMLTypePackage.getInteger(), "mdpropAxes", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropFlatteningSupport(), this.getMdpropFlatteningSupportType(), "mdpropFlatteningSupport", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxCaseSupport(), theXMLTypePackage.getInteger(), "mdpropMdxCaseSupport", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxDescFlags(), theXMLTypePackage.getInteger(), "mdpropMdxDescFlags", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxDrillFunctions(), theXMLTypePackage.getInteger(), "mdpropMdxDrillFunctions", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxFormulas(), theXMLTypePackage.getInteger(), "mdpropMdxFormulas", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxJoinCubes(), theXMLTypePackage.getInteger(), "mdpropMdxJoinCubes", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxMemberFunctions(), theXMLTypePackage.getInteger(), "mdpropMdxMemberFunctions", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxNonMeasureExpressions(), this.getMdpropMdxNonMeasureExpressionsType(), "mdpropMdxNonMeasureExpressions", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxNumericFunctions(), theXMLTypePackage.getInteger(), "mdpropMdxNumericFunctions", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxObjQualification(), theXMLTypePackage.getInteger(), "mdpropMdxObjQualification", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxOuterReference(), theXMLTypePackage.getInteger(), "mdpropMdxOuterReference", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxQueryByProperty(), theXMLTypePackage.getBoolean(), "mdpropMdxQueryByProperty", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxRangeRowset(), this.getMdpropMdxRangeRowsetType(), "mdpropMdxRangeRowset", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxSetFunctions(), theXMLTypePackage.getInteger(), "mdpropMdxSetFunctions", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxSlicer(), this.getMdpropMdxSlicerType(), "mdpropMdxSlicer", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxStringCompop(), theXMLTypePackage.getInteger(), "mdpropMdxStringCompop", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropNamedLevels(), theXMLTypePackage.getInteger(), "mdpropNamedLevels", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdMDXCompatibility(), this.getDbpropMsmdMDXCompatibilityType(), "dbpropMsmdMDXCompatibility", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdSQLCompatibility(), theXMLTypePackage.getInteger(), "dbpropMsmdSQLCompatibility", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdMDXUniqueNameStyle(), theXMLTypePackage.getInteger(), "dbpropMsmdMDXUniqueNameStyle", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdCachePolicy(), theXMLTypePackage.getInteger(), "dbpropMsmdCachePolicy", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdCacheRatio(), theXMLTypePackage.getInteger(), "dbpropMsmdCacheRatio", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdCacheMode(), theXMLTypePackage.getInteger(), "dbpropMsmdCacheMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdCompareCaseSensitiveStringFlags(), this.getDbpropMsmdCompareCaseSensitiveStringFlagsType(), "dbpropMsmdCompareCaseSensitiveStringFlags", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdCompareCaseNotSensitiveStringFlags(), theXMLTypePackage.getInteger(), "dbpropMsmdCompareCaseNotSensitiveStringFlags", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdFlattened2(), theXMLTypePackage.getBoolean(), "dbpropMsmdFlattened2", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropInitMode(), theXMLTypePackage.getInteger(), "dbpropInitMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_SspropInitAppName(), theXMLTypePackage.getString(), "sspropInitAppName", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_SspropInitWsid(), theXMLTypePackage.getString(), "sspropInitWsid", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_SspropInitPacketsize(), theXMLTypePackage.getInteger(), "sspropInitPacketsize", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ReadOnlySession(), theXMLTypePackage.getInteger(), "readOnlySession", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_SecuredCellValue(), this.getSecuredCellValueType(), "securedCellValue", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_NonEmptyThreshold(), theXMLTypePackage.getInteger(), "nonEmptyThreshold", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_SafetyOptions(), this.getSafetyOptionsType(), "safetyOptions", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdCacheRatio2(), theXMLTypePackage.getDouble(), "dbpropMsmdCacheRatio2", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdUseFormulaCache(), theXMLTypePackage.getString(), "dbpropMsmdUseFormulaCache", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdDynamicDebugLimit(), theXMLTypePackage.getInteger(), "dbpropMsmdDynamicDebugLimit", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdDebugMode(), theXMLTypePackage.getString(), "dbpropMsmdDebugMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Dialect(), this.getDialectType(), "dialect", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ImpactAnalysis(), theXMLTypePackage.getBoolean(), "impactAnalysis", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_SQLQueryMode(), this.getSQLQueryModeType(), "sQLQueryMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ClientProcessID(), theXMLTypePackage.getInteger(), "clientProcessID", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_Cube(), theXMLTypePackage.getString(), "cube", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ReturnCellProperties(), theXMLTypePackage.getBoolean(), "returnCellProperties", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_CommitTimeout(), theXMLTypePackage.getInteger(), "commitTimeout", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ForceCommitTimeout(), theXMLTypePackage.getInteger(), "forceCommitTimeout", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ExecutionMode(), theXMLTypePackage.getString(), "executionMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_RealTimeOlap(), theXMLTypePackage.getBoolean(), "realTimeOlap", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdxMissingMemberMode(), this.getMdxMissingMemberModeType1(), "mdxMissingMemberMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxNamedSets(), theXMLTypePackage.getInteger(), "mdpropMdxNamedSets", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdSubqueries(), this.getDbpropMsmdSubqueriesType(), "dbpropMsmdSubqueries", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdAutoExists(), this.getDbpropMsmdAutoExistsType(), "dbpropMsmdAutoExists", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_CustomData(), theXMLTypePackage.getString(), "customData", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DisablePrefetchFacts(), theXMLTypePackage.getBoolean(), "disablePrefetchFacts", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_UpdateIsolationLevel(), this.getUpdateIsolationLevelType(), "updateIsolationLevel", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdErrorMessageMode(), theXMLTypePackage.getInteger(), "dbpropMsmdErrorMessageMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MdpropMdxDdlExtensions(), theXMLTypePackage.getInteger(), "mdpropMdxDdlExtensions", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ResponseEncoding(), this.getResponseEncodingType(), "responseEncoding", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_MemoryLockingMode(), this.getMemoryLockingModeType(), "memoryLockingMode", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdOptimizeResponse(), theXMLTypePackage.getInteger(), "dbpropMsmdOptimizeResponse", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdActivityID(), theXMLTypePackage.getString(), "dbpropMsmdActivityID", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdRequestID(), theXMLTypePackage.getString(), "dbpropMsmdRequestID", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ReturnAffectedObjects(), theXMLTypePackage.getInteger(), "returnAffectedObjects", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_DbpropMsmdRequestMemoryLimit(), theXMLTypePackage.getInteger(), "dbpropMsmdRequestMemoryLimit", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getPropertyList_ApplicationContext(), theXMLTypePackage.getString(), "applicationContext", null, 0, 1, PropertyList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(pushedDataSourceEClass, PushedDataSource.class, "PushedDataSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getPushedDataSource_Root(), this.getRootType(), null, "root", null, 1, 1, PushedDataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getPushedDataSource_EndOfData(), this.getEndOfDataType(), null, "endOfData", null, 1, 1, PushedDataSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(queriesTypeEClass, QueriesType.class, "QueriesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getQueriesType_Query(), theXMLTypePackage.getString(), "query", null, 0, -1, QueriesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(queryBindingEClass, QueryBinding.class, "QueryBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getQueryBinding_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 0, 1, QueryBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getQueryBinding_QueryDefinition(), theXMLTypePackage.getString(), "queryDefinition", null, 1, 1, QueryBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(queryNotificationEClass, QueryNotification.class, "QueryNotification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getQueryNotification_Query(), theXMLTypePackage.getString(), "query", null, 1, 1, QueryNotification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(queryNotificationsTypeEClass, QueryNotificationsType.class, "QueryNotificationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getQueryNotificationsType_QueryNotification(), this.getQueryNotification(), null, "queryNotification", null, 0, -1, QueryNotificationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(referenceMeasureGroupDimensionEClass, ReferenceMeasureGroupDimension.class, "ReferenceMeasureGroupDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getReferenceMeasureGroupDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, ReferenceMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReferenceMeasureGroupDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, ReferenceMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReferenceMeasureGroupDimension_Source(), this.getMeasureGroupDimensionBinding(), null, "source", null, 0, 1, ReferenceMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReferenceMeasureGroupDimension_IntermediateCubeDimensionID(), theXMLTypePackage.getString(), "intermediateCubeDimensionID", null, 1, 1, ReferenceMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReferenceMeasureGroupDimension_IntermediateGranularityAttributeID(), theXMLTypePackage.getString(), "intermediateGranularityAttributeID", null, 1, 1, ReferenceMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReferenceMeasureGroupDimension_Materialization(), this.getMaterializationType(), "materialization", null, 0, 1, ReferenceMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReferenceMeasureGroupDimension_ProcessingState(), theEngine200_200Package.getProcessingStateType(), "processingState", null, 0, 1, ReferenceMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(regularMeasureGroupDimensionEClass, RegularMeasureGroupDimension.class, "RegularMeasureGroupDimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRegularMeasureGroupDimension_CubeDimensionID(), theXMLTypePackage.getString(), "cubeDimensionID", null, 1, 1, RegularMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getRegularMeasureGroupDimension_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, RegularMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getRegularMeasureGroupDimension_Source(), this.getMeasureGroupDimensionBinding(), null, "source", null, 0, 1, RegularMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRegularMeasureGroupDimension_Cardinality(), this.getCardinalityType(), "cardinality", null, 0, 1, RegularMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getRegularMeasureGroupDimension_Attributes(), this.getAttributesType6(), null, "attributes", null, 1, 1, RegularMeasureGroupDimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(relationalDataSourceEClass, RelationalDataSource.class, "RelationalDataSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(reportActionEClass, ReportAction.class, "ReportAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getReportAction_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Caption(), theXMLTypePackage.getString(), "caption", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_CaptionIsMdx(), theXMLTypePackage.getBoolean(), "captionIsMdx", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReportAction_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_TargetType(), this.getTargetTypeType1(), "targetType", null, 1, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Target(), theXMLTypePackage.getString(), "target", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Condition(), theXMLTypePackage.getString(), "condition", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Type(), this.getTypeType10(), "type", null, 1, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Invocation(), this.getInvocationType1(), "invocation", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Application(), theXMLTypePackage.getString(), "application", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReportAction_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_ReportServer(), theXMLTypePackage.getString(), "reportServer", null, 1, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportAction_Path(), theXMLTypePackage.getString(), "path", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReportAction_ReportParameters(), this.getReportParametersType(), null, "reportParameters", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReportAction_ReportFormatParameters(), this.getReportFormatParametersType(), null, "reportFormatParameters", null, 0, 1, ReportAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(reportFormatParameterEClass, ReportFormatParameter.class, "ReportFormatParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getReportFormatParameter_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ReportFormatParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportFormatParameter_Value(), theXMLTypePackage.getString(), "value", null, 1, 1, ReportFormatParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(reportFormatParametersTypeEClass, ReportFormatParametersType.class, "ReportFormatParametersType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getReportFormatParametersType_ReportFormatParameter(), this.getReportFormatParameter(), null, "reportFormatParameter", null, 0, -1, ReportFormatParametersType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(reportParameterEClass, ReportParameter.class, "ReportParameter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getReportParameter_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ReportParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getReportParameter_Value(), theXMLTypePackage.getString(), "value", null, 1, 1, ReportParameter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(reportParametersTypeEClass, ReportParametersType.class, "ReportParametersType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getReportParametersType_ReportParameter(), this.getReportParameter(), null, "reportParameter", null, 0, -1, ReportParametersType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(restoreEClass, Restore.class, "Restore", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRestore_DatabaseName(), theXMLTypePackage.getString(), "databaseName", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRestore_DatabaseID(), theXMLTypePackage.getString(), "databaseID", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRestore_File(), theXMLTypePackage.getString(), "file", null, 1, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRestore_Security(), this.getSecurityType(), "security", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRestore_AllowOverwrite(), theXMLTypePackage.getBoolean(), "allowOverwrite", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRestore_Password(), theXMLTypePackage.getString(), "password", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRestore_DbStorageLocation(), theXMLTypePackage.getString(), "dbStorageLocation", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRestore_ReadWriteMode(), theEngine100Package.getReadWriteModeType(), "readWriteMode", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getRestore_Locations(), this.getLocationsType1(), null, "locations", null, 0, 1, Restore.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(restrictionListTypeEClass, RestrictionListType.class, "RestrictionListType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRestrictionListType_Any(), ecorePackage.getEFeatureMapEntry(), "any", null, 0, -1, RestrictionListType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(restrictionsTypeEClass, RestrictionsType.class, "RestrictionsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getRestrictionsType_RestrictionList(), this.getRestrictionListType(), null, "restrictionList", null, 0, 1, RestrictionsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(resultTypeEClass, ResultType.class, "ResultType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getResultType_ResultId(), theXMLTypePackage.getString(), "resultId", null, 1, 1, ResultType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(returnEClass, Return.class, "Return", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getReturn_Root(), theXmla_mddatasetPackage.getMddataset(), null, "root", null, 0, 1, Return.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReturn_Root1(), theXmla_rowsetPackage.getRowset(), null, "root1", null, 0, 1, Return.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReturn_Root2(), theXmla_emptyPackage.getEmptyresult(), null, "root2", null, 0, 1, Return.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getReturn_Results(), theXmla_multipleresultsPackage.getResultsType(), null, "results", null, 0, 1, Return.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(returnTypeEClass, ReturnType.class, "ReturnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getReturnType_Root(), theXmla_rowsetPackage.getRowset(), null, "root", null, 0, 1, ReturnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(roleEClass, Role.class, "Role", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRole_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Role.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRole_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Role.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRole_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Role.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRole_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Role.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getRole_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Role.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getRole_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Role.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getRole_Members(), this.getMembersType1(), null, "members", null, 0, 1, Role.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(rolesTypeEClass, RolesType.class, "RolesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getRolesType_Role(), this.getRole(), null, "role", null, 0, -1, RolesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(rolesType1EClass, RolesType1.class, "RolesType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getRolesType1_Role(), this.getRole(), null, "role", null, 0, -1, RolesType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(rollbackTransactionEClass, RollbackTransaction.class, "RollbackTransaction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(rootTypeEClass, RootType.class, "RootType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRootType_Parameter(), this.getParameterType1(), "parameter", null, 0, 1, RootType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(rowBindingEClass, RowBinding.class, "RowBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getRowBinding_TableID(), theXMLTypePackage.getString(), "tableID", null, 1, 1, RowBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(scalarMiningStructureColumnEClass, ScalarMiningStructureColumn.class, "ScalarMiningStructureColumn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getScalarMiningStructureColumn_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_Type(), this.getTypeType8(), "type", null, 1, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getScalarMiningStructureColumn_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_IsKey(), theXMLTypePackage.getBoolean(), "isKey", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getScalarMiningStructureColumn_Source(), this.getBinding(), null, "source", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_Distribution(), theXMLTypePackage.getString(), "distribution", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getScalarMiningStructureColumn_ModelingFlags(), this.getModelingFlagsType(), null, "modelingFlags", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_Content(), this.getContentType(), "content", null, 1, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getScalarMiningStructureColumn_ClassifiedColumns(), this.getClassifiedColumnsType(), null, "classifiedColumns", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_DiscretizationMethod(), theXMLTypePackage.getString(), "discretizationMethod", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getScalarMiningStructureColumn_DiscretizationBucketCount(), theXMLTypePackage.getInteger(), "discretizationBucketCount", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getScalarMiningStructureColumn_KeyColumns(), this.getKeyColumnsType1(), null, "keyColumns", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getScalarMiningStructureColumn_NameColumn(), this.getDataItem(), null, "nameColumn", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getScalarMiningStructureColumn_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, ScalarMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(serverEClass, Server.class, "Server", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getServer_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getServer_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_ProductName(), theXMLTypePackage.getString(), "productName", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_Edition(), this.getEditionType(), "edition", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_EditionID(), theXMLTypePackage.getLong(), "editionID", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_Version(), theXMLTypePackage.getString(), "version", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_ServerMode(), theEngine300Package.getServerModeType(), "serverMode", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_ProductLevel(), theXMLTypePackage.getString(), "productLevel", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_DefaultCompatibilityLevel(), theXMLTypePackage.getLong(), "defaultCompatibilityLevel", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServer_SupportedCompatibilityLevels(), theXMLTypePackage.getString(), "supportedCompatibilityLevels", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getServer_Databases(), this.getDatabasesType(), null, "databases", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getServer_Assemblies(), this.getAssembliesType(), null, "assemblies", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getServer_Traces(), this.getTracesType(), null, "traces", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getServer_Roles(), this.getRolesType(), null, "roles", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getServer_ServerProperties(), this.getServerPropertiesType(), null, "serverProperties", null, 0, 1, Server.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(serverPropertiesTypeEClass, ServerPropertiesType.class, "ServerPropertiesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getServerPropertiesType_ServerProperty(), this.getServerProperty(), null, "serverProperty", null, 0, -1, ServerPropertiesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(serverPropertyEClass, ServerProperty.class, "ServerProperty", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getServerProperty_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, ServerProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServerProperty_Value(), theXMLTypePackage.getString(), "value", null, 1, 1, ServerProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServerProperty_RequiresRestart(), theXMLTypePackage.getBoolean(), "requiresRestart", null, 0, 1, ServerProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServerProperty_PendingValue(), theXMLTypePackage.getAnySimpleType(), "pendingValue", null, 0, 1, ServerProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServerProperty_DefaultValue(), theXMLTypePackage.getAnySimpleType(), "defaultValue", null, 0, 1, ServerProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServerProperty_DisplayFlag(), theXMLTypePackage.getBoolean(), "displayFlag", null, 0, 1, ServerProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getServerProperty_Type(), theXMLTypePackage.getString(), "type", null, 0, 1, ServerProperty.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(sessionTypeEClass, SessionType.class, "SessionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getSessionType_MustUnderstand(), theXMLTypePackage.getInt(), "mustUnderstand", null, 0, 1, SessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSessionType_SessionId(), theXMLTypePackage.getString(), "sessionId", null, 0, 1, SessionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(setAuthContextEClass, SetAuthContext.class, "SetAuthContext", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getSetAuthContext_Token(), theXMLTypePackage.getString(), "token", null, 1, 1, SetAuthContext.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSetAuthContext_DatabaseID(), theXMLTypePackage.getString(), "databaseID", null, 1, 1, SetAuthContext.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(skippedLevelsColumnTypeEClass, SkippedLevelsColumnType.class, "SkippedLevelsColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getSkippedLevelsColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, SkippedLevelsColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(sourceEClass, Source.class, "Source", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getSource_Object(), this.getObjectReference(), null, "object", null, 1, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSource_ConnectionString(), theXMLTypePackage.getString(), "connectionString", null, 1, 1, Source.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(sourcesTypeEClass, SourcesType.class, "SourcesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getSourcesType_Source(), this.getObjectReference(), null, "source", null, 0, -1, SourcesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(standardActionEClass, StandardAction.class, "StandardAction", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getStandardAction_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Caption(), theXMLTypePackage.getString(), "caption", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_CaptionIsMdx(), theXMLTypePackage.getBoolean(), "captionIsMdx", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getStandardAction_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_TargetType(), this.getTargetTypeType(), "targetType", null, 1, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Target(), theXMLTypePackage.getString(), "target", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Condition(), theXMLTypePackage.getString(), "condition", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Type(), this.getTypeType9(), "type", null, 1, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Invocation(), this.getInvocationType(), "invocation", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Application(), theXMLTypePackage.getString(), "application", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getStandardAction_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStandardAction_Expression(), theXMLTypePackage.getString(), "expression", null, 1, 1, StandardAction.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getStatement_Statement(), theXMLTypePackage.getString(), "statement", null, 0, 1, Statement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(storageModeTypeEClass, StorageModeType.class, "StorageModeType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getStorageModeType_Value(), this.getCubeStorageModeEnumType(), "value", null, 0, 1, StorageModeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStorageModeType_Valuens(), this.getValuensType2(), "valuens", null, 0, 1, StorageModeType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(storageModeType2EClass, StorageModeType2.class, "StorageModeType2", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getStorageModeType2_Value(), this.getPartitionStorageModeEnumType(), "value", null, 0, 1, StorageModeType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStorageModeType2_Valuens(), this.getValuensType4(), "valuens", null, 0, 1, StorageModeType2.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(storageModeType3EClass, StorageModeType3.class, "StorageModeType3", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getStorageModeType3_Value(), this.getMeasureGroupStorageModeEnumType(), "value", null, 0, 1, StorageModeType3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getStorageModeType3_Valuens(), this.getValuensType6(), "valuens", null, 0, 1, StorageModeType3.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(subscribeEClass, Subscribe.class, "Subscribe", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getSubscribe_Object(), this.getObjectReference(), null, "object", null, 0, 1, Subscribe.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSubscribe_SubscriptionId(), theXMLTypePackage.getString(), "subscriptionId", null, 1, 1, Subscribe.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(synchronizeEClass, Synchronize.class, "Synchronize", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getSynchronize_Source(), this.getSource(), null, "source", null, 1, 1, Synchronize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSynchronize_SynchronizeSecurity(), this.getSynchronizeSecurityType(), "synchronizeSecurity", null, 0, 1, Synchronize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSynchronize_ApplyCompression(), theXMLTypePackage.getBoolean(), "applyCompression", null, 0, 1, Synchronize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getSynchronize_DbStorageLocation(), theXMLTypePackage.getString(), "dbStorageLocation", null, 0, 1, Synchronize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getSynchronize_Locations(), this.getLocationsType(), null, "locations", null, 0, 1, Synchronize.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(tableBindingEClass, TableBinding.class, "TableBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTableBinding_DataSourceID(), theXMLTypePackage.getString(), "dataSourceID", null, 0, 1, TableBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTableBinding_DbTableName(), theXMLTypePackage.getString(), "dbTableName", null, 1, 1, TableBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTableBinding_DbSchemaName(), theXMLTypePackage.getString(), "dbSchemaName", null, 0, 1, TableBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(tableMiningStructureColumnEClass, TableMiningStructureColumn.class, "TableMiningStructureColumn", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTableMiningStructureColumn_ForeignKeyColumns(), this.getForeignKeyColumnsType(), null, "foreignKeyColumns", null, 0, 1, TableMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTableMiningStructureColumn_SourceMeasureGroup(), this.getMeasureGroupBinding(), null, "sourceMeasureGroup", null, 0, 1, TableMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTableMiningStructureColumn_Columns(), this.getColumnsType1(), null, "columns", null, 0, 1, TableMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTableMiningStructureColumn_Translations(), this.getTranslationsType(), null, "translations", null, 0, 1, TableMiningStructureColumn.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(tableNotificationEClass, TableNotification.class, "TableNotification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTableNotification_DbTableName(), theXMLTypePackage.getString(), "dbTableName", null, 1, 1, TableNotification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTableNotification_DbSchemaName(), theXMLTypePackage.getString(), "dbSchemaName", null, 0, 1, TableNotification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(tableNotificationsTypeEClass, TableNotificationsType.class, "TableNotificationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTableNotificationsType_TableNotification(), this.getTableNotification(), null, "tableNotification", null, 0, -1, TableNotificationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(tableNotificationsType1EClass, TableNotificationsType1.class, "TableNotificationsType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTableNotificationsType1_TableNotification(), this.getTableNotification(), null, "tableNotification", null, 0, -1, TableNotificationsType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(tabularBindingEClass, TabularBinding.class, "TabularBinding", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(targetTypeEClass, TargetType.class, "TargetType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTargetType_Parameter(), this.getParameterType2(), null, "parameter", null, 0, -1, TargetType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTargetType_Module(), theXMLTypePackage.getString(), "module", null, 0, 1, TargetType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTargetType_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, TargetType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTargetType_Package(), theXMLTypePackage.getString(), "package", null, 1, 1, TargetType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(targetType1EClass, TargetType1.class, "TargetType1", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTargetType1_DbStorageLocation(), theXMLTypePackage.getString(), "dbStorageLocation", null, 0, 1, TargetType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTargetType1_DatabaseName(), theXMLTypePackage.getString(), "databaseName", null, 1, 1, TargetType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTargetType1_DatabaseID(), theXMLTypePackage.getString(), "databaseID", null, 1, 1, TargetType1.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(timeAttributeBindingEClass, TimeAttributeBinding.class, "TimeAttributeBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

		initEClass(timeBindingEClass, TimeBinding.class, "TimeBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTimeBinding_CalendarStartDate(), theXMLTypePackage.getDateTime(), "calendarStartDate", null, 1, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_CalendarEndDate(), theXMLTypePackage.getDateTime(), "calendarEndDate", null, 1, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_FirstDayOfWeek(), this.getFirstDayOfWeekType(), "firstDayOfWeek", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_CalendarLanguage(), theXMLTypePackage.getInteger(), "calendarLanguage", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_FiscalFirstMonth(), this.getFiscalFirstMonthType(), "fiscalFirstMonth", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_FiscalFirstDayOfMonth(), this.getFiscalFirstDayOfMonthType(), "fiscalFirstDayOfMonth", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_FiscalYearName(), this.getFiscalYearNameType(), "fiscalYearName", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_ReportingFirstMonth(), this.getReportingFirstMonthType(), "reportingFirstMonth", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_ReportingFirstWeekOfMonth(), this.getReportingFirstWeekOfMonthType(), "reportingFirstWeekOfMonth", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_ReportingWeekToMonthPattern(), this.getReportingWeekToMonthPatternType(), "reportingWeekToMonthPattern", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_ManufacturingFirstMonth(), this.getManufacturingFirstMonthType(), "manufacturingFirstMonth", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_ManufacturingFirstWeekOfMonth(), this.getManufacturingFirstWeekOfMonthType(), "manufacturingFirstWeekOfMonth", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTimeBinding_ManufacturingExtraMonthQuarter(), this.getManufacturingExtraMonthQuarterType(), "manufacturingExtraMonthQuarter", null, 0, 1, TimeBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(traceEClass, Trace.class, "Trace", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTrace_Name(), theXMLTypePackage.getString(), "name", null, 1, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_ID(), theXMLTypePackage.getString(), "iD", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_CreatedTimestamp(), theXMLTypePackage.getDateTime(), "createdTimestamp", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_LastSchemaUpdate(), theXMLTypePackage.getDateTime(), "lastSchemaUpdate", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTrace_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_LogFileName(), theXMLTypePackage.getString(), "logFileName", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_LogFileAppend(), theXMLTypePackage.getBoolean(), "logFileAppend", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_LogFileSize(), theXMLTypePackage.getLong(), "logFileSize", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_Audit(), theXMLTypePackage.getBoolean(), "audit", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_LogFileRollover(), theXMLTypePackage.getBoolean(), "logFileRollover", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_AutoRestart(), theXMLTypePackage.getBoolean(), "autoRestart", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTrace_StopTime(), theXMLTypePackage.getDateTime(), "stopTime", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTrace_Filter(), this.getTraceFilter(), null, "filter", null, 0, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTrace_EventType(), this.getEventTypeType(), null, "eventType", null, 1, 1, Trace.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(traceColumnsEClass, TraceColumns.class, "TraceColumns", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTraceColumns_Data(), this.getDataType(), null, "data", null, 1, 1, TraceColumns.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(traceDefinitionProviderInfoEClass, TraceDefinitionProviderInfo.class, "TraceDefinitionProviderInfo", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTraceDefinitionProviderInfo_Data(), this.getDataType2(), null, "data", null, 1, 1, TraceDefinitionProviderInfo.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(traceEventEClass, TraceEvent.class, "TraceEvent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTraceEvent_ID(), theXMLTypePackage.getInteger(), "iD", null, 1, 1, TraceEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTraceEvent_Name(), theXMLTypePackage.getString(), "name", null, 0, 1, TraceEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTraceEvent_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, TraceEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceEvent_EventColumnList(), this.getEventColumnListType(), null, "eventColumnList", null, 1, 1, TraceEvent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(traceEventCategoriesEClass, TraceEventCategories.class, "TraceEventCategories", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTraceEventCategories_Data(), this.getDataType1(), null, "data", null, 1, 1, TraceEventCategories.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(traceFilterEClass, TraceFilter.class, "TraceFilter", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTraceFilter_Not(), this.getNotType(), null, "not", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_Or(), this.getAndOrType(), null, "or", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_And(), this.getAndOrType(), null, "and", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_Equal(), this.getBoolBinop(), null, "equal", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_NotEqual(), this.getBoolBinop(), null, "notEqual", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_Less(), this.getBoolBinop(), null, "less", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_LessOrEqual(), this.getBoolBinop(), null, "lessOrEqual", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_Greater(), this.getBoolBinop(), null, "greater", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_GreaterOrEqual(), this.getBoolBinop(), null, "greaterOrEqual", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_Like(), this.getBoolBinop(), null, "like", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTraceFilter_NotLike(), this.getBoolBinop(), null, "notLike", null, 0, 1, TraceFilter.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(tracesTypeEClass, TracesType.class, "TracesType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTracesType_Trace(), this.getTrace(), null, "trace", null, 0, -1, TracesType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(translationEClass, Translation.class, "Translation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTranslation_Language(), theXMLTypePackage.getUnsignedInt(), "language", null, 1, 1, Translation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTranslation_Caption(), theXMLTypePackage.getString(), "caption", null, 0, 1, Translation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTranslation_Description(), theXMLTypePackage.getString(), "description", null, 0, 1, Translation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTranslation_DisplayFolder(), theXMLTypePackage.getString(), "displayFolder", null, 0, 1, Translation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTranslation_Annotations(), this.getAnnotationsType(), null, "annotations", null, 0, 1, Translation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(translationInsertUpdateEClass, TranslationInsertUpdate.class, "TranslationInsertUpdate", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTranslationInsertUpdate_Language(), theXMLTypePackage.getInteger(), "language", null, 1, 1, TranslationInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTranslationInsertUpdate_Name(), theXMLTypePackage.getString(), "name", null, 0, 1, TranslationInsertUpdate.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(translationsTypeEClass, TranslationsType.class, "TranslationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getTranslationsType_Translation(), this.getTranslation(), null, "translation", null, 0, -1, TranslationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(translationTypeEClass, TranslationType.class, "TranslationType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTranslationType_Language(), theXMLTypePackage.getInt(), "language", null, 1, 1, TranslationType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getTranslationType_Source(), this.getBinding(), null, "source", null, 0, 1, TranslationType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(typeType6EClass, TypeType6.class, "TypeType6", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getTypeType6_Value(), this.getDimensionAttributeTypeEnumType(), "value", null, 0, 1, TypeType6.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getTypeType6_Valuens(), this.getValuensType5(), "valuens", null, 0, 1, TypeType6.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(unaryExprEClass, UnaryExpr.class, "UnaryExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getUnaryExpr_Not(), this.getUnaryExpr(), null, "not", null, 0, 1, UnaryExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getUnaryExpr_And(), this.getBooleanExpr(), null, "and", null, 0, 1, UnaryExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getUnaryExpr_Or(), this.getBooleanExpr(), null, "or", null, 0, 1, UnaryExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getUnaryExpr_Leaf(), this.getPredLeaf(), null, "leaf", null, 0, 1, UnaryExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(unaryOperatorColumnTypeEClass, UnaryOperatorColumnType.class, "UnaryOperatorColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getUnaryOperatorColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, UnaryOperatorColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(unknownMemberTranslationsTypeEClass, UnknownMemberTranslationsType.class, "UnknownMemberTranslationsType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getUnknownMemberTranslationsType_UnknownMemberTranslation(), this.getTranslation(), null, "unknownMemberTranslation", null, 0, -1, UnknownMemberTranslationsType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(unknownMemberTypeEClass, UnknownMemberType.class, "UnknownMemberType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getUnknownMemberType_Value(), this.getUnknownMemberEnumType(), "value", null, 0, 1, UnknownMemberType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getUnknownMemberType_Valuens(), this.getValuensType(), "valuens", null, 0, 1, UnknownMemberType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(unlockEClass, Unlock.class, "Unlock", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getUnlock_ID(), this.getIDType(), "iD", null, 1, 1, Unlock.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(unsubscribeEClass, Unsubscribe.class, "Unsubscribe", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getUnsubscribe_SubscriptionId(), theXMLTypePackage.getString(), "subscriptionId", null, 1, 1, Unsubscribe.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(updateEClass, Update.class, "Update", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getUpdate_Object(), this.getObject(), null, "object", null, 1, 1, Update.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getUpdate_Attributes(), this.getAttributesType3(), null, "attributes", null, 0, 1, Update.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getUpdate_MoveWithDescendants(), theXMLTypePackage.getBoolean(), "moveWithDescendants", null, 0, 1, Update.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getUpdate_MoveToRoot(), theXMLTypePackage.getBoolean(), "moveToRoot", null, 0, 1, Update.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getUpdate_Where(), this.getWhere(), null, "where", null, 1, 1, Update.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(updateCellsEClass, UpdateCells.class, "UpdateCells", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getUpdateCells_Cell(), this.getCell(), null, "cell", null, 0, -1, UpdateCells.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(userDefinedGroupBindingEClass, UserDefinedGroupBinding.class, "UserDefinedGroupBinding", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getUserDefinedGroupBinding_AttributeID(), theXMLTypePackage.getString(), "attributeID", null, 1, 1, UserDefinedGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getUserDefinedGroupBinding_Groups(), this.getGroupsType(), null, "groups", null, 0, 1, UserDefinedGroupBinding.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(valueColumnTypeEClass, ValueColumnType.class, "ValueColumnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getValueColumnType_Source(), this.getBinding(), null, "source", null, 0, 1, ValueColumnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(versionTypeEClass, VersionType.class, "VersionType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getVersionType_Major(), theXMLTypePackage.getString(), "major", null, 0, 1, VersionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getVersionType_Minor(), theXMLTypePackage.getString(), "minor", null, 0, 1, VersionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEAttribute(getVersionType_BuildNumber(), theXMLTypePackage.getString(), "buildNumber", null, 0, 1, VersionType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(whereEClass, Where.class, "Where", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEReference(getWhere_Attribute(), this.getWhereAttribute(), null, "attribute", null, 1, 1, Where.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		initEClass(whereAttributeEClass, WhereAttribute.class, "WhereAttribute", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
		initEAttribute(getWhereAttribute_AttributeName(), theXMLTypePackage.getString(), "attributeName", null, 1, 1, WhereAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
		initEReference(getWhereAttribute_Keys(), this.getKeysType(), null, "keys", null, 0, 1, WhereAttribute.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

		// Initialize enums and add enum literals
		initEEnum(accessTypeEEnum, AccessType.class, "AccessType");
		addEEnumLiteral(accessTypeEEnum, AccessType.READ);
		addEEnumLiteral(accessTypeEEnum, AccessType.READ_CONTINGENT);
		addEEnumLiteral(accessTypeEEnum, AccessType.READ_WRITE);

		initEEnum(aggregateFunctionTypeEEnum, AggregateFunctionType.class, "AggregateFunctionType");
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.SUM);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.COUNT);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.MIN);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.MAX);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.DISTINCT_COUNT);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.NONE);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.BY_ACCOUNT);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.AVERAGE_OF_CHILDREN);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.FIRST_CHILD);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.LAST_CHILD);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.FIRST_NON_EMPTY);
		addEEnumLiteral(aggregateFunctionTypeEEnum, AggregateFunctionType.LAST_NON_EMPTY);

		initEEnum(aggregationFunctionTypeEEnum, AggregationFunctionType.class, "AggregationFunctionType");
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.SUM);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.COUNT);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.MIN);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.MAX);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.DISTINCT_COUNT);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.NONE);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.AVERAGE_OF_CHILDREN);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.FIRST_CHILD);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.LAST_CHILD);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.FIRST_NON_EMPTY);
		addEEnumLiteral(aggregationFunctionTypeEEnum, AggregationFunctionType.LAST_NON_EMPTY);

		initEEnum(aggregationStorageTypeEEnum, AggregationStorageType.class, "AggregationStorageType");
		addEEnumLiteral(aggregationStorageTypeEEnum, AggregationStorageType.REGULAR);
		addEEnumLiteral(aggregationStorageTypeEEnum, AggregationStorageType.MOLAP_ONLY);

		initEEnum(aggregationTypeTypeEEnum, AggregationTypeType.class, "AggregationTypeType");
		addEEnumLiteral(aggregationTypeTypeEEnum, AggregationTypeType.INDEXED_VIEW);
		addEEnumLiteral(aggregationTypeTypeEEnum, AggregationTypeType.TABLE);
		addEEnumLiteral(aggregationTypeTypeEEnum, AggregationTypeType.USER_DEFINED);

		initEEnum(aggregationUsageTypeEEnum, AggregationUsageType.class, "AggregationUsageType");
		addEEnumLiteral(aggregationUsageTypeEEnum, AggregationUsageType.FULL);
		addEEnumLiteral(aggregationUsageTypeEEnum, AggregationUsageType.NONE);
		addEEnumLiteral(aggregationUsageTypeEEnum, AggregationUsageType.UNRESTRICTED);
		addEEnumLiteral(aggregationUsageTypeEEnum, AggregationUsageType.DEFAULT);

		initEEnum(algorithmTypeEEnum, AlgorithmType.class, "AlgorithmType");
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_NAIVE_BAYES);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_DECISION_TREES);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_CLUSTERING);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_NEURAL_NETWORK);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_LOGISTIC_REGRESSION);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_LINEAR_REGRESSION);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_ASSOCIATION_RULES);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_TIME_SERIES);
		addEEnumLiteral(algorithmTypeEEnum, AlgorithmType.MICROSOFT_SEQUENCE_CLUSTERING);

		initEEnum(allMemberAggregationUsageTypeEEnum, AllMemberAggregationUsageType.class, "AllMemberAggregationUsageType");
		addEEnumLiteral(allMemberAggregationUsageTypeEEnum, AllMemberAggregationUsageType.FULL);
		addEEnumLiteral(allMemberAggregationUsageTypeEEnum, AllMemberAggregationUsageType.NONE);
		addEEnumLiteral(allMemberAggregationUsageTypeEEnum, AllMemberAggregationUsageType.UNRESTRICTED);
		addEEnumLiteral(allMemberAggregationUsageTypeEEnum, AllMemberAggregationUsageType.DEFAULT);

		initEEnum(attributeHierarchyOptimizedStateTypeEEnum, AttributeHierarchyOptimizedStateType.class, "AttributeHierarchyOptimizedStateType");
		addEEnumLiteral(attributeHierarchyOptimizedStateTypeEEnum, AttributeHierarchyOptimizedStateType.FULLY_OPTIMIZED);
		addEEnumLiteral(attributeHierarchyOptimizedStateTypeEEnum, AttributeHierarchyOptimizedStateType.NOT_OPTIMIZED);

		initEEnum(attributeHierarchyOptimizedStateType1EEnum, AttributeHierarchyOptimizedStateType1.class, "AttributeHierarchyOptimizedStateType1");
		addEEnumLiteral(attributeHierarchyOptimizedStateType1EEnum, AttributeHierarchyOptimizedStateType1.FULLY_OPTIMIZED);
		addEEnumLiteral(attributeHierarchyOptimizedStateType1EEnum, AttributeHierarchyOptimizedStateType1.NOT_OPTIMIZED);

		initEEnum(axisFormatTypeEEnum, AxisFormatType.class, "AxisFormatType");
		addEEnumLiteral(axisFormatTypeEEnum, AxisFormatType.CLUSTER_FORMAT);
		addEEnumLiteral(axisFormatTypeEEnum, AxisFormatType.CUSTOM_FORMAT);
		addEEnumLiteral(axisFormatTypeEEnum, AxisFormatType.TUPLE_FORMAT);

		initEEnum(cacheModeTypeEEnum, CacheModeType.class, "CacheModeType");
		addEEnumLiteral(cacheModeTypeEEnum, CacheModeType.KEEP_TRAINING_CASES);
		addEEnumLiteral(cacheModeTypeEEnum, CacheModeType.CLEAR_AFTER_PROCESSING);

		initEEnum(calculationTypeTypeEEnum, CalculationTypeType.class, "CalculationTypeType");
		addEEnumLiteral(calculationTypeTypeEEnum, CalculationTypeType.MEMBER);
		addEEnumLiteral(calculationTypeTypeEEnum, CalculationTypeType.SET);
		addEEnumLiteral(calculationTypeTypeEEnum, CalculationTypeType.CELLS);

		initEEnum(cardinalityTypeEEnum, CardinalityType.class, "CardinalityType");
		addEEnumLiteral(cardinalityTypeEEnum, CardinalityType.MANY);
		addEEnumLiteral(cardinalityTypeEEnum, CardinalityType.ONE);

		initEEnum(cardinalityType1EEnum, CardinalityType1.class, "CardinalityType1");
		addEEnumLiteral(cardinalityType1EEnum, CardinalityType1.MANY);
		addEEnumLiteral(cardinalityType1EEnum, CardinalityType1.ONE);

		initEEnum(catalogLocationTypeEEnum, CatalogLocationType.class, "CatalogLocationType");
		addEEnumLiteral(catalogLocationTypeEEnum, CatalogLocationType._1);
		addEEnumLiteral(catalogLocationTypeEEnum, CatalogLocationType._2);

		initEEnum(connectionStringSecurityTypeEEnum, ConnectionStringSecurityType.class, "ConnectionStringSecurityType");
		addEEnumLiteral(connectionStringSecurityTypeEEnum, ConnectionStringSecurityType.PASSWORD_REMOVED);
		addEEnumLiteral(connectionStringSecurityTypeEEnum, ConnectionStringSecurityType.UNCHANGED);

		initEEnum(contentTypeEEnum, ContentType.class, "ContentType");
		addEEnumLiteral(contentTypeEEnum, ContentType.DISCRETE);
		addEEnumLiteral(contentTypeEEnum, ContentType.CONTINUOUS);
		addEEnumLiteral(contentTypeEEnum, ContentType.DISCRETIZED);
		addEEnumLiteral(contentTypeEEnum, ContentType.ORDERED);
		addEEnumLiteral(contentTypeEEnum, ContentType.CYCLICAL);
		addEEnumLiteral(contentTypeEEnum, ContentType.PROBABILITY);
		addEEnumLiteral(contentTypeEEnum, ContentType.VARIANCE);
		addEEnumLiteral(contentTypeEEnum, ContentType.STD_DEV);
		addEEnumLiteral(contentTypeEEnum, ContentType.PROBABILITY_VARIANCE);
		addEEnumLiteral(contentTypeEEnum, ContentType.PROBABILITY_STD_DEV);
		addEEnumLiteral(contentTypeEEnum, ContentType.SUPPORT);
		addEEnumLiteral(contentTypeEEnum, ContentType.KEY);

		initEEnum(contentType1EEnum, ContentType1.class, "ContentType1");
		addEEnumLiteral(contentType1EEnum, ContentType1.NONE);
		addEEnumLiteral(contentType1EEnum, ContentType1.SCHEMA);
		addEEnumLiteral(contentType1EEnum, ContentType1.DATA);
		addEEnumLiteral(contentType1EEnum, ContentType1.SCHEMA_DATA);
		addEEnumLiteral(contentType1EEnum, ContentType1.METADATA);

		initEEnum(cubeStorageModeEnumTypeEEnum, CubeStorageModeEnumType.class, "CubeStorageModeEnumType");
		addEEnumLiteral(cubeStorageModeEnumTypeEEnum, CubeStorageModeEnumType.MOLAP);
		addEEnumLiteral(cubeStorageModeEnumTypeEEnum, CubeStorageModeEnumType.ROLAP);
		addEEnumLiteral(cubeStorageModeEnumTypeEEnum, CubeStorageModeEnumType.HOLAP);
		addEEnumLiteral(cubeStorageModeEnumTypeEEnum, CubeStorageModeEnumType.IN_MEMORY);

		initEEnum(dataAggregationTypeEEnum, DataAggregationType.class, "DataAggregationType");
		addEEnumLiteral(dataAggregationTypeEEnum, DataAggregationType.NONE);
		addEEnumLiteral(dataAggregationTypeEEnum, DataAggregationType.DATA_AGGREGATABLE);
		addEEnumLiteral(dataAggregationTypeEEnum, DataAggregationType.CACHE_AGGREGATABLE);
		addEEnumLiteral(dataAggregationTypeEEnum, DataAggregationType.DATA_AND_CACHE_AGGREGATABLE);

		initEEnum(dataTypeTypeEEnum, DataTypeType.class, "DataTypeType");
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.WCHAR);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.INTEGER);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.BIG_INT);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.SINGLE);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.DOUBLE);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.DATE);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.CURRENCY);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.UNSIGNED_TINY_INT);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.UNSIGNED_SMALL_INT);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.UNSIGNED_INT);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.UNSIGNED_BIG_INT);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.BOOL);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.SMALLINT);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.TINYINT);
		addEEnumLiteral(dataTypeTypeEEnum, DataTypeType.BINARY);

		initEEnum(dataTypeType1EEnum, DataTypeType1.class, "DataTypeType1");
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.WCHAR);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.INTEGER);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.BIG_INT);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.SINGLE);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.DOUBLE);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.DATE);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.CURRENCY);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.UNSIGNED_TINY_INT);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.UNSIGNED_SMALL_INT);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.UNSIGNED_INT);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.UNSIGNED_BIG_INT);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.BOOL);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.SMALLINT);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.TINYINT);
		addEEnumLiteral(dataTypeType1EEnum, DataTypeType1.VARIANT);

		initEEnum(dbpropConcatNullBehaviorTypeEEnum, DbpropConcatNullBehaviorType.class, "DbpropConcatNullBehaviorType");
		addEEnumLiteral(dbpropConcatNullBehaviorTypeEEnum, DbpropConcatNullBehaviorType._1);
		addEEnumLiteral(dbpropConcatNullBehaviorTypeEEnum, DbpropConcatNullBehaviorType._2);

		initEEnum(dbpropMsmdAutoExistsTypeEEnum, DbpropMsmdAutoExistsType.class, "DbpropMsmdAutoExistsType");
		addEEnumLiteral(dbpropMsmdAutoExistsTypeEEnum, DbpropMsmdAutoExistsType._0);
		addEEnumLiteral(dbpropMsmdAutoExistsTypeEEnum, DbpropMsmdAutoExistsType._1);
		addEEnumLiteral(dbpropMsmdAutoExistsTypeEEnum, DbpropMsmdAutoExistsType._2);
		addEEnumLiteral(dbpropMsmdAutoExistsTypeEEnum, DbpropMsmdAutoExistsType._3);

		initEEnum(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType.class, "DbpropMsmdCompareCaseSensitiveStringFlagsType");
		addEEnumLiteral(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType._1);
		addEEnumLiteral(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType._2);
		addEEnumLiteral(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType._16);
		addEEnumLiteral(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType._256);
		addEEnumLiteral(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType._4096);
		addEEnumLiteral(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType._65536);
		addEEnumLiteral(dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum, DbpropMsmdCompareCaseSensitiveStringFlagsType._1048576);

		initEEnum(dbpropMsmdMDXCompatibilityTypeEEnum, DbpropMsmdMDXCompatibilityType.class, "DbpropMsmdMDXCompatibilityType");
		addEEnumLiteral(dbpropMsmdMDXCompatibilityTypeEEnum, DbpropMsmdMDXCompatibilityType._0);
		addEEnumLiteral(dbpropMsmdMDXCompatibilityTypeEEnum, DbpropMsmdMDXCompatibilityType._1);
		addEEnumLiteral(dbpropMsmdMDXCompatibilityTypeEEnum, DbpropMsmdMDXCompatibilityType._2);
		addEEnumLiteral(dbpropMsmdMDXCompatibilityTypeEEnum, DbpropMsmdMDXCompatibilityType._3);

		initEEnum(dbpropMsmdSubqueriesTypeEEnum, DbpropMsmdSubqueriesType.class, "DbpropMsmdSubqueriesType");
		addEEnumLiteral(dbpropMsmdSubqueriesTypeEEnum, DbpropMsmdSubqueriesType._0);
		addEEnumLiteral(dbpropMsmdSubqueriesTypeEEnum, DbpropMsmdSubqueriesType._1);
		addEEnumLiteral(dbpropMsmdSubqueriesTypeEEnum, DbpropMsmdSubqueriesType._2);

		initEEnum(dbpropNullCollationTypeEEnum, DbpropNullCollationType.class, "DbpropNullCollationType");
		addEEnumLiteral(dbpropNullCollationTypeEEnum, DbpropNullCollationType._1);
		addEEnumLiteral(dbpropNullCollationTypeEEnum, DbpropNullCollationType._2);
		addEEnumLiteral(dbpropNullCollationTypeEEnum, DbpropNullCollationType._4);
		addEEnumLiteral(dbpropNullCollationTypeEEnum, DbpropNullCollationType._8);

		initEEnum(dbpropOutputParameterAvailableTypeEEnum, DbpropOutputParameterAvailableType.class, "DbpropOutputParameterAvailableType");
		addEEnumLiteral(dbpropOutputParameterAvailableTypeEEnum, DbpropOutputParameterAvailableType._1);
		addEEnumLiteral(dbpropOutputParameterAvailableTypeEEnum, DbpropOutputParameterAvailableType._2);
		addEEnumLiteral(dbpropOutputParameterAvailableTypeEEnum, DbpropOutputParameterAvailableType._4);

		initEEnum(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType.class, "DbpropPersistentIdTypeType");
		addEEnumLiteral(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType._1);
		addEEnumLiteral(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType._2);
		addEEnumLiteral(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType._4);
		addEEnumLiteral(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType._8);
		addEEnumLiteral(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType._16);
		addEEnumLiteral(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType._32);
		addEEnumLiteral(dbpropPersistentIdTypeTypeEEnum, DbpropPersistentIdTypeType._64);

		initEEnum(dbpropPrepareAbortBehaviorTypeEEnum, DbpropPrepareAbortBehaviorType.class, "DbpropPrepareAbortBehaviorType");
		addEEnumLiteral(dbpropPrepareAbortBehaviorTypeEEnum, DbpropPrepareAbortBehaviorType._1);
		addEEnumLiteral(dbpropPrepareAbortBehaviorTypeEEnum, DbpropPrepareAbortBehaviorType._2);

		initEEnum(dbpropPrepareCommitBehaviorTypeEEnum, DbpropPrepareCommitBehaviorType.class, "DbpropPrepareCommitBehaviorType");
		addEEnumLiteral(dbpropPrepareCommitBehaviorTypeEEnum, DbpropPrepareCommitBehaviorType._1);
		addEEnumLiteral(dbpropPrepareCommitBehaviorTypeEEnum, DbpropPrepareCommitBehaviorType._2);

		initEEnum(dbpropQuotedIdentifierCaseTypeEEnum, DbpropQuotedIdentifierCaseType.class, "DbpropQuotedIdentifierCaseType");
		addEEnumLiteral(dbpropQuotedIdentifierCaseTypeEEnum, DbpropQuotedIdentifierCaseType._1);
		addEEnumLiteral(dbpropQuotedIdentifierCaseTypeEEnum, DbpropQuotedIdentifierCaseType._2);
		addEEnumLiteral(dbpropQuotedIdentifierCaseTypeEEnum, DbpropQuotedIdentifierCaseType._4);
		addEEnumLiteral(dbpropQuotedIdentifierCaseTypeEEnum, DbpropQuotedIdentifierCaseType._8);

		initEEnum(dialectTypeEEnum, DialectType.class, "DialectType");
		addEEnumLiteral(dialectTypeEEnum, DialectType.MDX);
		addEEnumLiteral(dialectTypeEEnum, DialectType.DMX);
		addEEnumLiteral(dialectTypeEEnum, DialectType.SQL);

		initEEnum(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.class, "DimensionAttributeTypeEnumType");
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ACCOUNT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ACCOUNT_NAME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ACCOUNT_NUMBER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ACCOUNT_TYPE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_BUILDING);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_CITY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_COUNTRY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_FAX);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_FLOOR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_HOUSE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_PHONE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_ROOM);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_STATE_OR_PROVINCE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_STREET);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ADDRESS_ZIP);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.BOM_RESOURCE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CAPTION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CAPTION_ABBREVIATION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CAPTION_DESCRIPTION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CHANNEL);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CITY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.COMPANY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CONTINENT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.COUNTRY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.COUNTY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CURRENCY_DESTINATION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CURRENCY_ISO_CODE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CURRENCY_NAME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CURRENCY_SOURCE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CUSTOMER_GROUP);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CUSTOMER_HOUSEHOLD);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.CUSTOMERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DATE_CANCELED);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DATE_DURATION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DATE_ENDED);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DATE_MODIFIED);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DATE_START);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAY_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAY_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAY_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAY_OF_TEN_DAYS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAY_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAY_OF_WEEK);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAY_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DAYS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.DELETED_FLAG);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.EXTENDED_TYPE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_DAY_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_DAY_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_DAY_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_DAY_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_DAY_OF_WEEK);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_DAY_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_HALF_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_HALF_YEAR_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_MONTHS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_MONTH_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_MONTH_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_MONTH_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_MONTH_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_QUARTERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_QUARTER_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_QUARTER_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_TRIMESTERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_TRIMESTER_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_WEEKS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_WEEK_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_WEEK_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_WEEK_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_WEEK_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_WEEK_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FISCAL_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FORMATTING_COLOR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FORMATTING_FONT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FORMATTING_FONT_EFFECTS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FORMATTING_FONT_SIZE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FORMATTING_ORDER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.FORMATTING_SUBTOTAL);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_BOUNDARY_BOTTOM);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_BOUNDARY_FRONT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_BOUNDARY_LEFT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_BOUNDARY_POLYGON);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_BOUNDARY_REAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_BOUNDARY_RIGHT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_BOUNDARY_TOP);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_CENTROID_X);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_CENTROID_Y);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.GEO_CENTROID_Z);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.HALF_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.HALF_YEAR_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.HOURS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ID);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IMAGE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IMAGE_BMP);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IMAGE_GIF);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IMAGE_JPG);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IMAGE_PNG);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IMAGE_TIFF);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IMAGE_URL);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IS_HOLIDAY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ISO8601_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ISO8601_DAY_OF_WEEK);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ISO8601_DAY_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ISO8601_WEEKS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ISO8601_WEEK_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ISO8601_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IS_PEAK_DAY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IS_WEEK_DAY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.IS_WORKING_DAY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_DAY_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_DAY_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_DAY_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_DAY_OF_WEEK);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_DAY_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_HALF_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_HALF_YEAR_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_MONTHS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_MONTH_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_MONTH_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_MONTH_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_QUARTERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_QUARTER_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_QUARTER_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_WEEKS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_WEEK_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_WEEK_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_WEEK_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_WEEK_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MANUFACTURING_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MINUTES);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MONTHS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MONTH_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MONTH_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MONTH_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.MONTH_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ORGANIZATIONAL_UNIT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ORG_TITLE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERCENT_OWNERSHIP);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERCENT_VOTE_RIGHT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERSON);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERSON_CONTACT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERSON_DEMOGRAPHIC);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERSON_FIRST_NAME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERSON_FULL_NAME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERSON_LAST_NAME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PERSON_MIDDLE_NAME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_COLOR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_DENSITY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_DEPTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_HEIGHT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_SIZE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_VOLUME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_WEIGHT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PHYSICAL_WIDTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.POINT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.POSTAL_CODE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PRODUCT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PRODUCT_BRAND);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PRODUCT_CATEGORY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PRODUCT_GROUP);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PRODUCT_SKU);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PROJECT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PROJECT_CODE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PROJECT_COMPLETION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PROJECT_END_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PROJECT_NAME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PROJECT_START_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.PROMOTION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.QTY_RANGE_HIGH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.QTY_RANGE_LOW);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.QUANTITATIVE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.QUARTERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.QUARTER_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.QUARTER_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.RATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.RATE_TYPE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REGION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REGULAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.RELATION_TO_PARENT);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_DAY_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_DAY_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_DAY_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_DAY_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_DAY_OF_WEEK);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_DAY_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_HALF_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_HALF_YEAR_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_MONTHS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_MONTH_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_MONTH_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_MONTH_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_MONTH_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_QUARTERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_QUARTER_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_QUARTER_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_TRIMESTERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_TRIMESTER_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_WEEKS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_WEEK_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_WEEK_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_WEEK_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_WEEK_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_WEEK_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPORTING_YEARS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.REPRESENTATIVE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.ROW_NUMBER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SCD_END_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SCD_ORIGINAL_ID);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SCD_START_DATE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SCD_STATUS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SCENARIO);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SECONDS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SEQUENCE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.SHORT_CAPTION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.STATE_OR_PROVINCE);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TEN_DAY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TEN_DAY_OF_HALF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TEN_DAY_OF_MONTH);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TEN_DAY_OF_QUARTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TEN_DAY_OF_TRIMESTER);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TEN_DAY_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TRIMESTERS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.TRIMESTER_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.UNDEFINED_TIME);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.UTILITY);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.VERSION);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.WEB_HTML);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.WEB_MAIL_ALIAS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.WEB_URL);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.WEB_XML_OR_XSL);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.WEEK_OF_YEAR);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.WEEKS);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.WINTER_SUMMER_SEASON);
		addEEnumLiteral(dimensionAttributeTypeEnumTypeEEnum, DimensionAttributeTypeEnumType.YEARS);

		initEEnum(dimensionCurrentStorageModeEnumTypeEEnum, DimensionCurrentStorageModeEnumType.class, "DimensionCurrentStorageModeEnumType");
		addEEnumLiteral(dimensionCurrentStorageModeEnumTypeEEnum, DimensionCurrentStorageModeEnumType.MOLAP);
		addEEnumLiteral(dimensionCurrentStorageModeEnumTypeEEnum, DimensionCurrentStorageModeEnumType.IN_MEMORY);
		addEEnumLiteral(dimensionCurrentStorageModeEnumTypeEEnum, DimensionCurrentStorageModeEnumType.ROLAP);

		initEEnum(discretizationMethodTypeEEnum, DiscretizationMethodType.class, "DiscretizationMethodType");
		addEEnumLiteral(discretizationMethodTypeEEnum, DiscretizationMethodType.NONE);
		addEEnumLiteral(discretizationMethodTypeEEnum, DiscretizationMethodType.AUTOMATIC);
		addEEnumLiteral(discretizationMethodTypeEEnum, DiscretizationMethodType.EQUAL_AREAS);
		addEEnumLiteral(discretizationMethodTypeEEnum, DiscretizationMethodType.CLUSTERS);
		addEEnumLiteral(discretizationMethodTypeEEnum, DiscretizationMethodType.THRESHOLDS);
		addEEnumLiteral(discretizationMethodTypeEEnum, DiscretizationMethodType.USER_DEFINED);

		initEEnum(durabilityGuaranteeTypeEEnum, DurabilityGuaranteeType.class, "DurabilityGuaranteeType");
		addEEnumLiteral(durabilityGuaranteeTypeEEnum, DurabilityGuaranteeType.LOCAL_DISK);
		addEEnumLiteral(durabilityGuaranteeTypeEEnum, DurabilityGuaranteeType.FULL);

		initEEnum(editionTypeEEnum, EditionType.class, "EditionType");
		addEEnumLiteral(editionTypeEEnum, EditionType.STANDARD);
		addEEnumLiteral(editionTypeEEnum, EditionType.STANDARD64);
		addEEnumLiteral(editionTypeEEnum, EditionType.ENTERPRISE);
		addEEnumLiteral(editionTypeEEnum, EditionType.ENTERPRISE64);
		addEEnumLiteral(editionTypeEEnum, EditionType.DEVELOPER);
		addEEnumLiteral(editionTypeEEnum, EditionType.DEVELOPER64);
		addEEnumLiteral(editionTypeEEnum, EditionType.EVALUATION);
		addEEnumLiteral(editionTypeEEnum, EditionType.EVALUATION64);
		addEEnumLiteral(editionTypeEEnum, EditionType.LOCAL);
		addEEnumLiteral(editionTypeEEnum, EditionType.LOCAL64);
		addEEnumLiteral(editionTypeEEnum, EditionType.BUSINESS_INTELLIGENCE);
		addEEnumLiteral(editionTypeEEnum, EditionType.BUSINESS_INTELLIGENCE64);

		initEEnum(fiscalYearNameTypeEEnum, FiscalYearNameType.class, "FiscalYearNameType");
		addEEnumLiteral(fiscalYearNameTypeEEnum, FiscalYearNameType.CALENDAR_YEAR_NAME);
		addEEnumLiteral(fiscalYearNameTypeEEnum, FiscalYearNameType.NEXT_CALENDAR_YEAR_NAME);

		initEEnum(formatTypeEEnum, FormatType.class, "FormatType");
		addEEnumLiteral(formatTypeEEnum, FormatType.TRIM_RIGHT);
		addEEnumLiteral(formatTypeEEnum, FormatType.TRIM_LEFT);
		addEEnumLiteral(formatTypeEEnum, FormatType.TRIM_ALL);
		addEEnumLiteral(formatTypeEEnum, FormatType.TRIM_NONE);

		initEEnum(formatType1EEnum, FormatType1.class, "FormatType1");
		addEEnumLiteral(formatType1EEnum, FormatType1.TABULAR);
		addEEnumLiteral(formatType1EEnum, FormatType1.MULTIDIMENSIONAL);
		addEEnumLiteral(formatType1EEnum, FormatType1.NATIVE);

		initEEnum(groupingBehaviorTypeEEnum, GroupingBehaviorType.class, "GroupingBehaviorType");
		addEEnumLiteral(groupingBehaviorTypeEEnum, GroupingBehaviorType.ENCOURAGE_GROUPING);
		addEEnumLiteral(groupingBehaviorTypeEEnum, GroupingBehaviorType.DISCOURAGE_GROUPING);

		initEEnum(hideMemberIfTypeEEnum, HideMemberIfType.class, "HideMemberIfType");
		addEEnumLiteral(hideMemberIfTypeEEnum, HideMemberIfType.NEVER);
		addEEnumLiteral(hideMemberIfTypeEEnum, HideMemberIfType.ONLY_CHILD_WITH_NO_NAME);
		addEEnumLiteral(hideMemberIfTypeEEnum, HideMemberIfType.ONLY_CHILD_WITH_PARENT_NAME);
		addEEnumLiteral(hideMemberIfTypeEEnum, HideMemberIfType.NO_NAME);
		addEEnumLiteral(hideMemberIfTypeEEnum, HideMemberIfType.PARENT_NAME);

		initEEnum(hierarchyUniqueNameStyleTypeEEnum, HierarchyUniqueNameStyleType.class, "HierarchyUniqueNameStyleType");
		addEEnumLiteral(hierarchyUniqueNameStyleTypeEEnum, HierarchyUniqueNameStyleType.INCLUDE_DIMENSION_NAME);
		addEEnumLiteral(hierarchyUniqueNameStyleTypeEEnum, HierarchyUniqueNameStyleType.EXCLUDE_DIMENSION_NAME);

		initEEnum(instanceSelectionTypeEEnum, InstanceSelectionType.class, "InstanceSelectionType");
		addEEnumLiteral(instanceSelectionTypeEEnum, InstanceSelectionType.NONE);
		addEEnumLiteral(instanceSelectionTypeEEnum, InstanceSelectionType.DROP_DOWN);
		addEEnumLiteral(instanceSelectionTypeEEnum, InstanceSelectionType.LIST);
		addEEnumLiteral(instanceSelectionTypeEEnum, InstanceSelectionType.FILTERED_LIST);
		addEEnumLiteral(instanceSelectionTypeEEnum, InstanceSelectionType.MANDATORY_FILTER);

		initEEnum(invalidXmlCharactersTypeEEnum, InvalidXmlCharactersType.class, "InvalidXmlCharactersType");
		addEEnumLiteral(invalidXmlCharactersTypeEEnum, InvalidXmlCharactersType.PRESERVE);
		addEEnumLiteral(invalidXmlCharactersTypeEEnum, InvalidXmlCharactersType.REMOVE);
		addEEnumLiteral(invalidXmlCharactersTypeEEnum, InvalidXmlCharactersType.REPLACE);

		initEEnum(invocationTypeEEnum, InvocationType.class, "InvocationType");
		addEEnumLiteral(invocationTypeEEnum, InvocationType.INTERACTIVE);
		addEEnumLiteral(invocationTypeEEnum, InvocationType.ON_OPEN);
		addEEnumLiteral(invocationTypeEEnum, InvocationType.BATCH);

		initEEnum(invocationType1EEnum, InvocationType1.class, "InvocationType1");
		addEEnumLiteral(invocationType1EEnum, InvocationType1.INTERACTIVE);
		addEEnumLiteral(invocationType1EEnum, InvocationType1.ON_OPEN);
		addEEnumLiteral(invocationType1EEnum, InvocationType1.BATCH);

		initEEnum(invocationType2EEnum, InvocationType2.class, "InvocationType2");
		addEEnumLiteral(invocationType2EEnum, InvocationType2.INTERACTIVE);
		addEEnumLiteral(invocationType2EEnum, InvocationType2.ON_OPEN);
		addEEnumLiteral(invocationType2EEnum, InvocationType2.BATCH);

		initEEnum(isolationTypeEEnum, IsolationType.class, "IsolationType");
		addEEnumLiteral(isolationTypeEEnum, IsolationType.READ_COMMITTED);
		addEEnumLiteral(isolationTypeEEnum, IsolationType.SNAPSHOT);

		initEEnum(keyDuplicateTypeEEnum, KeyDuplicateType.class, "KeyDuplicateType");
		addEEnumLiteral(keyDuplicateTypeEEnum, KeyDuplicateType.IGNORE_ERROR);
		addEEnumLiteral(keyDuplicateTypeEEnum, KeyDuplicateType.REPORT_AND_CONTINUE);
		addEEnumLiteral(keyDuplicateTypeEEnum, KeyDuplicateType.REPORT_AND_STOP);

		initEEnum(keyErrorActionTypeEEnum, KeyErrorActionType.class, "KeyErrorActionType");
		addEEnumLiteral(keyErrorActionTypeEEnum, KeyErrorActionType.CONVERT_TO_UNKNOWN);
		addEEnumLiteral(keyErrorActionTypeEEnum, KeyErrorActionType.DISCARD_RECORD);

		initEEnum(keyErrorLimitActionTypeEEnum, KeyErrorLimitActionType.class, "KeyErrorLimitActionType");
		addEEnumLiteral(keyErrorLimitActionTypeEEnum, KeyErrorLimitActionType.STOP_PROCESSING);
		addEEnumLiteral(keyErrorLimitActionTypeEEnum, KeyErrorLimitActionType.STOP_LOGGING);

		initEEnum(keyNotFoundTypeEEnum, KeyNotFoundType.class, "KeyNotFoundType");
		addEEnumLiteral(keyNotFoundTypeEEnum, KeyNotFoundType.IGNORE_ERROR);
		addEEnumLiteral(keyNotFoundTypeEEnum, KeyNotFoundType.REPORT_AND_CONTINUE);
		addEEnumLiteral(keyNotFoundTypeEEnum, KeyNotFoundType.REPORT_AND_STOP);

		initEEnum(materializationTypeEEnum, MaterializationType.class, "MaterializationType");
		addEEnumLiteral(materializationTypeEEnum, MaterializationType.REGULAR);
		addEEnumLiteral(materializationTypeEEnum, MaterializationType.INDIRECT);

		initEEnum(mdpropAggregateCellUpdateTypeEEnum, MdpropAggregateCellUpdateType.class, "MdpropAggregateCellUpdateType");
		addEEnumLiteral(mdpropAggregateCellUpdateTypeEEnum, MdpropAggregateCellUpdateType._0);
		addEEnumLiteral(mdpropAggregateCellUpdateTypeEEnum, MdpropAggregateCellUpdateType._1);
		addEEnumLiteral(mdpropAggregateCellUpdateTypeEEnum, MdpropAggregateCellUpdateType._2);

		initEEnum(mdpropFlatteningSupportTypeEEnum, MdpropFlatteningSupportType.class, "MdpropFlatteningSupportType");
		addEEnumLiteral(mdpropFlatteningSupportTypeEEnum, MdpropFlatteningSupportType._1);
		addEEnumLiteral(mdpropFlatteningSupportTypeEEnum, MdpropFlatteningSupportType._2);
		addEEnumLiteral(mdpropFlatteningSupportTypeEEnum, MdpropFlatteningSupportType._3);
		addEEnumLiteral(mdpropFlatteningSupportTypeEEnum, MdpropFlatteningSupportType._4);

		initEEnum(mdpropMdxNonMeasureExpressionsTypeEEnum, MdpropMdxNonMeasureExpressionsType.class, "MdpropMdxNonMeasureExpressionsType");
		addEEnumLiteral(mdpropMdxNonMeasureExpressionsTypeEEnum, MdpropMdxNonMeasureExpressionsType._0);
		addEEnumLiteral(mdpropMdxNonMeasureExpressionsTypeEEnum, MdpropMdxNonMeasureExpressionsType._1);

		initEEnum(mdpropMdxRangeRowsetTypeEEnum, MdpropMdxRangeRowsetType.class, "MdpropMdxRangeRowsetType");
		addEEnumLiteral(mdpropMdxRangeRowsetTypeEEnum, MdpropMdxRangeRowsetType._1);
		addEEnumLiteral(mdpropMdxRangeRowsetTypeEEnum, MdpropMdxRangeRowsetType._2);
		addEEnumLiteral(mdpropMdxRangeRowsetTypeEEnum, MdpropMdxRangeRowsetType._4);

		initEEnum(mdpropMdxSlicerTypeEEnum, MdpropMdxSlicerType.class, "MdpropMdxSlicerType");
		addEEnumLiteral(mdpropMdxSlicerTypeEEnum, MdpropMdxSlicerType._1);
		addEEnumLiteral(mdpropMdxSlicerTypeEEnum, MdpropMdxSlicerType._2);

		initEEnum(mdxMissingMemberModeTypeEEnum, MdxMissingMemberModeType.class, "MdxMissingMemberModeType");
		addEEnumLiteral(mdxMissingMemberModeTypeEEnum, MdxMissingMemberModeType.DEFAULT);
		addEEnumLiteral(mdxMissingMemberModeTypeEEnum, MdxMissingMemberModeType.IGNORE);
		addEEnumLiteral(mdxMissingMemberModeTypeEEnum, MdxMissingMemberModeType.ERROR);

		initEEnum(mdxMissingMemberModeType1EEnum, MdxMissingMemberModeType1.class, "MdxMissingMemberModeType1");
		addEEnumLiteral(mdxMissingMemberModeType1EEnum, MdxMissingMemberModeType1.DEFAULT);
		addEEnumLiteral(mdxMissingMemberModeType1EEnum, MdxMissingMemberModeType1.IGNORE);
		addEEnumLiteral(mdxMissingMemberModeType1EEnum, MdxMissingMemberModeType1.ERROR);

		initEEnum(mdxSupportTypeEEnum, MDXSupportType.class, "MDXSupportType");
		addEEnumLiteral(mdxSupportTypeEEnum, MDXSupportType.CORE);

		initEEnum(measureGroupStorageModeEnumTypeEEnum, MeasureGroupStorageModeEnumType.class, "MeasureGroupStorageModeEnumType");
		addEEnumLiteral(measureGroupStorageModeEnumTypeEEnum, MeasureGroupStorageModeEnumType.MOLAP);
		addEEnumLiteral(measureGroupStorageModeEnumTypeEEnum, MeasureGroupStorageModeEnumType.ROLAP);
		addEEnumLiteral(measureGroupStorageModeEnumTypeEEnum, MeasureGroupStorageModeEnumType.HOLAP);
		addEEnumLiteral(measureGroupStorageModeEnumTypeEEnum, MeasureGroupStorageModeEnumType.IN_MEMORY);

		initEEnum(membersWithDataTypeEEnum, MembersWithDataType.class, "MembersWithDataType");
		addEEnumLiteral(membersWithDataTypeEEnum, MembersWithDataType.NON_LEAF_DATA_HIDDEN);
		addEEnumLiteral(membersWithDataTypeEEnum, MembersWithDataType.NON_LEAF_DATA_VISIBLE);

		initEEnum(memberUniqueNameStyleTypeEEnum, MemberUniqueNameStyleType.class, "MemberUniqueNameStyleType");
		addEEnumLiteral(memberUniqueNameStyleTypeEEnum, MemberUniqueNameStyleType.NATIVE);
		addEEnumLiteral(memberUniqueNameStyleTypeEEnum, MemberUniqueNameStyleType.NAME_PATH);

		initEEnum(memoryLockingModeTypeEEnum, MemoryLockingModeType.class, "MemoryLockingModeType");
		addEEnumLiteral(memoryLockingModeTypeEEnum, MemoryLockingModeType._0);
		addEEnumLiteral(memoryLockingModeTypeEEnum, MemoryLockingModeType._1);

		initEEnum(modeTypeEEnum, ModeType.class, "ModeType");
		addEEnumLiteral(modeTypeEEnum, ModeType.COMMIT_SHARED);
		addEEnumLiteral(modeTypeEEnum, ModeType.COMMIT_EXCLUSIVE);

		initEEnum(notificationTechniqueTypeEEnum, NotificationTechniqueType.class, "NotificationTechniqueType");
		addEEnumLiteral(notificationTechniqueTypeEEnum, NotificationTechniqueType.CLIENT);
		addEEnumLiteral(notificationTechniqueTypeEEnum, NotificationTechniqueType.SERVER);

		initEEnum(notificationTechniqueType1EEnum, NotificationTechniqueType1.class, "NotificationTechniqueType1");
		addEEnumLiteral(notificationTechniqueType1EEnum, NotificationTechniqueType1.CLIENT);
		addEEnumLiteral(notificationTechniqueType1EEnum, NotificationTechniqueType1.SERVER);

		initEEnum(nullKeyConvertedToUnknownTypeEEnum, NullKeyConvertedToUnknownType.class, "NullKeyConvertedToUnknownType");
		addEEnumLiteral(nullKeyConvertedToUnknownTypeEEnum, NullKeyConvertedToUnknownType.IGNORE_ERROR);
		addEEnumLiteral(nullKeyConvertedToUnknownTypeEEnum, NullKeyConvertedToUnknownType.REPORT_AND_CONTINUE);
		addEEnumLiteral(nullKeyConvertedToUnknownTypeEEnum, NullKeyConvertedToUnknownType.REPORT_AND_STOP);

		initEEnum(nullKeyNotAllowedTypeEEnum, NullKeyNotAllowedType.class, "NullKeyNotAllowedType");
		addEEnumLiteral(nullKeyNotAllowedTypeEEnum, NullKeyNotAllowedType.IGNORE_ERROR);
		addEEnumLiteral(nullKeyNotAllowedTypeEEnum, NullKeyNotAllowedType.REPORT_AND_CONTINUE);
		addEEnumLiteral(nullKeyNotAllowedTypeEEnum, NullKeyNotAllowedType.REPORT_AND_STOP);

		initEEnum(nullProcessingTypeEEnum, NullProcessingType.class, "NullProcessingType");
		addEEnumLiteral(nullProcessingTypeEEnum, NullProcessingType.PRESERVE);
		addEEnumLiteral(nullProcessingTypeEEnum, NullProcessingType.ERROR);
		addEEnumLiteral(nullProcessingTypeEEnum, NullProcessingType.UNKNOWN_MEMBER);
		addEEnumLiteral(nullProcessingTypeEEnum, NullProcessingType.ZERO_OR_BLANK);
		addEEnumLiteral(nullProcessingTypeEEnum, NullProcessingType.AUTOMATIC);

		initEEnum(objectExpansionEEnum, ObjectExpansion.class, "ObjectExpansion");
		addEEnumLiteral(objectExpansionEEnum, ObjectExpansion.OBJECT_PROPERTIES);
		addEEnumLiteral(objectExpansionEEnum, ObjectExpansion.EXPAND_FULL);

		initEEnum(onlineModeTypeEEnum, OnlineModeType.class, "OnlineModeType");
		addEEnumLiteral(onlineModeTypeEEnum, OnlineModeType.IMMEDIATE);
		addEEnumLiteral(onlineModeTypeEEnum, OnlineModeType.ON_CACHE_COMPLETE);

		initEEnum(optimizedStateTypeEEnum, OptimizedStateType.class, "OptimizedStateType");
		addEEnumLiteral(optimizedStateTypeEEnum, OptimizedStateType.FULLY_OPTIMIZED);
		addEEnumLiteral(optimizedStateTypeEEnum, OptimizedStateType.NOT_OPTIMIZED);

		initEEnum(optionalityTypeEEnum, OptionalityType.class, "OptionalityType");
		addEEnumLiteral(optionalityTypeEEnum, OptionalityType.MANDATORY);
		addEEnumLiteral(optionalityTypeEEnum, OptionalityType.OPTIONAL);

		initEEnum(orderByTypeEEnum, OrderByType.class, "OrderByType");
		addEEnumLiteral(orderByTypeEEnum, OrderByType.KEY);
		addEEnumLiteral(orderByTypeEEnum, OrderByType.NAME);
		addEEnumLiteral(orderByTypeEEnum, OrderByType.ATTRIBUTE_KEY);
		addEEnumLiteral(orderByTypeEEnum, OrderByType.ATTRIBUTE_NAME);

		initEEnum(overrideBehaviorTypeEEnum, OverrideBehaviorType.class, "OverrideBehaviorType");
		addEEnumLiteral(overrideBehaviorTypeEEnum, OverrideBehaviorType.NONE);
		addEEnumLiteral(overrideBehaviorTypeEEnum, OverrideBehaviorType.STRONG);

		initEEnum(parameterTypeEEnum, ParameterType.class, "ParameterType");
		addEEnumLiteral(parameterTypeEEnum, ParameterType.END_OF_INPUT_ROWSET);

		initEEnum(parameterType1EEnum, ParameterType1.class, "ParameterType1");
		addEEnumLiteral(parameterType1EEnum, ParameterType1.INPUT_ROWSET);

		initEEnum(partitionCurrentStorageModeEnumTypeEEnum, PartitionCurrentStorageModeEnumType.class, "PartitionCurrentStorageModeEnumType");
		addEEnumLiteral(partitionCurrentStorageModeEnumTypeEEnum, PartitionCurrentStorageModeEnumType.MOLAP);
		addEEnumLiteral(partitionCurrentStorageModeEnumTypeEEnum, PartitionCurrentStorageModeEnumType.ROLAP);
		addEEnumLiteral(partitionCurrentStorageModeEnumTypeEEnum, PartitionCurrentStorageModeEnumType.HOLAP);
		addEEnumLiteral(partitionCurrentStorageModeEnumTypeEEnum, PartitionCurrentStorageModeEnumType.IN_MEMORY);

		initEEnum(partitionModesEEnum, PartitionModes.class, "PartitionModes");
		addEEnumLiteral(partitionModesEEnum, PartitionModes.NONE);
		addEEnumLiteral(partitionModesEEnum, PartitionModes.PER_NODE);
		addEEnumLiteral(partitionModesEEnum, PartitionModes.PER_CPU);

		initEEnum(partitionStorageModeEnumTypeEEnum, PartitionStorageModeEnumType.class, "PartitionStorageModeEnumType");
		addEEnumLiteral(partitionStorageModeEnumTypeEEnum, PartitionStorageModeEnumType.MOLAP);
		addEEnumLiteral(partitionStorageModeEnumTypeEEnum, PartitionStorageModeEnumType.ROLAP);
		addEEnumLiteral(partitionStorageModeEnumTypeEEnum, PartitionStorageModeEnumType.HOLAP);
		addEEnumLiteral(partitionStorageModeEnumTypeEEnum, PartitionStorageModeEnumType.IN_MEMORY);

		initEEnum(permissionSetTypeEEnum, PermissionSetType.class, "PermissionSetType");
		addEEnumLiteral(permissionSetTypeEEnum, PermissionSetType.SAFE);
		addEEnumLiteral(permissionSetTypeEEnum, PermissionSetType.EXTERNAL_ACCESS);
		addEEnumLiteral(permissionSetTypeEEnum, PermissionSetType.UNRESTRICTED);

		initEEnum(persistenceTypeEEnum, PersistenceType.class, "PersistenceType");
		addEEnumLiteral(persistenceTypeEEnum, PersistenceType.NOT_PERSISTED);
		addEEnumLiteral(persistenceTypeEEnum, PersistenceType.METADATA);

		initEEnum(persistenceType1EEnum, PersistenceType1.class, "PersistenceType1");
		addEEnumLiteral(persistenceType1EEnum, PersistenceType1.NOT_PERSISTED);
		addEEnumLiteral(persistenceType1EEnum, PersistenceType1.METADATA);
		addEEnumLiteral(persistenceType1EEnum, PersistenceType1.ALL);

		initEEnum(processingGroupTypeEEnum, ProcessingGroupType.class, "ProcessingGroupType");
		addEEnumLiteral(processingGroupTypeEEnum, ProcessingGroupType.BY_ATTRIBUTE);
		addEEnumLiteral(processingGroupTypeEEnum, ProcessingGroupType.BY_TABLE);

		initEEnum(processingModeTypeEEnum, ProcessingModeType.class, "ProcessingModeType");
		addEEnumLiteral(processingModeTypeEEnum, ProcessingModeType.REGULAR);
		addEEnumLiteral(processingModeTypeEEnum, ProcessingModeType.LAZY_AGGREGATIONS);

		initEEnum(processingModeType1EEnum, ProcessingModeType1.class, "ProcessingModeType1");
		addEEnumLiteral(processingModeType1EEnum, ProcessingModeType1.REGULAR);
		addEEnumLiteral(processingModeType1EEnum, ProcessingModeType1.LAZY_AGGREGATIONS);

		initEEnum(processingModeType2EEnum, ProcessingModeType2.class, "ProcessingModeType2");
		addEEnumLiteral(processingModeType2EEnum, ProcessingModeType2.REGULAR);
		addEEnumLiteral(processingModeType2EEnum, ProcessingModeType2.LAZY_AGGREGATIONS);

		initEEnum(processingModeType3EEnum, ProcessingModeType3.class, "ProcessingModeType3");
		addEEnumLiteral(processingModeType3EEnum, ProcessingModeType3.REGULAR);
		addEEnumLiteral(processingModeType3EEnum, ProcessingModeType3.LAZY_AGGREGATIONS);

		initEEnum(processingStateTypeEEnum, ProcessingStateType.class, "ProcessingStateType");
		addEEnumLiteral(processingStateTypeEEnum, ProcessingStateType.PROCESSED);
		addEEnumLiteral(processingStateTypeEEnum, ProcessingStateType.UNPROCESSED);
		addEEnumLiteral(processingStateTypeEEnum, ProcessingStateType.INVALID_EXPRESSION);
		addEEnumLiteral(processingStateTypeEEnum, ProcessingStateType.CALCULATION_ERROR);
		addEEnumLiteral(processingStateTypeEEnum, ProcessingStateType.DEPENDENCY_ERROR);

		initEEnum(providerTypeTypeEEnum, ProviderTypeType.class, "ProviderTypeType");
		addEEnumLiteral(providerTypeTypeEEnum, ProviderTypeType._1);
		addEEnumLiteral(providerTypeTypeEEnum, ProviderTypeType._2);
		addEEnumLiteral(providerTypeTypeEEnum, ProviderTypeType._3);
		addEEnumLiteral(providerTypeTypeEEnum, ProviderTypeType._4);

		initEEnum(readDefinitionTypeEEnum, ReadDefinitionType.class, "ReadDefinitionType");
		addEEnumLiteral(readDefinitionTypeEEnum, ReadDefinitionType.NONE);
		addEEnumLiteral(readDefinitionTypeEEnum, ReadDefinitionType.BASIC);
		addEEnumLiteral(readDefinitionTypeEEnum, ReadDefinitionType.ALLOWED);

		initEEnum(readSourceDataTypeEEnum, ReadSourceDataType.class, "ReadSourceDataType");
		addEEnumLiteral(readSourceDataTypeEEnum, ReadSourceDataType.NONE);
		addEEnumLiteral(readSourceDataTypeEEnum, ReadSourceDataType.ALLOWED);

		initEEnum(readTypeEEnum, ReadType.class, "ReadType");
		addEEnumLiteral(readTypeEEnum, ReadType.NONE);
		addEEnumLiteral(readTypeEEnum, ReadType.ALLOWED);

		initEEnum(readType1EEnum, ReadType1.class, "ReadType1");
		addEEnumLiteral(readType1EEnum, ReadType1.NONE);
		addEEnumLiteral(readType1EEnum, ReadType1.ALLOWED);

		initEEnum(refreshPolicyTypeEEnum, RefreshPolicyType.class, "RefreshPolicyType");
		addEEnumLiteral(refreshPolicyTypeEEnum, RefreshPolicyType.BY_QUERY);
		addEEnumLiteral(refreshPolicyTypeEEnum, RefreshPolicyType.BY_INTERVAL);

		initEEnum(refreshPolicyType1EEnum, RefreshPolicyType1.class, "RefreshPolicyType1");
		addEEnumLiteral(refreshPolicyType1EEnum, RefreshPolicyType1.BY_QUERY);
		addEEnumLiteral(refreshPolicyType1EEnum, RefreshPolicyType1.BY_INTERVAL);

		initEEnum(relationshipTypeTypeEEnum, RelationshipTypeType.class, "RelationshipTypeType");
		addEEnumLiteral(relationshipTypeTypeEEnum, RelationshipTypeType.RIGID);
		addEEnumLiteral(relationshipTypeTypeEEnum, RelationshipTypeType.FLEXIBLE);

		initEEnum(reportingFirstWeekOfMonthTypeEEnum, ReportingFirstWeekOfMonthType.class, "ReportingFirstWeekOfMonthType");
		addEEnumLiteral(reportingFirstWeekOfMonthTypeEEnum, ReportingFirstWeekOfMonthType._1);
		addEEnumLiteral(reportingFirstWeekOfMonthTypeEEnum, ReportingFirstWeekOfMonthType._2);
		addEEnumLiteral(reportingFirstWeekOfMonthTypeEEnum, ReportingFirstWeekOfMonthType._3);
		addEEnumLiteral(reportingFirstWeekOfMonthTypeEEnum, ReportingFirstWeekOfMonthType._4);

		initEEnum(reportingWeekToMonthPatternTypeEEnum, ReportingWeekToMonthPatternType.class, "ReportingWeekToMonthPatternType");
		addEEnumLiteral(reportingWeekToMonthPatternTypeEEnum, ReportingWeekToMonthPatternType.WEEKS445);
		addEEnumLiteral(reportingWeekToMonthPatternTypeEEnum, ReportingWeekToMonthPatternType.WEEKS454);
		addEEnumLiteral(reportingWeekToMonthPatternTypeEEnum, ReportingWeekToMonthPatternType.WEEKS544);

		initEEnum(requestTypeTypeEEnum, RequestTypeType.class, "RequestTypeType");
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DBSCHEMACATALOGS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMACUBES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMADIMENSIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAHIERARCHIES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMALEVELS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAMEASURES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAPROPERTIES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAMEMBERS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAACTIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMASETS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERINSTANCES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAKPIS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAMEASUREGROUPS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAMEASUREGROUPDIMENSIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERPROPERTIES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERLITERALS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERSCHEMAROWSETS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERKEYWORDS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DBSCHEMATABLES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DBSCHEMACOLUMNS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DBSCHEMAPROVIDERTYPES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAINPUTDATASOURCES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGSERVICES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGSERVICEPARAMETERS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGFUNCTIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGMODELCONTENT);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGMODELXML);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGMODELCONTENTPMML);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGMODELS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGCOLUMNS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGSTRUCTURES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DMSCHEMAMININGSTRUCTURECOLUMNS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERDATASOURCES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERENUMERATORS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERXMLMETADATA);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERTRACES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERTRACEDEFINITIONPROVIDERINFO);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERTRACECOLUMNS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERTRACEEVENTCATEGORIES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERMEMORYUSAGE);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERMEMORYGRANT);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERLOCKS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERCONNECTIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERSESSIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERJOBS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERTRANSACTIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERDBCONNECTIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERMASTERKEY);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERPERFORMANCECOUNTERS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERLOCATIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERPARTITIONDIMENSIONSTAT);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERPARTITIONSTAT);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERDIMENSIONSTAT);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERCOMMANDS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERCOMMANDOBJECTS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVEROBJECTACTIVITY);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVEROBJECTMEMORYUSAGE);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERSTORAGETABLES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERSTORAGETABLECOLUMNS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERSTORAGETABLECOLUMNSEGMENTS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERCSDLMETADATA);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERCALCDEPENDENCY);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.MDSCHEMAFUNCTIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERRINGBUFFERS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERXEVENTTRACEDEFINITION);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERXEVENTPACKAGES);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERXEVENTOBJECTS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERXEVENTOBJECTCOLUMNS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERXEVENTSESSIONS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERXEVENTSESSIONTARGETS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERMEMSTATS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVERDBMEMSTATS);
		addEEnumLiteral(requestTypeTypeEEnum, RequestTypeType.DISCOVEROBJECTCOUNTERS);

		initEEnum(responseEncodingTypeEEnum, ResponseEncodingType.class, "ResponseEncodingType");
		addEEnumLiteral(responseEncodingTypeEEnum, ResponseEncodingType.DEFAULT);
		addEEnumLiteral(responseEncodingTypeEEnum, ResponseEncodingType.UTF8);
		addEEnumLiteral(responseEncodingTypeEEnum, ResponseEncodingType.UTF16);

		initEEnum(retentionModesEEnum, RetentionModes.class, "RetentionModes");
		addEEnumLiteral(retentionModesEEnum, RetentionModes.ALLOW_SINGLE_EVENT_LOSS);
		addEEnumLiteral(retentionModesEEnum, RetentionModes.ALLOW_MULTIPLE_EVENT_LOSS);
		addEEnumLiteral(retentionModesEEnum, RetentionModes.NO_EVENT_LOSS);

		initEEnum(rootMemberIfTypeEEnum, RootMemberIfType.class, "RootMemberIfType");
		addEEnumLiteral(rootMemberIfTypeEEnum, RootMemberIfType.PARENT_IS_BLANK_SELF_OR_MISSING);
		addEEnumLiteral(rootMemberIfTypeEEnum, RootMemberIfType.PARENT_IS_BLANK);
		addEEnumLiteral(rootMemberIfTypeEEnum, RootMemberIfType.PARENT_IS_SELF);
		addEEnumLiteral(rootMemberIfTypeEEnum, RootMemberIfType.PARENT_IS_MISSING);

		initEEnum(safetyOptionsTypeEEnum, SafetyOptionsType.class, "SafetyOptionsType");
		addEEnumLiteral(safetyOptionsTypeEEnum, SafetyOptionsType._0);
		addEEnumLiteral(safetyOptionsTypeEEnum, SafetyOptionsType._1);
		addEEnumLiteral(safetyOptionsTypeEEnum, SafetyOptionsType._2);
		addEEnumLiteral(safetyOptionsTypeEEnum, SafetyOptionsType._3);

		initEEnum(scopeEEnum, Scope.class, "Scope");
		addEEnumLiteral(scopeEEnum, Scope.SESSION);

		initEEnum(scriptCacheProcessingModeTypeEEnum, ScriptCacheProcessingModeType.class, "ScriptCacheProcessingModeType");
		addEEnumLiteral(scriptCacheProcessingModeTypeEEnum, ScriptCacheProcessingModeType.REGULAR);
		addEEnumLiteral(scriptCacheProcessingModeTypeEEnum, ScriptCacheProcessingModeType.LAZY);

		initEEnum(scriptErrorHandlingModeTypeEEnum, ScriptErrorHandlingModeType.class, "ScriptErrorHandlingModeType");
		addEEnumLiteral(scriptErrorHandlingModeTypeEEnum, ScriptErrorHandlingModeType.IGNORE_NONE);
		addEEnumLiteral(scriptErrorHandlingModeTypeEEnum, ScriptErrorHandlingModeType.IGNORE_ALL);

		initEEnum(securedCellValueTypeEEnum, SecuredCellValueType.class, "SecuredCellValueType");
		addEEnumLiteral(securedCellValueTypeEEnum, SecuredCellValueType._0);
		addEEnumLiteral(securedCellValueTypeEEnum, SecuredCellValueType._1);
		addEEnumLiteral(securedCellValueTypeEEnum, SecuredCellValueType._2);
		addEEnumLiteral(securedCellValueTypeEEnum, SecuredCellValueType._3);
		addEEnumLiteral(securedCellValueTypeEEnum, SecuredCellValueType._4);
		addEEnumLiteral(securedCellValueTypeEEnum, SecuredCellValueType._5);

		initEEnum(securityTypeEEnum, SecurityType.class, "SecurityType");
		addEEnumLiteral(securityTypeEEnum, SecurityType.SKIP_MEMBERSHIP);
		addEEnumLiteral(securityTypeEEnum, SecurityType.COPY_ALL);
		addEEnumLiteral(securityTypeEEnum, SecurityType.IGNORE_SECURITY);

		initEEnum(securityType1EEnum, SecurityType1.class, "SecurityType1");
		addEEnumLiteral(securityType1EEnum, SecurityType1.SKIP_MEMBERSHIP);
		addEEnumLiteral(securityType1EEnum, SecurityType1.COPY_ALL);
		addEEnumLiteral(securityType1EEnum, SecurityType1.IGNORE_SECURITY);

		initEEnum(shareDimensionStorageTypeEEnum, ShareDimensionStorageType.class, "ShareDimensionStorageType");
		addEEnumLiteral(shareDimensionStorageTypeEEnum, ShareDimensionStorageType.DISTINCT);
		addEEnumLiteral(shareDimensionStorageTypeEEnum, ShareDimensionStorageType.SHARED);

		initEEnum(sqlQueryModeTypeEEnum, SQLQueryModeType.class, "SQLQueryModeType");
		addEEnumLiteral(sqlQueryModeTypeEEnum, SQLQueryModeType.DATA);
		addEEnumLiteral(sqlQueryModeTypeEEnum, SQLQueryModeType.CALCULATED);
		addEEnumLiteral(sqlQueryModeTypeEEnum, SQLQueryModeType.INCLUDE_EMPTY);
		addEEnumLiteral(sqlQueryModeTypeEEnum, SQLQueryModeType.DATA_KEYS);

		initEEnum(stateSupportTypeEEnum, StateSupportType.class, "StateSupportType");
		addEEnumLiteral(stateSupportTypeEEnum, StateSupportType.NONE);
		addEEnumLiteral(stateSupportTypeEEnum, StateSupportType.SESSIONS);

		initEEnum(stateTypeEEnum, StateType.class, "StateType");
		addEEnumLiteral(stateTypeEEnum, StateType.PROCESSED);
		addEEnumLiteral(stateTypeEEnum, StateType.PARTIALLY_PROCESSED);
		addEEnumLiteral(stateTypeEEnum, StateType.UNPROCESSED);

		initEEnum(stateType1EEnum, StateType1.class, "StateType1");
		addEEnumLiteral(stateType1EEnum, StateType1.PROCESSED);
		addEEnumLiteral(stateType1EEnum, StateType1.UNPROCESSED);

		initEEnum(stateType2EEnum, StateType2.class, "StateType2");
		addEEnumLiteral(stateType2EEnum, StateType2.PROCESSED);
		addEEnumLiteral(stateType2EEnum, StateType2.UNPROCESSED);
		addEEnumLiteral(stateType2EEnum, StateType2.PARTIALLY_PROCESSED);

		initEEnum(stateType3EEnum, StateType3.class, "StateType3");
		addEEnumLiteral(stateType3EEnum, StateType3.PROCESSED);
		addEEnumLiteral(stateType3EEnum, StateType3.PARTIALLY_PROCESSED);
		addEEnumLiteral(stateType3EEnum, StateType3.UNPROCESSED);

		initEEnum(stateType4EEnum, StateType4.class, "StateType4");
		addEEnumLiteral(stateType4EEnum, StateType4.PROCESSED);
		addEEnumLiteral(stateType4EEnum, StateType4.UNPROCESSED);

		initEEnum(stateType5EEnum, StateType5.class, "StateType5");
		addEEnumLiteral(stateType5EEnum, StateType5.PROCESSED);
		addEEnumLiteral(stateType5EEnum, StateType5.UNPROCESSED);

		initEEnum(stateType6EEnum, StateType6.class, "StateType6");
		addEEnumLiteral(stateType6EEnum, StateType6.PROCESSED);
		addEEnumLiteral(stateType6EEnum, StateType6.PARTIALLY_PROCESSED);
		addEEnumLiteral(stateType6EEnum, StateType6.UNPROCESSED);

		initEEnum(storageModeType1EEnum, StorageModeType1.class, "StorageModeType1");
		addEEnumLiteral(storageModeType1EEnum, StorageModeType1.MOLAP);
		addEEnumLiteral(storageModeType1EEnum, StorageModeType1.ROLAP);
		addEEnumLiteral(storageModeType1EEnum, StorageModeType1.IN_MEMORY);

		initEEnum(synchronizeSecurityTypeEEnum, SynchronizeSecurityType.class, "SynchronizeSecurityType");
		addEEnumLiteral(synchronizeSecurityTypeEEnum, SynchronizeSecurityType.SKIP_MEMBERSHIP);
		addEEnumLiteral(synchronizeSecurityTypeEEnum, SynchronizeSecurityType.COPY_ALL);
		addEEnumLiteral(synchronizeSecurityTypeEEnum, SynchronizeSecurityType.IGNORE_SECURITY);

		initEEnum(targetTypeTypeEEnum, TargetTypeType.class, "TargetTypeType");
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.CUBE);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.CELLS);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.SET);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.HIERARCHY);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.LEVEL);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.DIMENSION_MEMBERS);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.HIERARCHY_MEMBERS);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.LEVEL_MEMBERS);
		addEEnumLiteral(targetTypeTypeEEnum, TargetTypeType.ATTRIBUTE_MEMBERS);

		initEEnum(targetTypeType1EEnum, TargetTypeType1.class, "TargetTypeType1");
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.CUBE);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.CELLS);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.SET);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.HIERARCHY);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.LEVEL);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.DIMENSION_MEMBERS);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.HIERARCHY_MEMBERS);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.LEVEL_MEMBERS);
		addEEnumLiteral(targetTypeType1EEnum, TargetTypeType1.ATTRIBUTE_MEMBERS);

		initEEnum(targetTypeType2EEnum, TargetTypeType2.class, "TargetTypeType2");
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.CUBE);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.CELLS);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.SET);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.HIERARCHY);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.LEVEL);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.DIMENSION_MEMBERS);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.HIERARCHY_MEMBERS);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.LEVEL_MEMBERS);
		addEEnumLiteral(targetTypeType2EEnum, TargetTypeType2.ATTRIBUTE_MEMBERS);

		initEEnum(trimmingTypeEEnum, TrimmingType.class, "TrimmingType");
		addEEnumLiteral(trimmingTypeEEnum, TrimmingType.LEFT);
		addEEnumLiteral(trimmingTypeEEnum, TrimmingType.RIGHT);
		addEEnumLiteral(trimmingTypeEEnum, TrimmingType.LEFT_RIGHT);
		addEEnumLiteral(trimmingTypeEEnum, TrimmingType.NONE);

		initEEnum(typeTypeEEnum, TypeType.class, "TypeType");
		addEEnumLiteral(typeTypeEEnum, TypeType.DATA);
		addEEnumLiteral(typeTypeEEnum, TypeType.WRITEBACK);

		initEEnum(typeType1EEnum, TypeType1.class, "TypeType1");
		addEEnumLiteral(typeType1EEnum, TypeType1.ALL);
		addEEnumLiteral(typeType1EEnum, TypeType1.KEY);
		addEEnumLiteral(typeType1EEnum, TypeType1.NAME);
		addEEnumLiteral(typeType1EEnum, TypeType1.VALUE);
		addEEnumLiteral(typeType1EEnum, TypeType1.TRANSLATION);
		addEEnumLiteral(typeType1EEnum, TypeType1.UNARY_OPERATOR);
		addEEnumLiteral(typeType1EEnum, TypeType1.SKIPPED_LEVELS);
		addEEnumLiteral(typeType1EEnum, TypeType1.CUSTOM_ROLLUP);
		addEEnumLiteral(typeType1EEnum, TypeType1.CUSTOM_ROLLUP_PROPERTIES);

		initEEnum(typeType2EEnum, TypeType2.class, "TypeType2");
		addEEnumLiteral(typeType2EEnum, TypeType2.MAIN);
		addEEnumLiteral(typeType2EEnum, TypeType2.DEPENDENT);
		addEEnumLiteral(typeType2EEnum, TypeType2.DEBUG);

		initEEnum(typeType3EEnum, TypeType3.class, "TypeType3");
		addEEnumLiteral(typeType3EEnum, TypeType3.REGULAR);
		addEEnumLiteral(typeType3EEnum, TypeType3.TIME);
		addEEnumLiteral(typeType3EEnum, TypeType3.GEOGRAPHY);
		addEEnumLiteral(typeType3EEnum, TypeType3.ORGANIZATION);
		addEEnumLiteral(typeType3EEnum, TypeType3.BILL_OF_MATERIALS);
		addEEnumLiteral(typeType3EEnum, TypeType3.ACCOUNTS);
		addEEnumLiteral(typeType3EEnum, TypeType3.CUSTOMERS);
		addEEnumLiteral(typeType3EEnum, TypeType3.PRODUCTS);
		addEEnumLiteral(typeType3EEnum, TypeType3.SCENARIO);
		addEEnumLiteral(typeType3EEnum, TypeType3.QUANTITATIVE);
		addEEnumLiteral(typeType3EEnum, TypeType3.UTILITY);
		addEEnumLiteral(typeType3EEnum, TypeType3.CURRENCY);
		addEEnumLiteral(typeType3EEnum, TypeType3.RATES);
		addEEnumLiteral(typeType3EEnum, TypeType3.CHANNEL);
		addEEnumLiteral(typeType3EEnum, TypeType3.PROMOTION);

		initEEnum(typeType4EEnum, TypeType4.class, "TypeType4");
		addEEnumLiteral(typeType4EEnum, TypeType4.URL);
		addEEnumLiteral(typeType4EEnum, TypeType4.HTML);
		addEEnumLiteral(typeType4EEnum, TypeType4.STATEMENT);
		addEEnumLiteral(typeType4EEnum, TypeType4.DRILL_THROUGH);
		addEEnumLiteral(typeType4EEnum, TypeType4.DATASET);
		addEEnumLiteral(typeType4EEnum, TypeType4.ROWSET);
		addEEnumLiteral(typeType4EEnum, TypeType4.COMMAND_LINE);
		addEEnumLiteral(typeType4EEnum, TypeType4.PROPRIETARY);
		addEEnumLiteral(typeType4EEnum, TypeType4.REPORT);

		initEEnum(typeType5EEnum, TypeType5.class, "TypeType5");
		addEEnumLiteral(typeType5EEnum, TypeType5.ALL);
		addEEnumLiteral(typeType5EEnum, TypeType5.KEY);
		addEEnumLiteral(typeType5EEnum, TypeType5.NAME);
		addEEnumLiteral(typeType5EEnum, TypeType5.VALUE);
		addEEnumLiteral(typeType5EEnum, TypeType5.TRANSLATION);
		addEEnumLiteral(typeType5EEnum, TypeType5.UNARY_OPERATOR);
		addEEnumLiteral(typeType5EEnum, TypeType5.SKIPPED_LEVELS);
		addEEnumLiteral(typeType5EEnum, TypeType5.CUSTOM_ROLLUP);
		addEEnumLiteral(typeType5EEnum, TypeType5.CUSTOM_ROLLUP_PROPERTIES);

		initEEnum(typeType7EEnum, TypeType7.class, "TypeType7");
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_FULL);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_ADD);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_UPDATE);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_INDEXES);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_SCRIPT_CACHE);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_DATA);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_DEFAULT);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_CLEAR);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_STRUCTURE);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_CLEAR_STRUCTURE_ONLY);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_CLEAR_INDEXES);
		addEEnumLiteral(typeType7EEnum, TypeType7.PROCESS_DEFRAG);

		initEEnum(typeType8EEnum, TypeType8.class, "TypeType8");
		addEEnumLiteral(typeType8EEnum, TypeType8.LONG);
		addEEnumLiteral(typeType8EEnum, TypeType8.BOOLEAN);
		addEEnumLiteral(typeType8EEnum, TypeType8.TEXT);
		addEEnumLiteral(typeType8EEnum, TypeType8.DOUBLE);
		addEEnumLiteral(typeType8EEnum, TypeType8.DATE);
		addEEnumLiteral(typeType8EEnum, TypeType8.TABLE);

		initEEnum(typeType9EEnum, TypeType9.class, "TypeType9");
		addEEnumLiteral(typeType9EEnum, TypeType9.URL);
		addEEnumLiteral(typeType9EEnum, TypeType9.HTML);
		addEEnumLiteral(typeType9EEnum, TypeType9.STATEMENT);
		addEEnumLiteral(typeType9EEnum, TypeType9.DRILL_THROUGH);
		addEEnumLiteral(typeType9EEnum, TypeType9.DATASET);
		addEEnumLiteral(typeType9EEnum, TypeType9.ROWSET);
		addEEnumLiteral(typeType9EEnum, TypeType9.COMMAND_LINE);
		addEEnumLiteral(typeType9EEnum, TypeType9.PROPRIETARY);
		addEEnumLiteral(typeType9EEnum, TypeType9.REPORT);

		initEEnum(typeType10EEnum, TypeType10.class, "TypeType10");
		addEEnumLiteral(typeType10EEnum, TypeType10.URL);
		addEEnumLiteral(typeType10EEnum, TypeType10.HTML);
		addEEnumLiteral(typeType10EEnum, TypeType10.STATEMENT);
		addEEnumLiteral(typeType10EEnum, TypeType10.DRILLTHROUGH);
		addEEnumLiteral(typeType10EEnum, TypeType10.DATASET);
		addEEnumLiteral(typeType10EEnum, TypeType10.ROWSET);
		addEEnumLiteral(typeType10EEnum, TypeType10.COMMAND_LINE);
		addEEnumLiteral(typeType10EEnum, TypeType10.PROPRIETARY);
		addEEnumLiteral(typeType10EEnum, TypeType10.REPORT);

		initEEnum(typeType11EEnum, TypeType11.class, "TypeType11");
		addEEnumLiteral(typeType11EEnum, TypeType11.REGULAR);
		addEEnumLiteral(typeType11EEnum, TypeType11.EXCHANGE_RATE);
		addEEnumLiteral(typeType11EEnum, TypeType11.SALES);
		addEEnumLiteral(typeType11EEnum, TypeType11.BUDGET);
		addEEnumLiteral(typeType11EEnum, TypeType11.FINANCIAL_REPORTING);
		addEEnumLiteral(typeType11EEnum, TypeType11.MARKETING);
		addEEnumLiteral(typeType11EEnum, TypeType11.INVENTORY);

		initEEnum(typeType12EEnum, TypeType12.class, "TypeType12");
		addEEnumLiteral(typeType12EEnum, TypeType12.REGULAR);
		addEEnumLiteral(typeType12EEnum, TypeType12.GRANULARITY);

		initEEnum(typeType13EEnum, TypeType13.class, "TypeType13");
		addEEnumLiteral(typeType13EEnum, TypeType13.MEMBER);
		addEEnumLiteral(typeType13EEnum, TypeType13.SET);

		initEEnum(unknownMemberEnumTypeEEnum, UnknownMemberEnumType.class, "UnknownMemberEnumType");
		addEEnumLiteral(unknownMemberEnumTypeEEnum, UnknownMemberEnumType.VISIBLE);
		addEEnumLiteral(unknownMemberEnumTypeEEnum, UnknownMemberEnumType.HIDDEN);
		addEEnumLiteral(unknownMemberEnumTypeEEnum, UnknownMemberEnumType.NONE);
		addEEnumLiteral(unknownMemberEnumTypeEEnum, UnknownMemberEnumType.AUTOMATIC_NULL);

		initEEnum(updateIsolationLevelTypeEEnum, UpdateIsolationLevelType.class, "UpdateIsolationLevelType");
		addEEnumLiteral(updateIsolationLevelTypeEEnum, UpdateIsolationLevelType._1);
		addEEnumLiteral(updateIsolationLevelTypeEEnum, UpdateIsolationLevelType._2);

		initEEnum(usageTypeEEnum, UsageType.class, "UsageType");
		addEEnumLiteral(usageTypeEEnum, UsageType.KEY);
		addEEnumLiteral(usageTypeEEnum, UsageType.INPUT);
		addEEnumLiteral(usageTypeEEnum, UsageType.PREDICT);
		addEEnumLiteral(usageTypeEEnum, UsageType.PREDICT_ONLY);

		initEEnum(usageType1EEnum, UsageType1.class, "UsageType1");
		addEEnumLiteral(usageType1EEnum, UsageType1.REGULAR);
		addEEnumLiteral(usageType1EEnum, UsageType1.KEY);
		addEEnumLiteral(usageType1EEnum, UsageType1.PARENT);

		initEEnum(valuensTypeEEnum, ValuensType.class, "ValuensType");
		addEEnumLiteral(valuensTypeEEnum, ValuensType.HTTP_SCHEMAS_MICROSOFT_COM_ANALYSISSERVICES2010_ENGINE200200);

		initEEnum(valuensType1EEnum, ValuensType1.class, "ValuensType1");
		addEEnumLiteral(valuensType1EEnum, ValuensType1.HTTP_SCHEMAS_MICROSOFT_COM_ANALYSISSERVICES2010_ENGINE200200);

		initEEnum(valuensType2EEnum, ValuensType2.class, "ValuensType2");
		addEEnumLiteral(valuensType2EEnum, ValuensType2.HTTP_SCHEMAS_MICROSOFT_COM_ANALYSISSERVICES2010_ENGINE200200);

		initEEnum(valuensType3EEnum, ValuensType3.class, "ValuensType3");
		addEEnumLiteral(valuensType3EEnum, ValuensType3.HTTP_SCHEMAS_MICROSOFT_COM_ANALYSISSERVICES2010_ENGINE200200);

		initEEnum(valuensType4EEnum, ValuensType4.class, "ValuensType4");
		addEEnumLiteral(valuensType4EEnum, ValuensType4.HTTP_SCHEMAS_MICROSOFT_COM_ANALYSISSERVICES2010_ENGINE200200);

		initEEnum(valuensType5EEnum, ValuensType5.class, "ValuensType5");
		addEEnumLiteral(valuensType5EEnum, ValuensType5.HTTP_SCHEMAS_MICROSOFT_COM_ANALYSISSERVICES2010_ENGINE200200);

		initEEnum(valuensType6EEnum, ValuensType6.class, "ValuensType6");
		addEEnumLiteral(valuensType6EEnum, ValuensType6.HTTP_SCHEMAS_MICROSOFT_COM_ANALYSISSERVICES2010_ENGINE200200);

		initEEnum(visibilityTypeEEnum, VisibilityType.class, "VisibilityType");
		addEEnumLiteral(visibilityTypeEEnum, VisibilityType.SCHEMA_ROWSET);
		addEEnumLiteral(visibilityTypeEEnum, VisibilityType.NONE);

		initEEnum(visualModeTypeEEnum, VisualModeType.class, "VisualModeType");
		addEEnumLiteral(visualModeTypeEEnum, VisualModeType._0);
		addEEnumLiteral(visualModeTypeEEnum, VisualModeType._1);
		addEEnumLiteral(visualModeTypeEEnum, VisualModeType._2);

		initEEnum(writeBackTableCreationEEnum, WriteBackTableCreation.class, "WriteBackTableCreation");
		addEEnumLiteral(writeBackTableCreationEEnum, WriteBackTableCreation.CREATE);
		addEEnumLiteral(writeBackTableCreationEEnum, WriteBackTableCreation.CREATE_ALWAYS);
		addEEnumLiteral(writeBackTableCreationEEnum, WriteBackTableCreation.USE_EXISTING);

		initEEnum(writeTypeEEnum, WriteType.class, "WriteType");
		addEEnumLiteral(writeTypeEEnum, WriteType.NONE);

		initEEnum(writeType1EEnum, WriteType1.class, "WriteType1");
		addEEnumLiteral(writeType1EEnum, WriteType1.NONE);
		addEEnumLiteral(writeType1EEnum, WriteType1.ALLOWED);

		initEEnum(writeType2EEnum, WriteType2.class, "WriteType2");
		addEEnumLiteral(writeType2EEnum, WriteType2.NONE);
		addEEnumLiteral(writeType2EEnum, WriteType2.ALLOWED);

		initEEnum(writeType3EEnum, WriteType3.class, "WriteType3");
		addEEnumLiteral(writeType3EEnum, WriteType3.NONE);
		addEEnumLiteral(writeType3EEnum, WriteType3.ALLOWED);

		initEEnum(writeType4EEnum, WriteType4.class, "WriteType4");
		addEEnumLiteral(writeType4EEnum, WriteType4.NONE);

		initEEnum(writeType5EEnum, WriteType5.class, "WriteType5");
		addEEnumLiteral(writeType5EEnum, WriteType5.NONE);

		initEEnum(writeType6EEnum, WriteType6.class, "WriteType6");
		addEEnumLiteral(writeType6EEnum, WriteType6.NONE);
		addEEnumLiteral(writeType6EEnum, WriteType6.ALLOWED);

		// Initialize data types
		initEDataType(accessTypeObjectEDataType, AccessType.class, "AccessTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(aggregateFunctionTypeObjectEDataType, AggregateFunctionType.class, "AggregateFunctionTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(aggregationFunctionTypeObjectEDataType, AggregationFunctionType.class, "AggregationFunctionTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(aggregationStorageTypeObjectEDataType, AggregationStorageType.class, "AggregationStorageTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(aggregationTypeTypeObjectEDataType, AggregationTypeType.class, "AggregationTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(aggregationUsageTypeObjectEDataType, AggregationUsageType.class, "AggregationUsageTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(algorithmTypeObjectEDataType, AlgorithmType.class, "AlgorithmTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(allMemberAggregationUsageTypeObjectEDataType, AllMemberAggregationUsageType.class, "AllMemberAggregationUsageTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(attributeHierarchyOptimizedStateTypeObjectEDataType, AttributeHierarchyOptimizedStateType.class, "AttributeHierarchyOptimizedStateTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(attributeHierarchyOptimizedStateTypeObject1EDataType, AttributeHierarchyOptimizedStateType1.class, "AttributeHierarchyOptimizedStateTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(axisFormatTypeObjectEDataType, AxisFormatType.class, "AxisFormatTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(cacheModeTypeObjectEDataType, CacheModeType.class, "CacheModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(calculationTypeTypeObjectEDataType, CalculationTypeType.class, "CalculationTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(cardinalityTypeObjectEDataType, CardinalityType.class, "CardinalityTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(cardinalityTypeObject1EDataType, CardinalityType1.class, "CardinalityTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(catalogLocationTypeObjectEDataType, CatalogLocationType.class, "CatalogLocationTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(connectionStringSecurityTypeObjectEDataType, ConnectionStringSecurityType.class, "ConnectionStringSecurityTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(contentTypeObjectEDataType, ContentType.class, "ContentTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(contentTypeObject1EDataType, ContentType1.class, "ContentTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(cubeStorageModeEnumTypeObjectEDataType, CubeStorageModeEnumType.class, "CubeStorageModeEnumTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dataAggregationTypeObjectEDataType, DataAggregationType.class, "DataAggregationTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dataTypeTypeObjectEDataType, DataTypeType.class, "DataTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dataTypeTypeObject1EDataType, DataTypeType1.class, "DataTypeTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropConcatNullBehaviorTypeObjectEDataType, DbpropConcatNullBehaviorType.class, "DbpropConcatNullBehaviorTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropMsmdAutoExistsTypeObjectEDataType, DbpropMsmdAutoExistsType.class, "DbpropMsmdAutoExistsTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropMsmdCompareCaseSensitiveStringFlagsTypeObjectEDataType, DbpropMsmdCompareCaseSensitiveStringFlagsType.class, "DbpropMsmdCompareCaseSensitiveStringFlagsTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropMsmdMDXCompatibilityTypeObjectEDataType, DbpropMsmdMDXCompatibilityType.class, "DbpropMsmdMDXCompatibilityTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropMsmdSubqueriesTypeObjectEDataType, DbpropMsmdSubqueriesType.class, "DbpropMsmdSubqueriesTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropNullCollationTypeObjectEDataType, DbpropNullCollationType.class, "DbpropNullCollationTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropOutputParameterAvailableTypeObjectEDataType, DbpropOutputParameterAvailableType.class, "DbpropOutputParameterAvailableTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropPersistentIdTypeTypeObjectEDataType, DbpropPersistentIdTypeType.class, "DbpropPersistentIdTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropPrepareAbortBehaviorTypeObjectEDataType, DbpropPrepareAbortBehaviorType.class, "DbpropPrepareAbortBehaviorTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropPrepareCommitBehaviorTypeObjectEDataType, DbpropPrepareCommitBehaviorType.class, "DbpropPrepareCommitBehaviorTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dbpropQuotedIdentifierCaseTypeObjectEDataType, DbpropQuotedIdentifierCaseType.class, "DbpropQuotedIdentifierCaseTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dialectTypeObjectEDataType, DialectType.class, "DialectTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dimensionAttributeTypeEnumTypeObjectEDataType, DimensionAttributeTypeEnumType.class, "DimensionAttributeTypeEnumTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(dimensionCurrentStorageModeEnumTypeObjectEDataType, DimensionCurrentStorageModeEnumType.class, "DimensionCurrentStorageModeEnumTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(discretizationMethodTypeObjectEDataType, DiscretizationMethodType.class, "DiscretizationMethodTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(durabilityGuaranteeTypeObjectEDataType, DurabilityGuaranteeType.class, "DurabilityGuaranteeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(editionTypeObjectEDataType, EditionType.class, "EditionTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(firstDayOfWeekTypeEDataType, BigInteger.class, "FirstDayOfWeekType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(fiscalFirstDayOfMonthTypeEDataType, BigInteger.class, "FiscalFirstDayOfMonthType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(fiscalFirstMonthTypeEDataType, BigInteger.class, "FiscalFirstMonthType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(fiscalYearNameTypeObjectEDataType, FiscalYearNameType.class, "FiscalYearNameTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(formatTypeObjectEDataType, FormatType.class, "FormatTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(formatTypeObject1EDataType, FormatType1.class, "FormatTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(groupingBehaviorTypeObjectEDataType, GroupingBehaviorType.class, "GroupingBehaviorTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(hideMemberIfTypeObjectEDataType, HideMemberIfType.class, "HideMemberIfTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(hierarchyUniqueNameStyleTypeObjectEDataType, HierarchyUniqueNameStyleType.class, "HierarchyUniqueNameStyleTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(idTypeEDataType, String.class, "IDType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(idType1EDataType, String.class, "IDType1", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(instanceSelectionTypeObjectEDataType, InstanceSelectionType.class, "InstanceSelectionTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(invalidXmlCharactersTypeObjectEDataType, InvalidXmlCharactersType.class, "InvalidXmlCharactersTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(invocationTypeObjectEDataType, InvocationType.class, "InvocationTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(invocationTypeObject1EDataType, InvocationType1.class, "InvocationTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(invocationTypeObject2EDataType, InvocationType2.class, "InvocationTypeObject2", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(isolationTypeObjectEDataType, IsolationType.class, "IsolationTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(keyDuplicateTypeObjectEDataType, KeyDuplicateType.class, "KeyDuplicateTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(keyErrorActionTypeObjectEDataType, KeyErrorActionType.class, "KeyErrorActionTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(keyErrorLimitActionTypeObjectEDataType, KeyErrorLimitActionType.class, "KeyErrorLimitActionTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(keyNotFoundTypeObjectEDataType, KeyNotFoundType.class, "KeyNotFoundTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(manufacturingExtraMonthQuarterTypeEDataType, BigInteger.class, "ManufacturingExtraMonthQuarterType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(manufacturingFirstMonthTypeEDataType, BigInteger.class, "ManufacturingFirstMonthType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(manufacturingFirstWeekOfMonthTypeEDataType, BigInteger.class, "ManufacturingFirstWeekOfMonthType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(materializationTypeObjectEDataType, MaterializationType.class, "MaterializationTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdpropAggregateCellUpdateTypeObjectEDataType, MdpropAggregateCellUpdateType.class, "MdpropAggregateCellUpdateTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdpropFlatteningSupportTypeObjectEDataType, MdpropFlatteningSupportType.class, "MdpropFlatteningSupportTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdpropMdxNonMeasureExpressionsTypeObjectEDataType, MdpropMdxNonMeasureExpressionsType.class, "MdpropMdxNonMeasureExpressionsTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdpropMdxRangeRowsetTypeObjectEDataType, MdpropMdxRangeRowsetType.class, "MdpropMdxRangeRowsetTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdpropMdxSlicerTypeObjectEDataType, MdpropMdxSlicerType.class, "MdpropMdxSlicerTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdxMissingMemberModeTypeObjectEDataType, MdxMissingMemberModeType.class, "MdxMissingMemberModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdxMissingMemberModeTypeObject1EDataType, MdxMissingMemberModeType1.class, "MdxMissingMemberModeTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(mdxSupportTypeObjectEDataType, MDXSupportType.class, "MDXSupportTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(measureGroupStorageModeEnumTypeObjectEDataType, MeasureGroupStorageModeEnumType.class, "MeasureGroupStorageModeEnumTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(membersWithDataTypeObjectEDataType, MembersWithDataType.class, "MembersWithDataTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(memberUniqueNameStyleTypeObjectEDataType, MemberUniqueNameStyleType.class, "MemberUniqueNameStyleTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(memoryLockingModeTypeObjectEDataType, MemoryLockingModeType.class, "MemoryLockingModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(modeTypeObjectEDataType, ModeType.class, "ModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(notificationTechniqueTypeObjectEDataType, NotificationTechniqueType.class, "NotificationTechniqueTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(notificationTechniqueTypeObject1EDataType, NotificationTechniqueType1.class, "NotificationTechniqueTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(nullKeyConvertedToUnknownTypeObjectEDataType, NullKeyConvertedToUnknownType.class, "NullKeyConvertedToUnknownTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(nullKeyNotAllowedTypeObjectEDataType, NullKeyNotAllowedType.class, "NullKeyNotAllowedTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(nullProcessingTypeObjectEDataType, NullProcessingType.class, "NullProcessingTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(objectExpansionObjectEDataType, ObjectExpansion.class, "ObjectExpansionObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(onlineModeTypeObjectEDataType, OnlineModeType.class, "OnlineModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(optimizedStateTypeObjectEDataType, OptimizedStateType.class, "OptimizedStateTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(optionalityTypeObjectEDataType, OptionalityType.class, "OptionalityTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(orderByTypeObjectEDataType, OrderByType.class, "OrderByTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(overrideBehaviorTypeObjectEDataType, OverrideBehaviorType.class, "OverrideBehaviorTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(parameterTypeObjectEDataType, ParameterType.class, "ParameterTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(parameterTypeObject1EDataType, ParameterType1.class, "ParameterTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(partitionCurrentStorageModeEnumTypeObjectEDataType, PartitionCurrentStorageModeEnumType.class, "PartitionCurrentStorageModeEnumTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(partitionModesObjectEDataType, PartitionModes.class, "PartitionModesObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(partitionStorageModeEnumTypeObjectEDataType, PartitionStorageModeEnumType.class, "PartitionStorageModeEnumTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(permissionSetTypeObjectEDataType, PermissionSetType.class, "PermissionSetTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(persistenceTypeObjectEDataType, PersistenceType.class, "PersistenceTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(persistenceTypeObject1EDataType, PersistenceType1.class, "PersistenceTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(processingGroupTypeObjectEDataType, ProcessingGroupType.class, "ProcessingGroupTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(processingModeTypeObjectEDataType, ProcessingModeType.class, "ProcessingModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(processingModeTypeObject1EDataType, ProcessingModeType2.class, "ProcessingModeTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(processingModeTypeObject2EDataType, ProcessingModeType1.class, "ProcessingModeTypeObject2", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(processingModeTypeObject3EDataType, ProcessingModeType3.class, "ProcessingModeTypeObject3", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(processingStateTypeObjectEDataType, ProcessingStateType.class, "ProcessingStateTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(providerTypeTypeObjectEDataType, ProviderTypeType.class, "ProviderTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(readDefinitionTypeObjectEDataType, ReadDefinitionType.class, "ReadDefinitionTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(readSourceDataTypeObjectEDataType, ReadSourceDataType.class, "ReadSourceDataTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(readTypeObjectEDataType, ReadType.class, "ReadTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(readTypeObject1EDataType, ReadType1.class, "ReadTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(refreshPolicyTypeObjectEDataType, RefreshPolicyType.class, "RefreshPolicyTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(refreshPolicyTypeObject1EDataType, RefreshPolicyType1.class, "RefreshPolicyTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(relationshipTypeTypeObjectEDataType, RelationshipTypeType.class, "RelationshipTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(reportingFirstMonthTypeEDataType, BigInteger.class, "ReportingFirstMonthType", IS_SERIALIZABLE, !IS_GENERATED_INSTANCE_CLASS);
		initEDataType(reportingFirstWeekOfMonthTypeObjectEDataType, ReportingFirstWeekOfMonthType.class, "ReportingFirstWeekOfMonthTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(reportingWeekToMonthPatternTypeObjectEDataType, ReportingWeekToMonthPatternType.class, "ReportingWeekToMonthPatternTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(requestTypeTypeObjectEDataType, RequestTypeType.class, "RequestTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(responseEncodingTypeObjectEDataType, ResponseEncodingType.class, "ResponseEncodingTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(retentionModesObjectEDataType, RetentionModes.class, "RetentionModesObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(rootMemberIfTypeObjectEDataType, RootMemberIfType.class, "RootMemberIfTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(safetyOptionsTypeObjectEDataType, SafetyOptionsType.class, "SafetyOptionsTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(scopeObjectEDataType, Scope.class, "ScopeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(scriptCacheProcessingModeTypeObjectEDataType, ScriptCacheProcessingModeType.class, "ScriptCacheProcessingModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(scriptErrorHandlingModeTypeObjectEDataType, ScriptErrorHandlingModeType.class, "ScriptErrorHandlingModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(securedCellValueTypeObjectEDataType, SecuredCellValueType.class, "SecuredCellValueTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(securityTypeObjectEDataType, SecurityType.class, "SecurityTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(securityTypeObject1EDataType, SecurityType1.class, "SecurityTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(shareDimensionStorageTypeObjectEDataType, ShareDimensionStorageType.class, "ShareDimensionStorageTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(sqlQueryModeTypeObjectEDataType, SQLQueryModeType.class, "SQLQueryModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateSupportTypeObjectEDataType, StateSupportType.class, "StateSupportTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateTypeObjectEDataType, StateType.class, "StateTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateTypeObject1EDataType, StateType4.class, "StateTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateTypeObject2EDataType, StateType5.class, "StateTypeObject2", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateTypeObject3EDataType, StateType1.class, "StateTypeObject3", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateTypeObject4EDataType, StateType3.class, "StateTypeObject4", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateTypeObject5EDataType, StateType2.class, "StateTypeObject5", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(stateTypeObject6EDataType, StateType6.class, "StateTypeObject6", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(storageModeTypeObjectEDataType, StorageModeType1.class, "StorageModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(synchronizeSecurityTypeObjectEDataType, SynchronizeSecurityType.class, "SynchronizeSecurityTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(targetTypeTypeObjectEDataType, TargetTypeType1.class, "TargetTypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(targetTypeTypeObject1EDataType, TargetTypeType.class, "TargetTypeTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(targetTypeTypeObject2EDataType, TargetTypeType2.class, "TargetTypeTypeObject2", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(trimmingTypeObjectEDataType, TrimmingType.class, "TrimmingTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObjectEDataType, TypeType4.class, "TypeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject1EDataType, TypeType5.class, "TypeTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject2EDataType, TypeType2.class, "TypeTypeObject2", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject3EDataType, TypeType1.class, "TypeTypeObject3", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject4EDataType, TypeType12.class, "TypeTypeObject4", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject5EDataType, TypeType.class, "TypeTypeObject5", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject6EDataType, TypeType3.class, "TypeTypeObject6", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject7EDataType, TypeType9.class, "TypeTypeObject7", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject8EDataType, TypeType8.class, "TypeTypeObject8", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject9EDataType, TypeType7.class, "TypeTypeObject9", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject10EDataType, TypeType10.class, "TypeTypeObject10", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject11EDataType, TypeType11.class, "TypeTypeObject11", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(typeTypeObject12EDataType, TypeType13.class, "TypeTypeObject12", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(unknownMemberEnumTypeObjectEDataType, UnknownMemberEnumType.class, "UnknownMemberEnumTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(updateIsolationLevelTypeObjectEDataType, UpdateIsolationLevelType.class, "UpdateIsolationLevelTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(usageTypeObjectEDataType, UsageType.class, "UsageTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(usageTypeObject1EDataType, UsageType1.class, "UsageTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(valuensTypeObjectEDataType, ValuensType1.class, "ValuensTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(valuensTypeObject1EDataType, ValuensType2.class, "ValuensTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(valuensTypeObject2EDataType, ValuensType.class, "ValuensTypeObject2", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(valuensTypeObject3EDataType, ValuensType4.class, "ValuensTypeObject3", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(valuensTypeObject4EDataType, ValuensType3.class, "ValuensTypeObject4", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(valuensTypeObject5EDataType, ValuensType5.class, "ValuensTypeObject5", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(valuensTypeObject6EDataType, ValuensType6.class, "ValuensTypeObject6", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(visibilityTypeObjectEDataType, VisibilityType.class, "VisibilityTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(visualModeTypeObjectEDataType, VisualModeType.class, "VisualModeTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeBackTableCreationObjectEDataType, WriteBackTableCreation.class, "WriteBackTableCreationObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeTypeObjectEDataType, WriteType.class, "WriteTypeObject", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeTypeObject1EDataType, WriteType2.class, "WriteTypeObject1", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeTypeObject2EDataType, WriteType4.class, "WriteTypeObject2", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeTypeObject3EDataType, WriteType1.class, "WriteTypeObject3", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeTypeObject4EDataType, WriteType5.class, "WriteTypeObject4", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeTypeObject5EDataType, WriteType3.class, "WriteTypeObject5", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);
		initEDataType(writeTypeObject6EDataType, WriteType6.class, "WriteTypeObject6", IS_SERIALIZABLE, IS_GENERATED_INSTANCE_CLASS);

		// Create resource
		createResource(eNS_URI);

		// Create annotations
		// https://jakarta.ee/xml/ns/jaxb
		createJaxbAnnotations();
		// http:///org/eclipse/emf/ecore/util/ExtendedMetaData
		createExtendedMetaDataAnnotations();
	}

	/**
	 * Initializes the annotations for <b>https://jakarta.ee/xml/ns/jaxb</b>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void createJaxbAnnotations() {
		String source = "https://jakarta.ee/xml/ns/jaxb";
		addAnnotation
		  (this,
		   source,
		   new String[] {
			   "version", "3.0"
		   });
	}

	/**
	 * Initializes the annotations for <b>http:///org/eclipse/emf/ecore/util/ExtendedMetaData</b>.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected void createExtendedMetaDataAnnotations() {
		String source = "http:///org/eclipse/emf/ecore/util/ExtendedMetaData";
		addAnnotation
		  (accessTypeEEnum,
		   source,
		   new String[] {
			   "name", "Access_._type"
		   });
		addAnnotation
		  (accessTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Access_._type:Object",
			   "baseType", "Access_._type"
		   });
		addAnnotation
		  (accountEClass,
		   source,
		   new String[] {
			   "name", "Account",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAccount_AccountType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AccountType"
		   });
		addAnnotation
		  (getAccount_AggregationFunction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationFunction"
		   });
		addAnnotation
		  (getAccount_Aliases(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Aliases"
		   });
		addAnnotation
		  (getAccount_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (accountsTypeEClass,
		   source,
		   new String[] {
			   "name", "Accounts_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAccountsType_Account(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Account"
		   });
		addAnnotation
		  (actionEClass,
		   source,
		   new String[] {
			   "name", "Action",
			   "kind", "empty"
		   });
		addAnnotation
		  (actionsTypeEClass,
		   source,
		   new String[] {
			   "name", "Actions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getActionsType_Action(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Action"
		   });
		addAnnotation
		  (actionsType1EClass,
		   source,
		   new String[] {
			   "name", "Actions_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getActionsType1_Action(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Action"
		   });
		addAnnotation
		  (actionTypeEClass,
		   source,
		   new String[] {
			   "name", "action_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getActionType_Module(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "module"
		   });
		addAnnotation
		  (getActionType_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getActionType_Package(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "package"
		   });
		addAnnotation
		  (aggregateFunctionTypeEEnum,
		   source,
		   new String[] {
			   "name", "AggregateFunction_._type"
		   });
		addAnnotation
		  (aggregateFunctionTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AggregateFunction_._type:Object",
			   "baseType", "AggregateFunction_._type"
		   });
		addAnnotation
		  (aggregationEClass,
		   source,
		   new String[] {
			   "name", "Aggregation",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregation_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getAggregation_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAggregation_Dimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimensions"
		   });
		addAnnotation
		  (getAggregation_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getAggregation_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (aggregationAttributeEClass,
		   source,
		   new String[] {
			   "name", "AggregationAttribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationAttribute_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getAggregationAttribute_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (aggregationDesignEClass,
		   source,
		   new String[] {
			   "name", "AggregationDesign",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationDesign_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAggregationDesign_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getAggregationDesign_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getAggregationDesign_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getAggregationDesign_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getAggregationDesign_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getAggregationDesign_EstimatedRows(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedRows"
		   });
		addAnnotation
		  (getAggregationDesign_Dimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimensions"
		   });
		addAnnotation
		  (getAggregationDesign_Aggregations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Aggregations"
		   });
		addAnnotation
		  (getAggregationDesign_EstimatedPerformanceGain(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedPerformanceGain"
		   });
		addAnnotation
		  (aggregationDesignAttributeEClass,
		   source,
		   new String[] {
			   "name", "AggregationDesignAttribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationDesignAttribute_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getAggregationDesignAttribute_EstimatedCount(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedCount"
		   });
		addAnnotation
		  (aggregationDesignDimensionEClass,
		   source,
		   new String[] {
			   "name", "AggregationDesignDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationDesignDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getAggregationDesignDimension_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (getAggregationDesignDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (aggregationDesignsTypeEClass,
		   source,
		   new String[] {
			   "name", "AggregationDesigns_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationDesignsType_AggregationDesign(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationDesign"
		   });
		addAnnotation
		  (aggregationDimensionEClass,
		   source,
		   new String[] {
			   "name", "AggregationDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getAggregationDimension_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (getAggregationDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (aggregationFunctionTypeEEnum,
		   source,
		   new String[] {
			   "name", "AggregationFunction_._type"
		   });
		addAnnotation
		  (aggregationFunctionTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AggregationFunction_._type:Object",
			   "baseType", "AggregationFunction_._type"
		   });
		addAnnotation
		  (aggregationInstanceEClass,
		   source,
		   new String[] {
			   "name", "AggregationInstance",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationInstance_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getAggregationInstance_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAggregationInstance_AggregationType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationType"
		   });
		addAnnotation
		  (getAggregationInstance_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getAggregationInstance_Dimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimensions"
		   });
		addAnnotation
		  (getAggregationInstance_Measures(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Measures"
		   });
		addAnnotation
		  (getAggregationInstance_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getAggregationInstance_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (aggregationInstanceAttributeEClass,
		   source,
		   new String[] {
			   "name", "AggregationInstanceAttribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationInstanceAttribute_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getAggregationInstanceAttribute_KeyColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumns"
		   });
		addAnnotation
		  (aggregationInstanceDimensionEClass,
		   source,
		   new String[] {
			   "name", "AggregationInstanceDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationInstanceDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getAggregationInstanceDimension_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (aggregationInstanceMeasureEClass,
		   source,
		   new String[] {
			   "name", "AggregationInstanceMeasure",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationInstanceMeasure_MeasureID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureID"
		   });
		addAnnotation
		  (getAggregationInstanceMeasure_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (aggregationInstancesTypeEClass,
		   source,
		   new String[] {
			   "name", "AggregationInstances_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationInstancesType_AggregationInstance(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationInstance"
		   });
		addAnnotation
		  (aggregationStorageTypeEEnum,
		   source,
		   new String[] {
			   "name", "AggregationStorage_._type"
		   });
		addAnnotation
		  (aggregationStorageTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AggregationStorage_._type:Object",
			   "baseType", "AggregationStorage_._type"
		   });
		addAnnotation
		  (aggregationsTypeEClass,
		   source,
		   new String[] {
			   "name", "Aggregations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAggregationsType_Aggregation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Aggregation"
		   });
		addAnnotation
		  (aggregationTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "AggregationType_._type"
		   });
		addAnnotation
		  (aggregationTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AggregationType_._type:Object",
			   "baseType", "AggregationType_._type"
		   });
		addAnnotation
		  (aggregationUsageTypeEEnum,
		   source,
		   new String[] {
			   "name", "AggregationUsage_._type"
		   });
		addAnnotation
		  (aggregationUsageTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AggregationUsage_._type:Object",
			   "baseType", "AggregationUsage_._type"
		   });
		addAnnotation
		  (algorithmParameterEClass,
		   source,
		   new String[] {
			   "name", "AlgorithmParameter",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAlgorithmParameter_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAlgorithmParameter_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (algorithmParametersTypeEClass,
		   source,
		   new String[] {
			   "name", "AlgorithmParameters_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAlgorithmParametersType_AlgorithmParameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AlgorithmParameter"
		   });
		addAnnotation
		  (algorithmTypeEEnum,
		   source,
		   new String[] {
			   "name", "Algorithm_._type"
		   });
		addAnnotation
		  (algorithmTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Algorithm_._type:Object",
			   "baseType", "Algorithm_._type"
		   });
		addAnnotation
		  (aliasesTypeEClass,
		   source,
		   new String[] {
			   "name", "Aliases_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAliasesType_Alias(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Alias"
		   });
		addAnnotation
		  (allMemberAggregationUsageTypeEEnum,
		   source,
		   new String[] {
			   "name", "AllMemberAggregationUsage_._type"
		   });
		addAnnotation
		  (allMemberAggregationUsageTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AllMemberAggregationUsage_._type:Object",
			   "baseType", "AllMemberAggregationUsage_._type"
		   });
		addAnnotation
		  (allMemberTranslationsTypeEClass,
		   source,
		   new String[] {
			   "name", "AllMemberTranslations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAllMemberTranslationsType_AllMemberTranslation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllMemberTranslation"
		   });
		addAnnotation
		  (alterEClass,
		   source,
		   new String[] {
			   "name", "Alter",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAlter_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getAlter_ObjectDefinition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ObjectDefinition"
		   });
		addAnnotation
		  (getAlter_AllowCreate(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "AllowCreate"
		   });
		addAnnotation
		  (getAlter_ObjectExpansion(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "ObjectExpansion"
		   });
		addAnnotation
		  (getAlter_Scope(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "Scope"
		   });
		addAnnotation
		  (andOrTypeEClass,
		   source,
		   new String[] {
			   "name", "and_or_type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAndOrType_Group(),
		   source,
		   new String[] {
			   "kind", "group",
			   "name", "group:0"
		   });
		addAnnotation
		  (getAndOrType_Not(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Not",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_Or(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Or",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_And(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "And",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_Equal(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Equal",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_NotEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotEqual",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_Less(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Less",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_LessOrEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LessOrEqual",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_Greater(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Greater",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_GreaterOrEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GreaterOrEqual",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_Like(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Like",
			   "group", "#group:0"
		   });
		addAnnotation
		  (getAndOrType_NotLike(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotLike",
			   "group", "#group:0"
		   });
		addAnnotation
		  (annotationEClass,
		   source,
		   new String[] {
			   "name", "Annotation",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAnnotation_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAnnotation_Visibility(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visibility"
		   });
		addAnnotation
		  (getAnnotation_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (annotationsTypeEClass,
		   source,
		   new String[] {
			   "name", "Annotations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAnnotationsType_Annotation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotation"
		   });
		addAnnotation
		  (assembliesTypeEClass,
		   source,
		   new String[] {
			   "name", "Assemblies_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAssembliesType_Assembly(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Assembly"
		   });
		addAnnotation
		  (assembliesType1EClass,
		   source,
		   new String[] {
			   "name", "Assemblies_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAssembliesType1_Assembly(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Assembly"
		   });
		addAnnotation
		  (assemblyEClass,
		   source,
		   new String[] {
			   "name", "Assembly",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAssembly_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getAssembly_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAssembly_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getAssembly_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getAssembly_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getAssembly_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getAssembly_ImpersonationInfo(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImpersonationInfo"
		   });
		addAnnotation
		  (attachEClass,
		   source,
		   new String[] {
			   "name", "Attach",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttach_Folder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Folder"
		   });
		addAnnotation
		  (getAttach_Password(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Password"
		   });
		addAnnotation
		  (getAttach_AllowOverwrite(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowOverwrite"
		   });
		addAnnotation
		  (getAttach_ReadWriteMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReadWriteMode",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100"
		   });
		addAnnotation
		  (attributeAllMemberTranslationsTypeEClass,
		   source,
		   new String[] {
			   "name", "AttributeAllMemberTranslations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributeAllMemberTranslationsType_MemberAllMemberTranslation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MemberAllMemberTranslation"
		   });
		addAnnotation
		  (attributeBindingEClass,
		   source,
		   new String[] {
			   "name", "AttributeBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributeBinding_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getAttributeBinding_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getAttributeBinding_Ordinal(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Ordinal"
		   });
		addAnnotation
		  (attributeHierarchyOptimizedStateTypeEEnum,
		   source,
		   new String[] {
			   "name", "AttributeHierarchyOptimizedState_._type"
		   });
		addAnnotation
		  (attributeHierarchyOptimizedStateType1EEnum,
		   source,
		   new String[] {
			   "name", "AttributeHierarchyOptimizedState_._1_._type"
		   });
		addAnnotation
		  (attributeHierarchyOptimizedStateTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AttributeHierarchyOptimizedState_._type:Object",
			   "baseType", "AttributeHierarchyOptimizedState_._type"
		   });
		addAnnotation
		  (attributeHierarchyOptimizedStateTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "AttributeHierarchyOptimizedState_._1_._type:Object",
			   "baseType", "AttributeHierarchyOptimizedState_._1_._type"
		   });
		addAnnotation
		  (attributeInsertUpdateEClass,
		   source,
		   new String[] {
			   "name", "Attribute_InsertUpdate",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_AttributeName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeName"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_Keys(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Keys"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_CUSTOMROLLUP(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CUSTOM_ROLLUP"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_CUSTOMROLLUPPROPERTIES(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CUSTOM_ROLLUP_PROPERTIES"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_UNARYOPERATOR(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UNARY_OPERATOR"
		   });
		addAnnotation
		  (getAttributeInsertUpdate_SKIPPEDLEVELS(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SKIPPED_LEVELS"
		   });
		addAnnotation
		  (attributePermissionEClass,
		   source,
		   new String[] {
			   "name", "AttributePermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributePermission_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getAttributePermission_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getAttributePermission_DefaultMember(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultMember"
		   });
		addAnnotation
		  (getAttributePermission_VisualTotals(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "VisualTotals"
		   });
		addAnnotation
		  (getAttributePermission_AllowedSet(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowedSet"
		   });
		addAnnotation
		  (getAttributePermission_DeniedSet(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DeniedSet"
		   });
		addAnnotation
		  (getAttributePermission_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (attributePermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "AttributePermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributePermissionsType_AttributePermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributePermission"
		   });
		addAnnotation
		  (attributePermissionsType1EClass,
		   source,
		   new String[] {
			   "name", "AttributePermissions_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributePermissionsType1_AttributePermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributePermission"
		   });
		addAnnotation
		  (attributeRelationshipEClass,
		   source,
		   new String[] {
			   "name", "AttributeRelationship",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributeRelationship_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getAttributeRelationship_RelationshipType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RelationshipType"
		   });
		addAnnotation
		  (getAttributeRelationship_Cardinality(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cardinality"
		   });
		addAnnotation
		  (getAttributeRelationship_Optionality(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Optionality"
		   });
		addAnnotation
		  (getAttributeRelationship_OverrideBehavior(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "OverrideBehavior"
		   });
		addAnnotation
		  (getAttributeRelationship_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getAttributeRelationship_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getAttributeRelationship_Visible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visible"
		   });
		addAnnotation
		  (getAttributeRelationship_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (attributeRelationshipsTypeEClass,
		   source,
		   new String[] {
			   "name", "AttributeRelationships_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributeRelationshipsType_AttributeRelationship(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeRelationship"
		   });
		addAnnotation
		  (attributesTypeEClass,
		   source,
		   new String[] {
			   "name", "Attributes_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType1EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType1_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType2EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._2_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType2_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType3EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._3_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType3_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType4EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._4_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType4_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType5EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._5_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType5_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType6EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._6_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType6_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType7EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._7_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType7_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributesType8EClass,
		   source,
		   new String[] {
			   "name", "Attributes_._8_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributesType8_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (attributeTranslationEClass,
		   source,
		   new String[] {
			   "name", "AttributeTranslation",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getAttributeTranslation_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getAttributeTranslation_Caption(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Caption"
		   });
		addAnnotation
		  (getAttributeTranslation_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getAttributeTranslation_DisplayFolder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisplayFolder"
		   });
		addAnnotation
		  (getAttributeTranslation_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getAttributeTranslation_CaptionColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CaptionColumn"
		   });
		addAnnotation
		  (getAttributeTranslation_MembersWithDataCaption(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MembersWithDataCaption"
		   });
		addAnnotation
		  (axisFormatTypeEEnum,
		   source,
		   new String[] {
			   "name", "AxisFormat_._type"
		   });
		addAnnotation
		  (axisFormatTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "AxisFormat_._type:Object",
			   "baseType", "AxisFormat_._type"
		   });
		addAnnotation
		  (backupEClass,
		   source,
		   new String[] {
			   "name", "Backup",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getBackup_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getBackup_File(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "File"
		   });
		addAnnotation
		  (getBackup_Security(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Security"
		   });
		addAnnotation
		  (getBackup_ApplyCompression(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ApplyCompression"
		   });
		addAnnotation
		  (getBackup_AllowOverwrite(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowOverwrite"
		   });
		addAnnotation
		  (getBackup_Password(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Password"
		   });
		addAnnotation
		  (getBackup_BackupRemotePartitions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BackupRemotePartitions"
		   });
		addAnnotation
		  (getBackup_Locations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Locations"
		   });
		addAnnotation
		  (batchEClass,
		   source,
		   new String[] {
			   "name", "Batch",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getBatch_Parallel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Parallel"
		   });
		addAnnotation
		  (getBatch_Bindings(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Bindings"
		   });
		addAnnotation
		  (getBatch_DataSource(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSource"
		   });
		addAnnotation
		  (getBatch_DataSourceView(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceView"
		   });
		addAnnotation
		  (getBatch_ErrorConfiguration(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ErrorConfiguration"
		   });
		addAnnotation
		  (getBatch_Create(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Create"
		   });
		addAnnotation
		  (getBatch_Alter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Alter"
		   });
		addAnnotation
		  (getBatch_Delete(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Delete"
		   });
		addAnnotation
		  (getBatch_Process(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Process"
		   });
		addAnnotation
		  (getBatch_MergePartitions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MergePartitions"
		   });
		addAnnotation
		  (getBatch_DesignAggregations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DesignAggregations"
		   });
		addAnnotation
		  (getBatch_NotifyTableChange(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotifyTableChange"
		   });
		addAnnotation
		  (getBatch_Insert(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Insert"
		   });
		addAnnotation
		  (getBatch_Update(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Update"
		   });
		addAnnotation
		  (getBatch_Drop(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Drop"
		   });
		addAnnotation
		  (getBatch_UpdateCells(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UpdateCells"
		   });
		addAnnotation
		  (getBatch_Backup(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Backup"
		   });
		addAnnotation
		  (getBatch_Restore(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Restore"
		   });
		addAnnotation
		  (getBatch_Synchronize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Synchronize"
		   });
		addAnnotation
		  (getBatch_Cancel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cancel"
		   });
		addAnnotation
		  (getBatch_BeginTransaction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BeginTransaction"
		   });
		addAnnotation
		  (getBatch_CommitTransaction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CommitTransaction"
		   });
		addAnnotation
		  (getBatch_RollbackTransaction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RollbackTransaction"
		   });
		addAnnotation
		  (getBatch_ClearCache(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ClearCache"
		   });
		addAnnotation
		  (getBatch_Subscribe(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Subscribe"
		   });
		addAnnotation
		  (getBatch_Unsubscribe(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Unsubscribe"
		   });
		addAnnotation
		  (getBatch_Detach(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Detach"
		   });
		addAnnotation
		  (getBatch_Attach(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attach"
		   });
		addAnnotation
		  (getBatch_Lock(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Lock"
		   });
		addAnnotation
		  (getBatch_Unlock(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Unlock"
		   });
		addAnnotation
		  (getBatch_ImageLoad(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageLoad"
		   });
		addAnnotation
		  (getBatch_ImageSave(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageSave"
		   });
		addAnnotation
		  (getBatch_CloneDatabase(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CloneDatabase"
		   });
		addAnnotation
		  (getBatch_SetAuthContext(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SetAuthContext"
		   });
		addAnnotation
		  (getBatch_DBCC(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DBCC"
		   });
		addAnnotation
		  (getBatch_Discover(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Discover",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getBatch_ProcessAffectedObjects(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "ProcessAffectedObjects"
		   });
		addAnnotation
		  (getBatch_Transaction(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "Transaction"
		   });
		addAnnotation
		  (beginSessionTypeEClass,
		   source,
		   new String[] {
			   "name", "BeginSession_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getBeginSessionType_MustUnderstand(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mustUnderstand"
		   });
		addAnnotation
		  (beginTransactionEClass,
		   source,
		   new String[] {
			   "name", "BeginTransaction",
			   "kind", "empty"
		   });
		addAnnotation
		  (bindingEClass,
		   source,
		   new String[] {
			   "name", "Binding",
			   "kind", "empty"
		   });
		addAnnotation
		  (bindingsEClass,
		   source,
		   new String[] {
			   "name", "Bindings",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getBindings_Binding(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Binding"
		   });
		addAnnotation
		  (boolBinopEClass,
		   source,
		   new String[] {
			   "name", "bool_binop",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getBoolBinop_ColumnID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ColumnID"
		   });
		addAnnotation
		  (getBoolBinop_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (booleanExprEClass,
		   source,
		   new String[] {
			   "name", "boolean_expr",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getBooleanExpr_And(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "and"
		   });
		addAnnotation
		  (getBooleanExpr_Or(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "or"
		   });
		addAnnotation
		  (getBooleanExpr_Not(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "not"
		   });
		addAnnotation
		  (getBooleanExpr_Leaf(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "leaf"
		   });
		addAnnotation
		  (getBooleanExpr_And1(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "and"
		   });
		addAnnotation
		  (getBooleanExpr_Or1(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "or"
		   });
		addAnnotation
		  (getBooleanExpr_Not1(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "not"
		   });
		addAnnotation
		  (getBooleanExpr_Leaf1(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "leaf"
		   });
		addAnnotation
		  (cacheModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "CacheMode_._type"
		   });
		addAnnotation
		  (cacheModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "CacheMode_._type:Object",
			   "baseType", "CacheMode_._type"
		   });
		addAnnotation
		  (calculatedMeasureBindingEClass,
		   source,
		   new String[] {
			   "name", "CalculatedMeasureBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCalculatedMeasureBinding_MeasureName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureName"
		   });
		addAnnotation
		  (calculationPropertiesTypeEClass,
		   source,
		   new String[] {
			   "name", "CalculationProperties_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCalculationPropertiesType_CalculationProperty(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalculationProperty"
		   });
		addAnnotation
		  (calculationPropertyEClass,
		   source,
		   new String[] {
			   "name", "CalculationProperty",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCalculationProperty_CalculationReference(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalculationReference"
		   });
		addAnnotation
		  (getCalculationProperty_CalculationType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalculationType"
		   });
		addAnnotation
		  (getCalculationProperty_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getCalculationProperty_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getCalculationProperty_Visible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visible"
		   });
		addAnnotation
		  (getCalculationProperty_SolveOrder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SolveOrder"
		   });
		addAnnotation
		  (getCalculationProperty_FormatString(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FormatString"
		   });
		addAnnotation
		  (getCalculationProperty_ForeColor(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForeColor"
		   });
		addAnnotation
		  (getCalculationProperty_BackColor(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BackColor"
		   });
		addAnnotation
		  (getCalculationProperty_FontName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FontName"
		   });
		addAnnotation
		  (getCalculationProperty_FontSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FontSize"
		   });
		addAnnotation
		  (getCalculationProperty_FontFlags(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FontFlags"
		   });
		addAnnotation
		  (getCalculationProperty_NonEmptyBehavior(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NonEmptyBehavior"
		   });
		addAnnotation
		  (getCalculationProperty_AssociatedMeasureGroupID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AssociatedMeasureGroupID"
		   });
		addAnnotation
		  (getCalculationProperty_DisplayFolder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisplayFolder"
		   });
		addAnnotation
		  (getCalculationProperty_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getCalculationProperty_VisualizationProperties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "VisualizationProperties"
		   });
		addAnnotation
		  (calculationsTypeEClass,
		   source,
		   new String[] {
			   "name", "Calculations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCalculationsType_Calculation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Calculation"
		   });
		addAnnotation
		  (calculationTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "CalculationType_._type"
		   });
		addAnnotation
		  (calculationTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "CalculationType_._type:Object",
			   "baseType", "CalculationType_._type"
		   });
		addAnnotation
		  (cancelEClass,
		   source,
		   new String[] {
			   "name", "Cancel",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCancel_ConnectionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ConnectionID"
		   });
		addAnnotation
		  (getCancel_SessionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SessionID"
		   });
		addAnnotation
		  (getCancel_SPID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SPID"
		   });
		addAnnotation
		  (getCancel_CancelAssociated(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CancelAssociated"
		   });
		addAnnotation
		  (cardinalityTypeEEnum,
		   source,
		   new String[] {
			   "name", "Cardinality_._type"
		   });
		addAnnotation
		  (cardinalityType1EEnum,
		   source,
		   new String[] {
			   "name", "Cardinality_._1_._type"
		   });
		addAnnotation
		  (cardinalityTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Cardinality_._type:Object",
			   "baseType", "Cardinality_._type"
		   });
		addAnnotation
		  (cardinalityTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Cardinality_._1_._type:Object",
			   "baseType", "Cardinality_._1_._type"
		   });
		addAnnotation
		  (catalogLocationTypeEEnum,
		   source,
		   new String[] {
			   "name", "CatalogLocation_._type"
		   });
		addAnnotation
		  (catalogLocationTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "CatalogLocation_._type:Object",
			   "baseType", "CatalogLocation_._type"
		   });
		addAnnotation
		  (cellEClass,
		   source,
		   new String[] {
			   "name", "Cell",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCell_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (getCell_CellOrdinal(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "CellOrdinal"
		   });
		addAnnotation
		  (cellPermissionEClass,
		   source,
		   new String[] {
			   "name", "CellPermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCellPermission_Access(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Access"
		   });
		addAnnotation
		  (getCellPermission_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getCellPermission_Expression(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Expression"
		   });
		addAnnotation
		  (getCellPermission_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (cellPermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "CellPermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCellPermissionsType_CellPermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CellPermission"
		   });
		addAnnotation
		  (classifiedColumnsTypeEClass,
		   source,
		   new String[] {
			   "name", "ClassifiedColumns_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getClassifiedColumnsType_ClassifiedColumnID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ClassifiedColumnID"
		   });
		addAnnotation
		  (clearCacheEClass,
		   source,
		   new String[] {
			   "name", "ClearCache",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getClearCache_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (clearResultTypeEClass,
		   source,
		   new String[] {
			   "name", "ClearResult_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getClearResultType_ResultId(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ResultId"
		   });
		addAnnotation
		  (cloneDatabaseEClass,
		   source,
		   new String[] {
			   "name", "CloneDatabase",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCloneDatabase_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getCloneDatabase_Target(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Target"
		   });
		addAnnotation
		  (clrAssemblyEClass,
		   source,
		   new String[] {
			   "name", "ClrAssembly",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getClrAssembly_Files(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Files"
		   });
		addAnnotation
		  (getClrAssembly_PermissionSet(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PermissionSet"
		   });
		addAnnotation
		  (clrAssemblyFileEClass,
		   source,
		   new String[] {
			   "name", "ClrAssemblyFile",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getClrAssemblyFile_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getClrAssemblyFile_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getClrAssemblyFile_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data"
		   });
		addAnnotation
		  (columnBindingEClass,
		   source,
		   new String[] {
			   "name", "ColumnBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getColumnBinding_TableID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableID"
		   });
		addAnnotation
		  (getColumnBinding_ColumnID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ColumnID"
		   });
		addAnnotation
		  (columnsTypeEClass,
		   source,
		   new String[] {
			   "name", "Columns_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getColumnsType_Column(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Column"
		   });
		addAnnotation
		  (columnsType1EClass,
		   source,
		   new String[] {
			   "name", "Columns_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getColumnsType1_Column(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Column"
		   });
		addAnnotation
		  (columnsType2EClass,
		   source,
		   new String[] {
			   "name", "Columns_._2_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getColumnsType2_Column(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Column"
		   });
		addAnnotation
		  (columnsType3EClass,
		   source,
		   new String[] {
			   "name", "Columns_._3_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getColumnsType3_Column(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Column"
		   });
		addAnnotation
		  (columnsType4EClass,
		   source,
		   new String[] {
			   "name", "Columns_._4_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getColumnsType4_Column(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Column"
		   });
		addAnnotation
		  (columnTypeEClass,
		   source,
		   new String[] {
			   "name", "Column_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getColumnType_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getColumnType_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getColumnType_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getColumnType_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getColumnType_Filterable(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Filterable"
		   });
		addAnnotation
		  (getColumnType_Repeatable(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Repeatable"
		   });
		addAnnotation
		  (getColumnType_RepeatedBase(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RepeatedBase"
		   });
		addAnnotation
		  (comAssemblyEClass,
		   source,
		   new String[] {
			   "name", "ComAssembly",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getComAssembly_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (commandEClass,
		   source,
		   new String[] {
			   "name", "Command",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCommand_Statement(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Statement"
		   });
		addAnnotation
		  (getCommand_Create(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Create"
		   });
		addAnnotation
		  (getCommand_Alter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Alter"
		   });
		addAnnotation
		  (getCommand_Delete(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Delete"
		   });
		addAnnotation
		  (getCommand_Process(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Process"
		   });
		addAnnotation
		  (getCommand_MergePartitions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MergePartitions"
		   });
		addAnnotation
		  (getCommand_DesignAggregations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DesignAggregations"
		   });
		addAnnotation
		  (getCommand_ClearCache(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ClearCache"
		   });
		addAnnotation
		  (getCommand_Subscribe(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Subscribe"
		   });
		addAnnotation
		  (getCommand_Unsubscribe(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Unsubscribe"
		   });
		addAnnotation
		  (getCommand_Cancel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cancel"
		   });
		addAnnotation
		  (getCommand_BeginTransaction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BeginTransaction"
		   });
		addAnnotation
		  (getCommand_CommitTransaction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CommitTransaction"
		   });
		addAnnotation
		  (getCommand_RollbackTransaction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RollbackTransaction"
		   });
		addAnnotation
		  (getCommand_Lock(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Lock"
		   });
		addAnnotation
		  (getCommand_Unlock(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Unlock"
		   });
		addAnnotation
		  (getCommand_Backup(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Backup"
		   });
		addAnnotation
		  (getCommand_Restore(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Restore"
		   });
		addAnnotation
		  (getCommand_Synchronize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Synchronize"
		   });
		addAnnotation
		  (getCommand_Attach(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attach"
		   });
		addAnnotation
		  (getCommand_Detach(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Detach"
		   });
		addAnnotation
		  (getCommand_Insert(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Insert"
		   });
		addAnnotation
		  (getCommand_Update(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Update"
		   });
		addAnnotation
		  (getCommand_Drop(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Drop"
		   });
		addAnnotation
		  (getCommand_UpdateCells(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UpdateCells"
		   });
		addAnnotation
		  (getCommand_NotifyTableChange(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotifyTableChange"
		   });
		addAnnotation
		  (getCommand_Batch(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Batch"
		   });
		addAnnotation
		  (getCommand_ImageLoad(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageLoad"
		   });
		addAnnotation
		  (getCommand_ImageSave(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageSave"
		   });
		addAnnotation
		  (getCommand_CloneDatabase(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CloneDatabase"
		   });
		addAnnotation
		  (getCommand_SetAuthContext(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SetAuthContext"
		   });
		addAnnotation
		  (getCommand_DBCC(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DBCC"
		   });
		addAnnotation
		  (commandsTypeEClass,
		   source,
		   new String[] {
			   "name", "Commands_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCommandsType_Command(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Command"
		   });
		addAnnotation
		  (commitTransactionEClass,
		   source,
		   new String[] {
			   "name", "CommitTransaction",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCommitTransaction_DurabilityGuarantee(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DurabilityGuarantee"
		   });
		addAnnotation
		  (comparatorTypeEClass,
		   source,
		   new String[] {
			   "name", "comparator_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getComparatorType_Module(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "module"
		   });
		addAnnotation
		  (getComparatorType_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getComparatorType_Package(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "package"
		   });
		addAnnotation
		  (connectionStringSecurityTypeEEnum,
		   source,
		   new String[] {
			   "name", "ConnectionStringSecurity_._type"
		   });
		addAnnotation
		  (connectionStringSecurityTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ConnectionStringSecurity_._type:Object",
			   "baseType", "ConnectionStringSecurity_._type"
		   });
		addAnnotation
		  (contentTypeEEnum,
		   source,
		   new String[] {
			   "name", "Content_._type"
		   });
		addAnnotation
		  (contentType1EEnum,
		   source,
		   new String[] {
			   "name", "Content_._1_._type"
		   });
		addAnnotation
		  (contentTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Content_._type:Object",
			   "baseType", "Content_._type"
		   });
		addAnnotation
		  (contentTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Content_._1_._type:Object",
			   "baseType", "Content_._1_._type"
		   });
		addAnnotation
		  (createEClass,
		   source,
		   new String[] {
			   "name", "Create",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCreate_ParentObject(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ParentObject"
		   });
		addAnnotation
		  (getCreate_ObjectDefinition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ObjectDefinition"
		   });
		addAnnotation
		  (getCreate_AllowOverwrite(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "AllowOverwrite"
		   });
		addAnnotation
		  (getCreate_Scope(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "Scope"
		   });
		addAnnotation
		  (cubeEClass,
		   source,
		   new String[] {
			   "name", "Cube",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCube_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getCube_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getCube_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getCube_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getCube_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getCube_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getCube_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getCube_Collation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Collation"
		   });
		addAnnotation
		  (getCube_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getCube_Dimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimensions"
		   });
		addAnnotation
		  (getCube_CubePermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubePermissions"
		   });
		addAnnotation
		  (getCube_MdxScripts(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdxScripts"
		   });
		addAnnotation
		  (getCube_Perspectives(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Perspectives"
		   });
		addAnnotation
		  (getCube_State(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "State"
		   });
		addAnnotation
		  (getCube_DefaultMeasure(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultMeasure"
		   });
		addAnnotation
		  (getCube_Visible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visible"
		   });
		addAnnotation
		  (getCube_MeasureGroups(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroups"
		   });
		addAnnotation
		  (getCube_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getCube_AggregationPrefix(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationPrefix"
		   });
		addAnnotation
		  (getCube_ProcessingPriority(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingPriority"
		   });
		addAnnotation
		  (getCube_StorageMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageMode"
		   });
		addAnnotation
		  (getCube_ProcessingMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingMode"
		   });
		addAnnotation
		  (getCube_ScriptCacheProcessingMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ScriptCacheProcessingMode"
		   });
		addAnnotation
		  (getCube_ScriptErrorHandlingMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ScriptErrorHandlingMode"
		   });
		addAnnotation
		  (getCube_DaxOptimizationMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DaxOptimizationMode",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2013/engine/800"
		   });
		addAnnotation
		  (getCube_ProactiveCaching(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProactiveCaching"
		   });
		addAnnotation
		  (getCube_Kpis(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Kpis"
		   });
		addAnnotation
		  (getCube_ErrorConfiguration(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ErrorConfiguration"
		   });
		addAnnotation
		  (getCube_Actions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Actions"
		   });
		addAnnotation
		  (getCube_StorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageLocation"
		   });
		addAnnotation
		  (getCube_EstimatedRows(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedRows"
		   });
		addAnnotation
		  (getCube_LastProcessed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastProcessed"
		   });
		addAnnotation
		  (cubeAttributeEClass,
		   source,
		   new String[] {
			   "name", "CubeAttribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubeAttribute_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getCubeAttribute_AggregationUsage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationUsage"
		   });
		addAnnotation
		  (getCubeAttribute_AttributeHierarchyOptimizedState(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyOptimizedState"
		   });
		addAnnotation
		  (getCubeAttribute_AttributeHierarchyEnabled(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyEnabled"
		   });
		addAnnotation
		  (getCubeAttribute_AttributeHierarchyVisible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyVisible"
		   });
		addAnnotation
		  (getCubeAttribute_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (cubeAttributeBindingEClass,
		   source,
		   new String[] {
			   "name", "CubeAttributeBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubeAttributeBinding_CubeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeID"
		   });
		addAnnotation
		  (getCubeAttributeBinding_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getCubeAttributeBinding_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getCubeAttributeBinding_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getCubeAttributeBinding_Ordinal(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Ordinal"
		   });
		addAnnotation
		  (cubeDimensionEClass,
		   source,
		   new String[] {
			   "name", "CubeDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubeDimension_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getCubeDimension_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getCubeDimension_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getCubeDimension_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getCubeDimension_DimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionID"
		   });
		addAnnotation
		  (getCubeDimension_Visible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visible"
		   });
		addAnnotation
		  (getCubeDimension_AllMemberAggregationUsage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllMemberAggregationUsage"
		   });
		addAnnotation
		  (getCubeDimension_HierarchyUniqueNameStyle(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HierarchyUniqueNameStyle"
		   });
		addAnnotation
		  (getCubeDimension_MemberUniqueNameStyle(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MemberUniqueNameStyle"
		   });
		addAnnotation
		  (getCubeDimension_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (getCubeDimension_Hierarchies(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Hierarchies"
		   });
		addAnnotation
		  (getCubeDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (cubeDimensionBindingEClass,
		   source,
		   new String[] {
			   "name", "CubeDimensionBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubeDimensionBinding_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (getCubeDimensionBinding_CubeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeID"
		   });
		addAnnotation
		  (getCubeDimensionBinding_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getCubeDimensionBinding_Filter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Filter"
		   });
		addAnnotation
		  (cubeDimensionPermissionEClass,
		   source,
		   new String[] {
			   "name", "CubeDimensionPermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubeDimensionPermission_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getCubeDimensionPermission_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getCubeDimensionPermission_Read(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Read"
		   });
		addAnnotation
		  (getCubeDimensionPermission_Write(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Write"
		   });
		addAnnotation
		  (getCubeDimensionPermission_AttributePermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributePermissions"
		   });
		addAnnotation
		  (getCubeDimensionPermission_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (cubeHierarchyEClass,
		   source,
		   new String[] {
			   "name", "CubeHierarchy",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubeHierarchy_HierarchyID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HierarchyID"
		   });
		addAnnotation
		  (getCubeHierarchy_OptimizedState(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "OptimizedState"
		   });
		addAnnotation
		  (getCubeHierarchy_Visible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visible"
		   });
		addAnnotation
		  (getCubeHierarchy_Enabled(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Enabled"
		   });
		addAnnotation
		  (getCubeHierarchy_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (cubePermissionEClass,
		   source,
		   new String[] {
			   "name", "CubePermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubePermission_ReadSourceData(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReadSourceData"
		   });
		addAnnotation
		  (getCubePermission_DimensionPermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionPermissions"
		   });
		addAnnotation
		  (getCubePermission_CellPermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CellPermissions"
		   });
		addAnnotation
		  (getCubePermission_Write(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Write"
		   });
		addAnnotation
		  (cubePermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "CubePermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubePermissionsType_CubePermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubePermission"
		   });
		addAnnotation
		  (cubeStorageModeEnumTypeEEnum,
		   source,
		   new String[] {
			   "name", "CubeStorageModeEnumType"
		   });
		addAnnotation
		  (cubeStorageModeEnumTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "CubeStorageModeEnumType:Object",
			   "baseType", "CubeStorageModeEnumType"
		   });
		addAnnotation
		  (cubesTypeEClass,
		   source,
		   new String[] {
			   "name", "Cubes_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCubesType_Cube(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cube"
		   });
		addAnnotation
		  (currentStorageModeTypeEClass,
		   source,
		   new String[] {
			   "name", "CurrentStorageMode_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getCurrentStorageModeType_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getCurrentStorageModeType_Valuens(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "valuens"
		   });
		addAnnotation
		  (currentStorageModeType1EClass,
		   source,
		   new String[] {
			   "name", "CurrentStorageMode_._1_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getCurrentStorageModeType1_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getCurrentStorageModeType1_Valuens(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "valuens"
		   });
		addAnnotation
		  (customRollupColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "CustomRollupColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCustomRollupColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (customRollupPropertiesColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "CustomRollupPropertiesColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getCustomRollupPropertiesColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (dataAggregationTypeEEnum,
		   source,
		   new String[] {
			   "name", "DataAggregation_._type"
		   });
		addAnnotation
		  (dataAggregationTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DataAggregation_._type:Object",
			   "baseType", "DataAggregation_._type"
		   });
		addAnnotation
		  (databaseEClass,
		   source,
		   new String[] {
			   "name", "Database",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDatabase_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getDatabase_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getDatabase_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getDatabase_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getDatabase_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getDatabase_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDatabase_LastUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastUpdate"
		   });
		addAnnotation
		  (getDatabase_State(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "State"
		   });
		addAnnotation
		  (getDatabase_ReadWriteMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReadWriteMode",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100"
		   });
		addAnnotation
		  (getDatabase_DbStorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbStorageLocation",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getDatabase_AggregationPrefix(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationPrefix"
		   });
		addAnnotation
		  (getDatabase_ProcessingPriority(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingPriority"
		   });
		addAnnotation
		  (getDatabase_EstimatedSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedSize"
		   });
		addAnnotation
		  (getDatabase_LastProcessed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastProcessed"
		   });
		addAnnotation
		  (getDatabase_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getDatabase_Collation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Collation"
		   });
		addAnnotation
		  (getDatabase_Visible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visible"
		   });
		addAnnotation
		  (getDatabase_MasterDataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MasterDataSourceID"
		   });
		addAnnotation
		  (getDatabase_DataSourceImpersonationInfo(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceImpersonationInfo"
		   });
		addAnnotation
		  (getDatabase_Accounts(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Accounts"
		   });
		addAnnotation
		  (getDatabase_DataSources(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSources"
		   });
		addAnnotation
		  (getDatabase_DataSourceViews(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceViews"
		   });
		addAnnotation
		  (getDatabase_Dimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimensions"
		   });
		addAnnotation
		  (getDatabase_Cubes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cubes"
		   });
		addAnnotation
		  (getDatabase_MiningStructures(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructures"
		   });
		addAnnotation
		  (getDatabase_Roles(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Roles"
		   });
		addAnnotation
		  (getDatabase_Assemblies(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Assemblies"
		   });
		addAnnotation
		  (getDatabase_DatabasePermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabasePermissions"
		   });
		addAnnotation
		  (getDatabase_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getDatabase_StorageEngineUsed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageEngineUsed",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getDatabase_ImagePath(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImagePath",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getDatabase_ImageUrl(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageUrl",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getDatabase_ImageUniqueID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageUniqueID",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getDatabase_ImageVersion(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageVersion",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getDatabase_Token(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Token",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getDatabase_CompatibilityLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CompatibilityLevel",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200"
		   });
		addAnnotation
		  (getDatabase_DirectQueryMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DirectQueryMode",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300/300"
		   });
		addAnnotation
		  (databasePermissionEClass,
		   source,
		   new String[] {
			   "name", "DatabasePermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDatabasePermission_Administer(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Administer"
		   });
		addAnnotation
		  (getDatabasePermission_Write(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Write"
		   });
		addAnnotation
		  (databasePermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "DatabasePermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDatabasePermissionsType_DatabasePermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabasePermission"
		   });
		addAnnotation
		  (databasesTypeEClass,
		   source,
		   new String[] {
			   "name", "Databases_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDatabasesType_Database(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Database"
		   });
		addAnnotation
		  (dataBlockEClass,
		   source,
		   new String[] {
			   "name", "DataBlock",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataBlock_Block(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Block"
		   });
		addAnnotation
		  (dataItemEClass,
		   source,
		   new String[] {
			   "name", "DataItem",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataItem_DataType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataType"
		   });
		addAnnotation
		  (getDataItem_DataSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSize"
		   });
		addAnnotation
		  (getDataItem_MimeType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MimeType"
		   });
		addAnnotation
		  (getDataItem_NullProcessing(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NullProcessing"
		   });
		addAnnotation
		  (getDataItem_Trimming(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Trimming"
		   });
		addAnnotation
		  (getDataItem_InvalidXmlCharacters(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "InvalidXmlCharacters"
		   });
		addAnnotation
		  (getDataItem_Collation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Collation"
		   });
		addAnnotation
		  (getDataItem_Format(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Format"
		   });
		addAnnotation
		  (getDataItem_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getDataItem_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (dataMiningMeasureGroupDimensionEClass,
		   source,
		   new String[] {
			   "name", "DataMiningMeasureGroupDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataMiningMeasureGroupDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getDataMiningMeasureGroupDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDataMiningMeasureGroupDimension_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getDataMiningMeasureGroupDimension_CaseCubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CaseCubeDimensionID"
		   });
		addAnnotation
		  (dataSourceEClass,
		   source,
		   new String[] {
			   "name", "DataSource",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataSource_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getDataSource_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getDataSource_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getDataSource_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getDataSource_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getDataSource_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDataSource_ManagedProvider(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ManagedProvider"
		   });
		addAnnotation
		  (getDataSource_ConnectionString(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ConnectionString"
		   });
		addAnnotation
		  (getDataSource_ConnectionStringSecurity(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ConnectionStringSecurity"
		   });
		addAnnotation
		  (getDataSource_ImpersonationInfo(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImpersonationInfo"
		   });
		addAnnotation
		  (getDataSource_Isolation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Isolation"
		   });
		addAnnotation
		  (getDataSource_MaxActiveConnections(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MaxActiveConnections"
		   });
		addAnnotation
		  (getDataSource_Timeout(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Timeout"
		   });
		addAnnotation
		  (getDataSource_DataSourcePermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourcePermissions"
		   });
		addAnnotation
		  (getDataSource_QueryImpersonationInfo(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "QueryImpersonationInfo",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (getDataSource_QueryHints(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "QueryHints",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (dataSourcePermissionEClass,
		   source,
		   new String[] {
			   "name", "DataSourcePermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataSourcePermission_Write(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Write"
		   });
		addAnnotation
		  (dataSourcePermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "DataSourcePermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataSourcePermissionsType_DataSourcePermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourcePermission"
		   });
		addAnnotation
		  (dataSourcesTypeEClass,
		   source,
		   new String[] {
			   "name", "DataSources_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataSourcesType_DataSource(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSource"
		   });
		addAnnotation
		  (dataSourceViewEClass,
		   source,
		   new String[] {
			   "name", "DataSourceView",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataSourceView_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getDataSourceView_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getDataSourceView_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getDataSourceView_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getDataSourceView_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getDataSourceView_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDataSourceView_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (dataSourceViewBindingEClass,
		   source,
		   new String[] {
			   "name", "DataSourceViewBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataSourceViewBinding_DataSourceViewID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceViewID"
		   });
		addAnnotation
		  (dataSourceViewsTypeEClass,
		   source,
		   new String[] {
			   "name", "DataSourceViews_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataSourceViewsType_DataSourceView(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceView"
		   });
		addAnnotation
		  (dataTypeEClass,
		   source,
		   new String[] {
			   "name", "Data_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataType_Column(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Column"
		   });
		addAnnotation
		  (dataType1EClass,
		   source,
		   new String[] {
			   "name", "Data_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataType1_EventCategory(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventCategory"
		   });
		addAnnotation
		  (dataType2EClass,
		   source,
		   new String[] {
			   "name", "Data_._2_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataType2_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getDataType2_Version(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Version"
		   });
		addAnnotation
		  (getDataType2_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getDataType2_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (dataType3EClass,
		   source,
		   new String[] {
			   "name", "Data_._3_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDataType3_DataBlock(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataBlock"
		   });
		addAnnotation
		  (dataTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "DataType_._type"
		   });
		addAnnotation
		  (dataTypeType1EEnum,
		   source,
		   new String[] {
			   "name", "DataType_._1_._type"
		   });
		addAnnotation
		  (dataTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DataType_._type:Object",
			   "baseType", "DataType_._type"
		   });
		addAnnotation
		  (dataTypeTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "DataType_._1_._type:Object",
			   "baseType", "DataType_._1_._type"
		   });
		addAnnotation
		  (dbccEClass,
		   source,
		   new String[] {
			   "name", "DBCC",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDBCC_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (dbpropConcatNullBehaviorTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropConcatNullBehavior_._type"
		   });
		addAnnotation
		  (dbpropConcatNullBehaviorTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropConcatNullBehavior_._type:Object",
			   "baseType", "DbpropConcatNullBehavior_._type"
		   });
		addAnnotation
		  (dbpropMsmdAutoExistsTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropMsmdAutoExists_._type"
		   });
		addAnnotation
		  (dbpropMsmdAutoExistsTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropMsmdAutoExists_._type:Object",
			   "baseType", "DbpropMsmdAutoExists_._type"
		   });
		addAnnotation
		  (dbpropMsmdCompareCaseSensitiveStringFlagsTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropMsmdCompareCaseSensitiveStringFlags_._type"
		   });
		addAnnotation
		  (dbpropMsmdCompareCaseSensitiveStringFlagsTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropMsmdCompareCaseSensitiveStringFlags_._type:Object",
			   "baseType", "DbpropMsmdCompareCaseSensitiveStringFlags_._type"
		   });
		addAnnotation
		  (dbpropMsmdMDXCompatibilityTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropMsmdMDXCompatibility_._type"
		   });
		addAnnotation
		  (dbpropMsmdMDXCompatibilityTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropMsmdMDXCompatibility_._type:Object",
			   "baseType", "DbpropMsmdMDXCompatibility_._type"
		   });
		addAnnotation
		  (dbpropMsmdSubqueriesTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropMsmdSubqueries_._type"
		   });
		addAnnotation
		  (dbpropMsmdSubqueriesTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropMsmdSubqueries_._type:Object",
			   "baseType", "DbpropMsmdSubqueries_._type"
		   });
		addAnnotation
		  (dbpropNullCollationTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropNullCollation_._type"
		   });
		addAnnotation
		  (dbpropNullCollationTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropNullCollation_._type:Object",
			   "baseType", "DbpropNullCollation_._type"
		   });
		addAnnotation
		  (dbpropOutputParameterAvailableTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropOutputParameterAvailable_._type"
		   });
		addAnnotation
		  (dbpropOutputParameterAvailableTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropOutputParameterAvailable_._type:Object",
			   "baseType", "DbpropOutputParameterAvailable_._type"
		   });
		addAnnotation
		  (dbpropPersistentIdTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropPersistentIdType_._type"
		   });
		addAnnotation
		  (dbpropPersistentIdTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropPersistentIdType_._type:Object",
			   "baseType", "DbpropPersistentIdType_._type"
		   });
		addAnnotation
		  (dbpropPrepareAbortBehaviorTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropPrepareAbortBehavior_._type"
		   });
		addAnnotation
		  (dbpropPrepareAbortBehaviorTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropPrepareAbortBehavior_._type:Object",
			   "baseType", "DbpropPrepareAbortBehavior_._type"
		   });
		addAnnotation
		  (dbpropPrepareCommitBehaviorTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropPrepareCommitBehavior_._type"
		   });
		addAnnotation
		  (dbpropPrepareCommitBehaviorTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropPrepareCommitBehavior_._type:Object",
			   "baseType", "DbpropPrepareCommitBehavior_._type"
		   });
		addAnnotation
		  (dbpropQuotedIdentifierCaseTypeEEnum,
		   source,
		   new String[] {
			   "name", "DbpropQuotedIdentifierCase_._type"
		   });
		addAnnotation
		  (dbpropQuotedIdentifierCaseTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DbpropQuotedIdentifierCase_._type:Object",
			   "baseType", "DbpropQuotedIdentifierCase_._type"
		   });
		addAnnotation
		  (degenerateMeasureGroupDimensionEClass,
		   source,
		   new String[] {
			   "name", "DegenerateMeasureGroupDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDegenerateMeasureGroupDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getDegenerateMeasureGroupDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDegenerateMeasureGroupDimension_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getDegenerateMeasureGroupDimension_ShareDimensionStorage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ShareDimensionStorage",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (deleteEClass,
		   source,
		   new String[] {
			   "name", "Delete",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDelete_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getDelete_IgnoreFailures(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "IgnoreFailures"
		   });
		addAnnotation
		  (designAggregationsEClass,
		   source,
		   new String[] {
			   "name", "DesignAggregations",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDesignAggregations_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getDesignAggregations_Time(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Time"
		   });
		addAnnotation
		  (getDesignAggregations_Steps(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Steps"
		   });
		addAnnotation
		  (getDesignAggregations_Optimization(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Optimization"
		   });
		addAnnotation
		  (getDesignAggregations_Storage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Storage"
		   });
		addAnnotation
		  (getDesignAggregations_Materialize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Materialize"
		   });
		addAnnotation
		  (getDesignAggregations_Queries(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Queries"
		   });
		addAnnotation
		  (detachEClass,
		   source,
		   new String[] {
			   "name", "Detach",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDetach_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getDetach_Password(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Password"
		   });
		addAnnotation
		  (dialectTypeEEnum,
		   source,
		   new String[] {
			   "name", "Dialect_._type"
		   });
		addAnnotation
		  (dialectTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Dialect_._type:Object",
			   "baseType", "Dialect_._type"
		   });
		addAnnotation
		  (dimensionEClass,
		   source,
		   new String[] {
			   "name", "Dimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDimension_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getDimension_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getDimension_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getDimension_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getDimension_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDimension_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getDimension_MiningModelID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModelID"
		   });
		addAnnotation
		  (getDimension_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getDimension_UnknownMember(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UnknownMember"
		   });
		addAnnotation
		  (getDimension_MdxMissingMemberMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdxMissingMemberMode"
		   });
		addAnnotation
		  (getDimension_ErrorConfiguration(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ErrorConfiguration"
		   });
		addAnnotation
		  (getDimension_StorageMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageMode"
		   });
		addAnnotation
		  (getDimension_WriteEnabled(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "WriteEnabled"
		   });
		addAnnotation
		  (getDimension_ProcessingPriority(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingPriority"
		   });
		addAnnotation
		  (getDimension_LastProcessed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastProcessed"
		   });
		addAnnotation
		  (getDimension_DimensionPermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionPermissions"
		   });
		addAnnotation
		  (getDimension_DependsOnDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DependsOnDimensionID"
		   });
		addAnnotation
		  (getDimension_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getDimension_Collation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Collation"
		   });
		addAnnotation
		  (getDimension_UnknownMemberName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UnknownMemberName"
		   });
		addAnnotation
		  (getDimension_UnknownMemberTranslations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UnknownMemberTranslations"
		   });
		addAnnotation
		  (getDimension_State(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "State"
		   });
		addAnnotation
		  (getDimension_ProactiveCaching(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProactiveCaching"
		   });
		addAnnotation
		  (getDimension_ProcessingMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingMode"
		   });
		addAnnotation
		  (getDimension_ProcessingGroup(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingGroup"
		   });
		addAnnotation
		  (getDimension_CurrentStorageMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CurrentStorageMode"
		   });
		addAnnotation
		  (getDimension_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getDimension_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (getDimension_AttributeAllMemberName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeAllMemberName"
		   });
		addAnnotation
		  (getDimension_AttributeAllMemberTranslations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeAllMemberTranslations"
		   });
		addAnnotation
		  (getDimension_Hierarchies(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Hierarchies"
		   });
		addAnnotation
		  (getDimension_ProcessingRecommendation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingRecommendation",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getDimension_Relationships(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Relationships"
		   });
		addAnnotation
		  (getDimension_StringStoresCompatibilityLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StringStoresCompatibilityLevel",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (getDimension_CurrentStringStoresCompatibilityLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CurrentStringStoresCompatibilityLevel",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (dimensionAttributeEClass,
		   source,
		   new String[] {
			   "name", "DimensionAttribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDimensionAttribute_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getDimensionAttribute_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getDimensionAttribute_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getDimensionAttribute_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getDimensionAttribute_Usage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Usage"
		   });
		addAnnotation
		  (getDimensionAttribute_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getDimensionAttribute_EstimatedCount(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedCount"
		   });
		addAnnotation
		  (getDimensionAttribute_KeyColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumns"
		   });
		addAnnotation
		  (getDimensionAttribute_NameColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NameColumn"
		   });
		addAnnotation
		  (getDimensionAttribute_ValueColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ValueColumn"
		   });
		addAnnotation
		  (getDimensionAttribute_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getDimensionAttribute_AttributeRelationships(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeRelationships"
		   });
		addAnnotation
		  (getDimensionAttribute_DiscretizationMethod(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DiscretizationMethod"
		   });
		addAnnotation
		  (getDimensionAttribute_DiscretizationBucketCount(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DiscretizationBucketCount"
		   });
		addAnnotation
		  (getDimensionAttribute_RootMemberIf(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RootMemberIf"
		   });
		addAnnotation
		  (getDimensionAttribute_OrderBy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "OrderBy"
		   });
		addAnnotation
		  (getDimensionAttribute_DefaultMember(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultMember"
		   });
		addAnnotation
		  (getDimensionAttribute_OrderByAttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "OrderByAttributeID"
		   });
		addAnnotation
		  (getDimensionAttribute_SkippedLevelsColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SkippedLevelsColumn"
		   });
		addAnnotation
		  (getDimensionAttribute_NamingTemplate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NamingTemplate"
		   });
		addAnnotation
		  (getDimensionAttribute_MembersWithData(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MembersWithData"
		   });
		addAnnotation
		  (getDimensionAttribute_MembersWithDataCaption(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MembersWithDataCaption"
		   });
		addAnnotation
		  (getDimensionAttribute_NamingTemplateTranslations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NamingTemplateTranslations"
		   });
		addAnnotation
		  (getDimensionAttribute_CustomRollupColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CustomRollupColumn"
		   });
		addAnnotation
		  (getDimensionAttribute_CustomRollupPropertiesColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CustomRollupPropertiesColumn"
		   });
		addAnnotation
		  (getDimensionAttribute_UnaryOperatorColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UnaryOperatorColumn"
		   });
		addAnnotation
		  (getDimensionAttribute_AttributeHierarchyOrdered(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyOrdered"
		   });
		addAnnotation
		  (getDimensionAttribute_MemberNamesUnique(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MemberNamesUnique"
		   });
		addAnnotation
		  (getDimensionAttribute_IsAggregatable(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "IsAggregatable"
		   });
		addAnnotation
		  (getDimensionAttribute_AttributeHierarchyEnabled(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyEnabled"
		   });
		addAnnotation
		  (getDimensionAttribute_AttributeHierarchyOptimizedState(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyOptimizedState"
		   });
		addAnnotation
		  (getDimensionAttribute_AttributeHierarchyVisible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyVisible"
		   });
		addAnnotation
		  (getDimensionAttribute_AttributeHierarchyDisplayFolder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyDisplayFolder"
		   });
		addAnnotation
		  (getDimensionAttribute_KeyUniquenessGuarantee(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyUniquenessGuarantee"
		   });
		addAnnotation
		  (getDimensionAttribute_GroupingBehavior(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GroupingBehavior"
		   });
		addAnnotation
		  (getDimensionAttribute_InstanceSelection(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "InstanceSelection"
		   });
		addAnnotation
		  (getDimensionAttribute_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDimensionAttribute_ProcessingState(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingState"
		   });
		addAnnotation
		  (getDimensionAttribute_AttributeHierarchyProcessingState(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyProcessingState"
		   });
		addAnnotation
		  (getDimensionAttribute_VisualizationProperties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "VisualizationProperties"
		   });
		addAnnotation
		  (getDimensionAttribute_ExtendedType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ExtendedType"
		   });
		addAnnotation
		  (dimensionAttributeTypeEnumTypeEEnum,
		   source,
		   new String[] {
			   "name", "DimensionAttributeTypeEnumType"
		   });
		addAnnotation
		  (dimensionAttributeTypeEnumTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DimensionAttributeTypeEnumType:Object",
			   "baseType", "DimensionAttributeTypeEnumType"
		   });
		addAnnotation
		  (dimensionBindingEClass,
		   source,
		   new String[] {
			   "name", "DimensionBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDimensionBinding_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (getDimensionBinding_DimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionID"
		   });
		addAnnotation
		  (getDimensionBinding_Persistence(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Persistence"
		   });
		addAnnotation
		  (getDimensionBinding_RefreshPolicy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RefreshPolicy"
		   });
		addAnnotation
		  (getDimensionBinding_RefreshInterval(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RefreshInterval"
		   });
		addAnnotation
		  (dimensionCurrentStorageModeEnumTypeEEnum,
		   source,
		   new String[] {
			   "name", "DimensionCurrentStorageModeEnumType"
		   });
		addAnnotation
		  (dimensionCurrentStorageModeEnumTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DimensionCurrentStorageModeEnumType:Object",
			   "baseType", "DimensionCurrentStorageModeEnumType"
		   });
		addAnnotation
		  (dimensionPermissionEClass,
		   source,
		   new String[] {
			   "name", "DimensionPermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDimensionPermission_AttributePermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributePermissions"
		   });
		addAnnotation
		  (getDimensionPermission_Write(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Write"
		   });
		addAnnotation
		  (getDimensionPermission_AllowedRowsExpression(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowedRowsExpression",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300/300"
		   });
		addAnnotation
		  (dimensionPermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "DimensionPermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDimensionPermissionsType_DimensionPermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionPermission"
		   });
		addAnnotation
		  (dimensionPermissionsType1EClass,
		   source,
		   new String[] {
			   "name", "DimensionPermissions_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDimensionPermissionsType1_DimensionPermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionPermission"
		   });
		addAnnotation
		  (dimensionsTypeEClass,
		   source,
		   new String[] {
			   "name", "Dimensions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDimensionsType_Dimension(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimension"
		   });
		addAnnotation
		  (discoverResponseTypeEClass,
		   source,
		   new String[] {
			   "name", "DiscoverResponse_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDiscoverResponseType_Return(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "return"
		   });
		addAnnotation
		  (discoverTypeEClass,
		   source,
		   new String[] {
			   "name", "Discover_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDiscoverType_RequestType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RequestType"
		   });
		addAnnotation
		  (getDiscoverType_Restrictions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Restrictions"
		   });
		addAnnotation
		  (getDiscoverType_Properties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Properties"
		   });
		addAnnotation
		  (discretizationMethodTypeEEnum,
		   source,
		   new String[] {
			   "name", "DiscretizationMethod_._type"
		   });
		addAnnotation
		  (discretizationMethodTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DiscretizationMethod_._type:Object",
			   "baseType", "DiscretizationMethod_._type"
		   });
		addAnnotation
		  (documentRootEClass,
		   source,
		   new String[] {
			   "name", "",
			   "kind", "mixed"
		   });
		addAnnotation
		  (getDocumentRoot_Mixed(),
		   source,
		   new String[] {
			   "kind", "elementWildcard",
			   "name", ":mixed"
		   });
		addAnnotation
		  (getDocumentRoot_XMLNSPrefixMap(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "xmlns:prefix"
		   });
		addAnnotation
		  (getDocumentRoot_XSISchemaLocation(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "xsi:schemaLocation"
		   });
		addAnnotation
		  (getDocumentRoot_Action(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "action",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_AllowedRowsExpression(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowedRowsExpression",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_BeginSession(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BeginSession",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_ClearResult(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ClearResult",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Discover(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Discover",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_DiscoverResponse(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DiscoverResponse",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_EndSession(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EndSession",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Event(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "event",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_EventSession(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "event_session",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_EventType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventType",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Execute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Execute",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_ExecuteResponse(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ExecuteResponse",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_KeepResult(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeepResult",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Parameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "parameter",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Result(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Result",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Session(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Session",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_ShareDimensionStorage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ShareDimensionStorage",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getDocumentRoot_Target(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "target",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (drillThroughActionEClass,
		   source,
		   new String[] {
			   "name", "DrillThroughAction",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDrillThroughAction_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getDrillThroughAction_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getDrillThroughAction_Caption(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Caption"
		   });
		addAnnotation
		  (getDrillThroughAction_CaptionIsMdx(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CaptionIsMdx"
		   });
		addAnnotation
		  (getDrillThroughAction_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getDrillThroughAction_TargetType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TargetType"
		   });
		addAnnotation
		  (getDrillThroughAction_Target(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Target"
		   });
		addAnnotation
		  (getDrillThroughAction_Condition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Condition"
		   });
		addAnnotation
		  (getDrillThroughAction_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getDrillThroughAction_Invocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Invocation"
		   });
		addAnnotation
		  (getDrillThroughAction_Application(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Application"
		   });
		addAnnotation
		  (getDrillThroughAction_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getDrillThroughAction_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getDrillThroughAction_Default(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Default"
		   });
		addAnnotation
		  (getDrillThroughAction_Columns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Columns"
		   });
		addAnnotation
		  (getDrillThroughAction_MaximumRows(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MaximumRows"
		   });
		addAnnotation
		  (dropEClass,
		   source,
		   new String[] {
			   "name", "Drop",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDrop_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getDrop_DeleteWithDescendants(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DeleteWithDescendants"
		   });
		addAnnotation
		  (getDrop_Where(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Where"
		   });
		addAnnotation
		  (dsvTableBindingEClass,
		   source,
		   new String[] {
			   "name", "DSVTableBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getDSVTableBinding_DataSourceViewID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceViewID"
		   });
		addAnnotation
		  (getDSVTableBinding_TableID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableID"
		   });
		addAnnotation
		  (getDSVTableBinding_DataEmbeddingStyle(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataEmbeddingStyle",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (durabilityGuaranteeTypeEEnum,
		   source,
		   new String[] {
			   "name", "DurabilityGuarantee_._type"
		   });
		addAnnotation
		  (durabilityGuaranteeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "DurabilityGuarantee_._type:Object",
			   "baseType", "DurabilityGuarantee_._type"
		   });
		addAnnotation
		  (editionTypeEEnum,
		   source,
		   new String[] {
			   "name", "Edition_._type"
		   });
		addAnnotation
		  (editionTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Edition_._type:Object",
			   "baseType", "Edition_._type"
		   });
		addAnnotation
		  (endOfDataTypeEClass,
		   source,
		   new String[] {
			   "name", "EndOfData_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getEndOfDataType_Parameter(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "Parameter"
		   });
		addAnnotation
		  (endSessionTypeEClass,
		   source,
		   new String[] {
			   "name", "EndSession_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getEndSessionType_MustUnderstand(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mustUnderstand"
		   });
		addAnnotation
		  (getEndSessionType_SessionId(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "SessionId"
		   });
		addAnnotation
		  (errorConfigurationEClass,
		   source,
		   new String[] {
			   "name", "ErrorConfiguration",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getErrorConfiguration_KeyErrorLimit(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyErrorLimit"
		   });
		addAnnotation
		  (getErrorConfiguration_KeyErrorLogFile(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyErrorLogFile"
		   });
		addAnnotation
		  (getErrorConfiguration_KeyErrorAction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyErrorAction"
		   });
		addAnnotation
		  (getErrorConfiguration_KeyErrorLimitAction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyErrorLimitAction"
		   });
		addAnnotation
		  (getErrorConfiguration_KeyNotFound(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyNotFound"
		   });
		addAnnotation
		  (getErrorConfiguration_KeyDuplicate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyDuplicate"
		   });
		addAnnotation
		  (getErrorConfiguration_NullKeyConvertedToUnknown(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NullKeyConvertedToUnknown"
		   });
		addAnnotation
		  (getErrorConfiguration_NullKeyNotAllowed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NullKeyNotAllowed"
		   });
		addAnnotation
		  (getErrorConfiguration_CalculationError(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalculationError",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200"
		   });
		addAnnotation
		  (eventEClass,
		   source,
		   new String[] {
			   "name", "Event",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEvent_EventID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventID"
		   });
		addAnnotation
		  (getEvent_Columns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Columns"
		   });
		addAnnotation
		  (eventCategoryTypeEClass,
		   source,
		   new String[] {
			   "name", "EventCategory_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventCategoryType_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getEventCategoryType_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getEventCategoryType_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getEventCategoryType_EventList(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventList"
		   });
		addAnnotation
		  (eventColumnEClass,
		   source,
		   new String[] {
			   "name", "EventColumn",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventColumn_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getEventColumn_EventColumnSubclassList(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventColumnSubclassList"
		   });
		addAnnotation
		  (eventColumnIDEClass,
		   source,
		   new String[] {
			   "name", "EventColumnID",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventColumnID_ColumnID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ColumnID"
		   });
		addAnnotation
		  (eventColumnListTypeEClass,
		   source,
		   new String[] {
			   "name", "EventColumnList_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventColumnListType_EventColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventColumn"
		   });
		addAnnotation
		  (eventColumnSubclassListTypeEClass,
		   source,
		   new String[] {
			   "name", "EventColumnSubclassList_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventColumnSubclassListType_EventColumnSubclass(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventColumnSubclass"
		   });
		addAnnotation
		  (eventColumnSubclassTypeEClass,
		   source,
		   new String[] {
			   "name", "EventColumnSubclass_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventColumnSubclassType_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getEventColumnSubclassType_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "name"
		   });
		addAnnotation
		  (eventListTypeEClass,
		   source,
		   new String[] {
			   "name", "EventList_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventListType_Event(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Event"
		   });
		addAnnotation
		  (eventSessionTypeEClass,
		   source,
		   new String[] {
			   "name", "event_session_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventSessionType_TemplateCategory(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "templateCategory"
		   });
		addAnnotation
		  (getEventSessionType_TemplateName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "templateName"
		   });
		addAnnotation
		  (getEventSessionType_TemplateDescription(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "templateDescription"
		   });
		addAnnotation
		  (getEventSessionType_Event(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "event"
		   });
		addAnnotation
		  (getEventSessionType_Target(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "target"
		   });
		addAnnotation
		  (getEventSessionType_DispatchLatency(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "dispatchLatency"
		   });
		addAnnotation
		  (getEventSessionType_EventRetentionMode(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "eventRetentionMode"
		   });
		addAnnotation
		  (getEventSessionType_MaxEventSize(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "maxEventSize"
		   });
		addAnnotation
		  (getEventSessionType_MaxMemory(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "maxMemory"
		   });
		addAnnotation
		  (getEventSessionType_MemoryPartitionMode(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "memoryPartitionMode"
		   });
		addAnnotation
		  (getEventSessionType_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getEventSessionType_TrackCausality(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "trackCausality"
		   });
		addAnnotation
		  (eventsTypeEClass,
		   source,
		   new String[] {
			   "name", "Events_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventsType_Event(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Event"
		   });
		addAnnotation
		  (eventTypeEClass,
		   source,
		   new String[] {
			   "name", "event_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getEventType_Field(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "field"
		   });
		addAnnotation
		  (getEventType_Module(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "module"
		   });
		addAnnotation
		  (getEventType_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getEventType_Package(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "package"
		   });
		addAnnotation
		  (eventType1EClass,
		   source,
		   new String[] {
			   "name", "event_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventType1_Action(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "action"
		   });
		addAnnotation
		  (getEventType1_Parameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "parameter",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getEventType1_Predicate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "predicate"
		   });
		addAnnotation
		  (getEventType1_Module(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "module"
		   });
		addAnnotation
		  (getEventType1_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getEventType1_Package(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "package"
		   });
		addAnnotation
		  (eventTypeTypeEClass,
		   source,
		   new String[] {
			   "name", "EventType_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getEventTypeType_Events(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Events"
		   });
		addAnnotation
		  (getEventTypeType_XEvent(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "XEvent",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300/300"
		   });
		addAnnotation
		  (executeParameterEClass,
		   source,
		   new String[] {
			   "name", "ExecuteParameter",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getExecuteParameter_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getExecuteParameter_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (executeResponseTypeEClass,
		   source,
		   new String[] {
			   "name", "ExecuteResponse_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getExecuteResponseType_Return(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "return"
		   });
		addAnnotation
		  (executeTypeEClass,
		   source,
		   new String[] {
			   "name", "Execute_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getExecuteType_Command(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Command"
		   });
		addAnnotation
		  (getExecuteType_Properties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Properties"
		   });
		addAnnotation
		  (getExecuteType_Parameters(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Parameters"
		   });
		addAnnotation
		  (filesTypeEClass,
		   source,
		   new String[] {
			   "name", "Files_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getFilesType_File(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "File"
		   });
		addAnnotation
		  (firstDayOfWeekTypeEDataType,
		   source,
		   new String[] {
			   "name", "FirstDayOfWeek_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "1",
			   "maxInclusive", "7"
		   });
		addAnnotation
		  (fiscalFirstDayOfMonthTypeEDataType,
		   source,
		   new String[] {
			   "name", "FiscalFirstDayOfMonth_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "1",
			   "maxInclusive", "31"
		   });
		addAnnotation
		  (fiscalFirstMonthTypeEDataType,
		   source,
		   new String[] {
			   "name", "FiscalFirstMonth_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "1",
			   "maxInclusive", "12"
		   });
		addAnnotation
		  (fiscalYearNameTypeEEnum,
		   source,
		   new String[] {
			   "name", "FiscalYearName_._type"
		   });
		addAnnotation
		  (fiscalYearNameTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "FiscalYearName_._type:Object",
			   "baseType", "FiscalYearName_._type"
		   });
		addAnnotation
		  (folderEClass,
		   source,
		   new String[] {
			   "name", "Folder",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getFolder_Original(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Original"
		   });
		addAnnotation
		  (getFolder_New(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "New"
		   });
		addAnnotation
		  (foldingParametersEClass,
		   source,
		   new String[] {
			   "name", "FoldingParameters",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getFoldingParameters_FoldIndex(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FoldIndex"
		   });
		addAnnotation
		  (getFoldingParameters_FoldCount(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FoldCount"
		   });
		addAnnotation
		  (getFoldingParameters_FoldMaxCases(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FoldMaxCases"
		   });
		addAnnotation
		  (getFoldingParameters_FoldTargetAttribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FoldTargetAttribute"
		   });
		addAnnotation
		  (foreignKeyColumnsTypeEClass,
		   source,
		   new String[] {
			   "name", "ForeignKeyColumns_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getForeignKeyColumnsType_ForeignKeyColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForeignKeyColumn"
		   });
		addAnnotation
		  (foreignKeyColumnsType1EClass,
		   source,
		   new String[] {
			   "name", "ForeignKeyColumns_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getForeignKeyColumnsType1_ForeignKeyColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForeignKeyColumn"
		   });
		addAnnotation
		  (foreignKeyColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "ForeignKeyColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getForeignKeyColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (formatTypeEEnum,
		   source,
		   new String[] {
			   "name", "Format_._type"
		   });
		addAnnotation
		  (formatType1EEnum,
		   source,
		   new String[] {
			   "name", "Format_._1_._type"
		   });
		addAnnotation
		  (formatTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Format_._type:Object",
			   "baseType", "Format_._type"
		   });
		addAnnotation
		  (formatTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Format_._1_._type:Object",
			   "baseType", "Format_._1_._type"
		   });
		addAnnotation
		  (globalTypeEClass,
		   source,
		   new String[] {
			   "name", "global_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getGlobalType_Module(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "module"
		   });
		addAnnotation
		  (getGlobalType_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getGlobalType_Package(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "package"
		   });
		addAnnotation
		  (groupEClass,
		   source,
		   new String[] {
			   "name", "Group",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGroup_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getGroup_Members(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Members"
		   });
		addAnnotation
		  (groupingBehaviorTypeEEnum,
		   source,
		   new String[] {
			   "name", "GroupingBehavior_._type"
		   });
		addAnnotation
		  (groupingBehaviorTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "GroupingBehavior_._type:Object",
			   "baseType", "GroupingBehavior_._type"
		   });
		addAnnotation
		  (groupsTypeEClass,
		   source,
		   new String[] {
			   "name", "Groups_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getGroupsType_Group(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Group"
		   });
		addAnnotation
		  (hideMemberIfTypeEEnum,
		   source,
		   new String[] {
			   "name", "HideMemberIf_._type"
		   });
		addAnnotation
		  (hideMemberIfTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "HideMemberIf_._type:Object",
			   "baseType", "HideMemberIf_._type"
		   });
		addAnnotation
		  (hierarchiesTypeEClass,
		   source,
		   new String[] {
			   "name", "Hierarchies_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getHierarchiesType_Hierarchy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Hierarchy"
		   });
		addAnnotation
		  (hierarchiesType1EClass,
		   source,
		   new String[] {
			   "name", "Hierarchies_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getHierarchiesType1_Hierarchy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Hierarchy"
		   });
		addAnnotation
		  (hierarchiesType2EClass,
		   source,
		   new String[] {
			   "name", "Hierarchies_._2_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getHierarchiesType2_Hierarchy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Hierarchy"
		   });
		addAnnotation
		  (hierarchyEClass,
		   source,
		   new String[] {
			   "name", "Hierarchy",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getHierarchy_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getHierarchy_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getHierarchy_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getHierarchy_ProcessingState(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingState",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (getHierarchy_StructureType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StructureType",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (getHierarchy_DisplayFolder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisplayFolder"
		   });
		addAnnotation
		  (getHierarchy_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getHierarchy_AllMemberName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllMemberName"
		   });
		addAnnotation
		  (getHierarchy_AllMemberTranslations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllMemberTranslations"
		   });
		addAnnotation
		  (getHierarchy_MemberNamesUnique(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MemberNamesUnique"
		   });
		addAnnotation
		  (getHierarchy_MemberKeysUnique(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MemberKeysUnique",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2003/engine/2"
		   });
		addAnnotation
		  (getHierarchy_AllowDuplicateNames(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowDuplicateNames"
		   });
		addAnnotation
		  (getHierarchy_Levels(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Levels"
		   });
		addAnnotation
		  (getHierarchy_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getHierarchy_VisualizationProperties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "VisualizationProperties"
		   });
		addAnnotation
		  (hierarchyUniqueNameStyleTypeEEnum,
		   source,
		   new String[] {
			   "name", "HierarchyUniqueNameStyle_._type"
		   });
		addAnnotation
		  (hierarchyUniqueNameStyleTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "HierarchyUniqueNameStyle_._type:Object",
			   "baseType", "HierarchyUniqueNameStyle_._type"
		   });
		addAnnotation
		  (idTypeEDataType,
		   source,
		   new String[] {
			   "name", "ID_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#token",
			   "pattern", "[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]%20{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}"
		   });
		addAnnotation
		  (idType1EDataType,
		   source,
		   new String[] {
			   "name", "ID_._1_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#token",
			   "pattern", "[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]%20{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}"
		   });
		addAnnotation
		  (imageLoadEClass,
		   source,
		   new String[] {
			   "name", "ImageLoad",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getImageLoad_ImagePath(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImagePath",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getImageLoad_ImageUrl(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageUrl",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getImageLoad_ImageUniqueID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageUniqueID",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getImageLoad_ImageVersion(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImageVersion",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getImageLoad_ReadWriteMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReadWriteMode",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100"
		   });
		addAnnotation
		  (getImageLoad_DbStorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbStorageLocation",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getImageLoad_DatabaseName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseName"
		   });
		addAnnotation
		  (getImageLoad_DatabaseID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseID"
		   });
		addAnnotation
		  (getImageLoad_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data"
		   });
		addAnnotation
		  (imageSaveEClass,
		   source,
		   new String[] {
			   "name", "ImageSave",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getImageSave_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getImageSave_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data"
		   });
		addAnnotation
		  (incrementalProcessingNotificationEClass,
		   source,
		   new String[] {
			   "name", "IncrementalProcessingNotification",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getIncrementalProcessingNotification_TableID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableID"
		   });
		addAnnotation
		  (getIncrementalProcessingNotification_ProcessingQuery(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingQuery"
		   });
		addAnnotation
		  (incrementalProcessingNotificationsTypeEClass,
		   source,
		   new String[] {
			   "name", "IncrementalProcessingNotifications_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getIncrementalProcessingNotificationsType_IncrementalProcessingNotification(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "IncrementalProcessingNotification"
		   });
		addAnnotation
		  (inheritedBindingEClass,
		   source,
		   new String[] {
			   "name", "InheritedBinding",
			   "kind", "empty"
		   });
		addAnnotation
		  (insertEClass,
		   source,
		   new String[] {
			   "name", "Insert",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getInsert_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getInsert_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (instanceSelectionTypeEEnum,
		   source,
		   new String[] {
			   "name", "InstanceSelection_._type"
		   });
		addAnnotation
		  (instanceSelectionTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "InstanceSelection_._type:Object",
			   "baseType", "InstanceSelection_._type"
		   });
		addAnnotation
		  (invalidXmlCharactersTypeEEnum,
		   source,
		   new String[] {
			   "name", "InvalidXmlCharacters_._type"
		   });
		addAnnotation
		  (invalidXmlCharactersTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "InvalidXmlCharacters_._type:Object",
			   "baseType", "InvalidXmlCharacters_._type"
		   });
		addAnnotation
		  (invocationTypeEEnum,
		   source,
		   new String[] {
			   "name", "Invocation_._type"
		   });
		addAnnotation
		  (invocationType1EEnum,
		   source,
		   new String[] {
			   "name", "Invocation_._1_._type"
		   });
		addAnnotation
		  (invocationType2EEnum,
		   source,
		   new String[] {
			   "name", "Invocation_._2_._type"
		   });
		addAnnotation
		  (invocationTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Invocation_._type:Object",
			   "baseType", "Invocation_._type"
		   });
		addAnnotation
		  (invocationTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Invocation_._1_._type:Object",
			   "baseType", "Invocation_._1_._type"
		   });
		addAnnotation
		  (invocationTypeObject2EDataType,
		   source,
		   new String[] {
			   "name", "Invocation_._2_._type:Object",
			   "baseType", "Invocation_._2_._type"
		   });
		addAnnotation
		  (isolationTypeEEnum,
		   source,
		   new String[] {
			   "name", "Isolation_._type"
		   });
		addAnnotation
		  (isolationTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Isolation_._type:Object",
			   "baseType", "Isolation_._type"
		   });
		addAnnotation
		  (keepResultTypeEClass,
		   source,
		   new String[] {
			   "name", "KeepResult_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (keyColumnsTypeEClass,
		   source,
		   new String[] {
			   "name", "KeyColumns_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeyColumnsType_KeyColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumn"
		   });
		addAnnotation
		  (keyColumnsType1EClass,
		   source,
		   new String[] {
			   "name", "KeyColumns_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeyColumnsType1_KeyColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumn"
		   });
		addAnnotation
		  (keyColumnsType2EClass,
		   source,
		   new String[] {
			   "name", "KeyColumns_._2_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeyColumnsType2_KeyColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumn"
		   });
		addAnnotation
		  (keyColumnsType3EClass,
		   source,
		   new String[] {
			   "name", "KeyColumns_._3_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeyColumnsType3_KeyColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumn"
		   });
		addAnnotation
		  (keyColumnsType4EClass,
		   source,
		   new String[] {
			   "name", "KeyColumns_._4_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeyColumnsType4_KeyColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumn"
		   });
		addAnnotation
		  (keyColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "KeyColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeyColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (keyDuplicateTypeEEnum,
		   source,
		   new String[] {
			   "name", "KeyDuplicate_._type"
		   });
		addAnnotation
		  (keyDuplicateTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "KeyDuplicate_._type:Object",
			   "baseType", "KeyDuplicate_._type"
		   });
		addAnnotation
		  (keyErrorActionTypeEEnum,
		   source,
		   new String[] {
			   "name", "KeyErrorAction_._type"
		   });
		addAnnotation
		  (keyErrorActionTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "KeyErrorAction_._type:Object",
			   "baseType", "KeyErrorAction_._type"
		   });
		addAnnotation
		  (keyErrorLimitActionTypeEEnum,
		   source,
		   new String[] {
			   "name", "KeyErrorLimitAction_._type"
		   });
		addAnnotation
		  (keyErrorLimitActionTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "KeyErrorLimitAction_._type:Object",
			   "baseType", "KeyErrorLimitAction_._type"
		   });
		addAnnotation
		  (keyNotFoundTypeEEnum,
		   source,
		   new String[] {
			   "name", "KeyNotFound_._type"
		   });
		addAnnotation
		  (keyNotFoundTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "KeyNotFound_._type:Object",
			   "baseType", "KeyNotFound_._type"
		   });
		addAnnotation
		  (keysTypeEClass,
		   source,
		   new String[] {
			   "name", "Keys_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeysType_Key(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Key"
		   });
		addAnnotation
		  (keysType1EClass,
		   source,
		   new String[] {
			   "name", "Keys_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKeysType1_Key(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Key"
		   });
		addAnnotation
		  (kpiEClass,
		   source,
		   new String[] {
			   "name", "Kpi",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKpi_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getKpi_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getKpi_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getKpi_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getKpi_DisplayFolder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisplayFolder"
		   });
		addAnnotation
		  (getKpi_AssociatedMeasureGroupID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AssociatedMeasureGroupID"
		   });
		addAnnotation
		  (getKpi_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (getKpi_Goal(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Goal"
		   });
		addAnnotation
		  (getKpi_Status(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Status"
		   });
		addAnnotation
		  (getKpi_Trend(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Trend"
		   });
		addAnnotation
		  (getKpi_Weight(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Weight"
		   });
		addAnnotation
		  (getKpi_TrendGraphic(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TrendGraphic"
		   });
		addAnnotation
		  (getKpi_StatusGraphic(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StatusGraphic"
		   });
		addAnnotation
		  (getKpi_CurrentTimeMember(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CurrentTimeMember"
		   });
		addAnnotation
		  (getKpi_ParentKpiID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ParentKpiID"
		   });
		addAnnotation
		  (getKpi_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (kpisTypeEClass,
		   source,
		   new String[] {
			   "name", "Kpis_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKpisType_Kpi(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Kpi"
		   });
		addAnnotation
		  (kpisType1EClass,
		   source,
		   new String[] {
			   "name", "Kpis_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getKpisType1_Kpi(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Kpi"
		   });
		addAnnotation
		  (levelEClass,
		   source,
		   new String[] {
			   "name", "Level",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLevel_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getLevel_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getLevel_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getLevel_SourceAttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SourceAttributeID"
		   });
		addAnnotation
		  (getLevel_HideMemberIf(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HideMemberIf"
		   });
		addAnnotation
		  (getLevel_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getLevel_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (levelsTypeEClass,
		   source,
		   new String[] {
			   "name", "Levels_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLevelsType_Level(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Level"
		   });
		addAnnotation
		  (locationEClass,
		   source,
		   new String[] {
			   "name", "Location",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (locationBackupEClass,
		   source,
		   new String[] {
			   "name", "Location_Backup",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLocationBackup_File(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "File"
		   });
		addAnnotation
		  (getLocationBackup_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (locationsTypeEClass,
		   source,
		   new String[] {
			   "name", "Locations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLocationsType_Location(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Location"
		   });
		addAnnotation
		  (locationsType1EClass,
		   source,
		   new String[] {
			   "name", "Locations_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLocationsType1_Location(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Location"
		   });
		addAnnotation
		  (locationsType2EClass,
		   source,
		   new String[] {
			   "name", "Locations_._2_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLocationsType2_Location(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Location"
		   });
		addAnnotation
		  (lockEClass,
		   source,
		   new String[] {
			   "name", "Lock",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getLock_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getLock_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getLock_Mode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Mode"
		   });
		addAnnotation
		  (majorObjectEClass,
		   source,
		   new String[] {
			   "name", "MajorObject",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMajorObject_AggregationDesign(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationDesign"
		   });
		addAnnotation
		  (getMajorObject_Assembly(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Assembly"
		   });
		addAnnotation
		  (getMajorObject_Cube(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cube"
		   });
		addAnnotation
		  (getMajorObject_Database(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Database"
		   });
		addAnnotation
		  (getMajorObject_DataSource(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSource"
		   });
		addAnnotation
		  (getMajorObject_DataSourceView(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceView"
		   });
		addAnnotation
		  (getMajorObject_Dimension(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimension"
		   });
		addAnnotation
		  (getMajorObject_MdxScript(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdxScript"
		   });
		addAnnotation
		  (getMajorObject_MeasureGroup(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroup"
		   });
		addAnnotation
		  (getMajorObject_MiningModel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModel"
		   });
		addAnnotation
		  (getMajorObject_MiningStructure(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructure"
		   });
		addAnnotation
		  (getMajorObject_Partition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Partition"
		   });
		addAnnotation
		  (getMajorObject_Permission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Permission"
		   });
		addAnnotation
		  (getMajorObject_Perspective(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Perspective"
		   });
		addAnnotation
		  (getMajorObject_Role(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Role"
		   });
		addAnnotation
		  (getMajorObject_Server(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Server"
		   });
		addAnnotation
		  (getMajorObject_Trace(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Trace"
		   });
		addAnnotation
		  (manufacturingExtraMonthQuarterTypeEDataType,
		   source,
		   new String[] {
			   "name", "ManufacturingExtraMonthQuarter_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "1",
			   "maxInclusive", "4"
		   });
		addAnnotation
		  (manufacturingFirstMonthTypeEDataType,
		   source,
		   new String[] {
			   "name", "ManufacturingFirstMonth_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "1",
			   "maxInclusive", "12"
		   });
		addAnnotation
		  (manufacturingFirstWeekOfMonthTypeEDataType,
		   source,
		   new String[] {
			   "name", "ManufacturingFirstWeekOfMonth_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "1",
			   "maxInclusive", "4"
		   });
		addAnnotation
		  (manyToManyMeasureGroupDimensionEClass,
		   source,
		   new String[] {
			   "name", "ManyToManyMeasureGroupDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getManyToManyMeasureGroupDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getManyToManyMeasureGroupDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getManyToManyMeasureGroupDimension_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getManyToManyMeasureGroupDimension_MeasureGroupID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroupID"
		   });
		addAnnotation
		  (getManyToManyMeasureGroupDimension_DirectSlice(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DirectSlice"
		   });
		addAnnotation
		  (materializationTypeEEnum,
		   source,
		   new String[] {
			   "name", "Materialization_._type"
		   });
		addAnnotation
		  (materializationTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Materialization_._type:Object",
			   "baseType", "Materialization_._type"
		   });
		addAnnotation
		  (mdpropAggregateCellUpdateTypeEEnum,
		   source,
		   new String[] {
			   "name", "MdpropAggregateCellUpdate_._type"
		   });
		addAnnotation
		  (mdpropAggregateCellUpdateTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MdpropAggregateCellUpdate_._type:Object",
			   "baseType", "MdpropAggregateCellUpdate_._type"
		   });
		addAnnotation
		  (mdpropFlatteningSupportTypeEEnum,
		   source,
		   new String[] {
			   "name", "MdpropFlatteningSupport_._type"
		   });
		addAnnotation
		  (mdpropFlatteningSupportTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MdpropFlatteningSupport_._type:Object",
			   "baseType", "MdpropFlatteningSupport_._type"
		   });
		addAnnotation
		  (mdpropMdxNonMeasureExpressionsTypeEEnum,
		   source,
		   new String[] {
			   "name", "MdpropMdxNonMeasureExpressions_._type"
		   });
		addAnnotation
		  (mdpropMdxNonMeasureExpressionsTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MdpropMdxNonMeasureExpressions_._type:Object",
			   "baseType", "MdpropMdxNonMeasureExpressions_._type"
		   });
		addAnnotation
		  (mdpropMdxRangeRowsetTypeEEnum,
		   source,
		   new String[] {
			   "name", "MdpropMdxRangeRowset_._type"
		   });
		addAnnotation
		  (mdpropMdxRangeRowsetTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MdpropMdxRangeRowset_._type:Object",
			   "baseType", "MdpropMdxRangeRowset_._type"
		   });
		addAnnotation
		  (mdpropMdxSlicerTypeEEnum,
		   source,
		   new String[] {
			   "name", "MdpropMdxSlicer_._type"
		   });
		addAnnotation
		  (mdpropMdxSlicerTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MdpropMdxSlicer_._type:Object",
			   "baseType", "MdpropMdxSlicer_._type"
		   });
		addAnnotation
		  (mdxMissingMemberModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "MdxMissingMemberMode_._type"
		   });
		addAnnotation
		  (mdxMissingMemberModeType1EEnum,
		   source,
		   new String[] {
			   "name", "MdxMissingMemberMode_._1_._type"
		   });
		addAnnotation
		  (mdxMissingMemberModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MdxMissingMemberMode_._type:Object",
			   "baseType", "MdxMissingMemberMode_._type"
		   });
		addAnnotation
		  (mdxMissingMemberModeTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "MdxMissingMemberMode_._1_._type:Object",
			   "baseType", "MdxMissingMemberMode_._1_._type"
		   });
		addAnnotation
		  (mdxScriptEClass,
		   source,
		   new String[] {
			   "name", "MdxScript",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMdxScript_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getMdxScript_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getMdxScript_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getMdxScript_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getMdxScript_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getMdxScript_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getMdxScript_Commands(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Commands"
		   });
		addAnnotation
		  (getMdxScript_DefaultScript(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultScript"
		   });
		addAnnotation
		  (getMdxScript_CalculationProperties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalculationProperties"
		   });
		addAnnotation
		  (mdxScriptsTypeEClass,
		   source,
		   new String[] {
			   "name", "MdxScripts_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMdxScriptsType_MdxScript(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdxScript"
		   });
		addAnnotation
		  (mdxSupportTypeEEnum,
		   source,
		   new String[] {
			   "name", "MDXSupport_._type"
		   });
		addAnnotation
		  (mdxSupportTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MDXSupport_._type:Object",
			   "baseType", "MDXSupport_._type"
		   });
		addAnnotation
		  (measureEClass,
		   source,
		   new String[] {
			   "name", "Measure",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasure_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getMeasure_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getMeasure_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getMeasure_AggregateFunction(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregateFunction"
		   });
		addAnnotation
		  (getMeasure_DataType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataType"
		   });
		addAnnotation
		  (getMeasure_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getMeasure_Visible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Visible"
		   });
		addAnnotation
		  (getMeasure_MeasureExpression(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureExpression"
		   });
		addAnnotation
		  (getMeasure_DisplayFolder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisplayFolder"
		   });
		addAnnotation
		  (getMeasure_FormatString(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FormatString"
		   });
		addAnnotation
		  (getMeasure_BackColor(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BackColor"
		   });
		addAnnotation
		  (getMeasure_ForeColor(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForeColor"
		   });
		addAnnotation
		  (getMeasure_FontName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FontName"
		   });
		addAnnotation
		  (getMeasure_FontSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FontSize"
		   });
		addAnnotation
		  (getMeasure_FontFlags(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FontFlags"
		   });
		addAnnotation
		  (getMeasure_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getMeasure_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (measureBindingEClass,
		   source,
		   new String[] {
			   "name", "MeasureBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasureBinding_MeasureID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureID"
		   });
		addAnnotation
		  (measureGroupEClass,
		   source,
		   new String[] {
			   "name", "MeasureGroup",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasureGroup_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getMeasureGroup_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getMeasureGroup_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getMeasureGroup_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getMeasureGroup_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getMeasureGroup_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getMeasureGroup_LastProcessed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastProcessed"
		   });
		addAnnotation
		  (getMeasureGroup_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getMeasureGroup_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getMeasureGroup_State(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "State"
		   });
		addAnnotation
		  (getMeasureGroup_Measures(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Measures"
		   });
		addAnnotation
		  (getMeasureGroup_DataAggregation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataAggregation"
		   });
		addAnnotation
		  (getMeasureGroup_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getMeasureGroup_StorageMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageMode"
		   });
		addAnnotation
		  (getMeasureGroup_StorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageLocation"
		   });
		addAnnotation
		  (getMeasureGroup_IgnoreUnrelatedDimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "IgnoreUnrelatedDimensions"
		   });
		addAnnotation
		  (getMeasureGroup_ProactiveCaching(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProactiveCaching"
		   });
		addAnnotation
		  (getMeasureGroup_EstimatedRows(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedRows"
		   });
		addAnnotation
		  (getMeasureGroup_ErrorConfiguration(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ErrorConfiguration"
		   });
		addAnnotation
		  (getMeasureGroup_EstimatedSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedSize"
		   });
		addAnnotation
		  (getMeasureGroup_ProcessingMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingMode"
		   });
		addAnnotation
		  (getMeasureGroup_Dimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimensions"
		   });
		addAnnotation
		  (getMeasureGroup_Partitions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Partitions"
		   });
		addAnnotation
		  (getMeasureGroup_AggregationPrefix(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationPrefix"
		   });
		addAnnotation
		  (getMeasureGroup_ProcessingPriority(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingPriority"
		   });
		addAnnotation
		  (getMeasureGroup_AggregationDesigns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationDesigns"
		   });
		addAnnotation
		  (measureGroupAttributeEClass,
		   source,
		   new String[] {
			   "name", "MeasureGroupAttribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasureGroupAttribute_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getMeasureGroupAttribute_KeyColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumns"
		   });
		addAnnotation
		  (getMeasureGroupAttribute_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getMeasureGroupAttribute_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (measureGroupBindingEClass,
		   source,
		   new String[] {
			   "name", "MeasureGroupBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasureGroupBinding_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (getMeasureGroupBinding_CubeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeID"
		   });
		addAnnotation
		  (getMeasureGroupBinding_MeasureGroupID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroupID"
		   });
		addAnnotation
		  (getMeasureGroupBinding_Persistence(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Persistence"
		   });
		addAnnotation
		  (getMeasureGroupBinding_RefreshPolicy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RefreshPolicy"
		   });
		addAnnotation
		  (getMeasureGroupBinding_RefreshInterval(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RefreshInterval"
		   });
		addAnnotation
		  (getMeasureGroupBinding_Filter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Filter"
		   });
		addAnnotation
		  (measureGroupDimensionEClass,
		   source,
		   new String[] {
			   "name", "MeasureGroupDimension",
			   "kind", "empty"
		   });
		addAnnotation
		  (measureGroupDimensionBindingEClass,
		   source,
		   new String[] {
			   "name", "MeasureGroupDimensionBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasureGroupDimensionBinding_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (measureGroupStorageModeEnumTypeEEnum,
		   source,
		   new String[] {
			   "name", "MeasureGroupStorageModeEnumType"
		   });
		addAnnotation
		  (measureGroupStorageModeEnumTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MeasureGroupStorageModeEnumType:Object",
			   "baseType", "MeasureGroupStorageModeEnumType"
		   });
		addAnnotation
		  (measureGroupsTypeEClass,
		   source,
		   new String[] {
			   "name", "MeasureGroups_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasureGroupsType_MeasureGroup(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroup"
		   });
		addAnnotation
		  (measureGroupsType1EClass,
		   source,
		   new String[] {
			   "name", "MeasureGroups_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasureGroupsType1_MeasureGroup(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroup"
		   });
		addAnnotation
		  (measuresTypeEClass,
		   source,
		   new String[] {
			   "name", "Measures_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasuresType_Measure(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Measure"
		   });
		addAnnotation
		  (measuresType1EClass,
		   source,
		   new String[] {
			   "name", "Measures_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasuresType1_Measure(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Measure"
		   });
		addAnnotation
		  (measuresType2EClass,
		   source,
		   new String[] {
			   "name", "Measures_._2_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMeasuresType2_Measure(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Measure"
		   });
		addAnnotation
		  (memberEClass,
		   source,
		   new String[] {
			   "name", "Member",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMember_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getMember_Sid(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Sid"
		   });
		addAnnotation
		  (membersTypeEClass,
		   source,
		   new String[] {
			   "name", "Members_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMembersType_Member(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Member"
		   });
		addAnnotation
		  (membersType1EClass,
		   source,
		   new String[] {
			   "name", "Members_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMembersType1_Member(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Member"
		   });
		addAnnotation
		  (membersWithDataTypeEEnum,
		   source,
		   new String[] {
			   "name", "MembersWithData_._type"
		   });
		addAnnotation
		  (membersWithDataTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MembersWithData_._type:Object",
			   "baseType", "MembersWithData_._type"
		   });
		addAnnotation
		  (memberUniqueNameStyleTypeEEnum,
		   source,
		   new String[] {
			   "name", "MemberUniqueNameStyle_._type"
		   });
		addAnnotation
		  (memberUniqueNameStyleTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MemberUniqueNameStyle_._type:Object",
			   "baseType", "MemberUniqueNameStyle_._type"
		   });
		addAnnotation
		  (memoryLockingModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "MemoryLockingMode_._type"
		   });
		addAnnotation
		  (memoryLockingModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "MemoryLockingMode_._type:Object",
			   "baseType", "MemoryLockingMode_._type"
		   });
		addAnnotation
		  (mergePartitionsEClass,
		   source,
		   new String[] {
			   "name", "MergePartitions",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMergePartitions_Sources(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Sources"
		   });
		addAnnotation
		  (getMergePartitions_Target(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Target"
		   });
		addAnnotation
		  (miningModelEClass,
		   source,
		   new String[] {
			   "name", "MiningModel",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningModel_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getMiningModel_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getMiningModel_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getMiningModel_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getMiningModel_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getMiningModel_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getMiningModel_Algorithm(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Algorithm"
		   });
		addAnnotation
		  (getMiningModel_LastProcessed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastProcessed"
		   });
		addAnnotation
		  (getMiningModel_AlgorithmParameters(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AlgorithmParameters"
		   });
		addAnnotation
		  (getMiningModel_AllowDrillThrough(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowDrillThrough"
		   });
		addAnnotation
		  (getMiningModel_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getMiningModel_Columns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Columns"
		   });
		addAnnotation
		  (getMiningModel_State(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "State"
		   });
		addAnnotation
		  (getMiningModel_FoldingParameters(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FoldingParameters"
		   });
		addAnnotation
		  (getMiningModel_Filter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Filter"
		   });
		addAnnotation
		  (getMiningModel_MiningModelPermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModelPermissions"
		   });
		addAnnotation
		  (getMiningModel_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getMiningModel_Collation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Collation"
		   });
		addAnnotation
		  (miningModelColumnEClass,
		   source,
		   new String[] {
			   "name", "MiningModelColumn",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningModelColumn_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getMiningModelColumn_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getMiningModelColumn_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getMiningModelColumn_SourceColumnID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SourceColumnID"
		   });
		addAnnotation
		  (getMiningModelColumn_Usage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Usage"
		   });
		addAnnotation
		  (getMiningModelColumn_Filter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Filter"
		   });
		addAnnotation
		  (getMiningModelColumn_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getMiningModelColumn_Columns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Columns"
		   });
		addAnnotation
		  (getMiningModelColumn_ModelingFlags(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ModelingFlags"
		   });
		addAnnotation
		  (getMiningModelColumn_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (miningModelingFlagEClass,
		   source,
		   new String[] {
			   "name", "MiningModelingFlag",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningModelingFlag_ModelingFlag(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ModelingFlag"
		   });
		addAnnotation
		  (miningModelPermissionEClass,
		   source,
		   new String[] {
			   "name", "MiningModelPermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningModelPermission_AllowDrillThrough(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowDrillThrough"
		   });
		addAnnotation
		  (getMiningModelPermission_AllowBrowsing(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowBrowsing"
		   });
		addAnnotation
		  (getMiningModelPermission_Write(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Write"
		   });
		addAnnotation
		  (miningModelPermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "MiningModelPermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningModelPermissionsType_MiningModelPermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModelPermission"
		   });
		addAnnotation
		  (miningModelsTypeEClass,
		   source,
		   new String[] {
			   "name", "MiningModels_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningModelsType_MiningModel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModel"
		   });
		addAnnotation
		  (miningStructureEClass,
		   source,
		   new String[] {
			   "name", "MiningStructure",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningStructure_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getMiningStructure_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getMiningStructure_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getMiningStructure_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getMiningStructure_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getMiningStructure_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getMiningStructure_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getMiningStructure_LastProcessed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastProcessed"
		   });
		addAnnotation
		  (getMiningStructure_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getMiningStructure_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getMiningStructure_Collation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Collation"
		   });
		addAnnotation
		  (getMiningStructure_ErrorConfiguration(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ErrorConfiguration"
		   });
		addAnnotation
		  (getMiningStructure_CacheMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CacheMode"
		   });
		addAnnotation
		  (getMiningStructure_HoldoutMaxPercent(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HoldoutMaxPercent",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getMiningStructure_HoldoutMaxCases(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HoldoutMaxCases",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getMiningStructure_HoldoutSeed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HoldoutSeed",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getMiningStructure_HoldoutActualSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HoldoutActualSize",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getMiningStructure_Columns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Columns"
		   });
		addAnnotation
		  (getMiningStructure_State(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "State"
		   });
		addAnnotation
		  (getMiningStructure_MiningStructurePermissions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructurePermissions"
		   });
		addAnnotation
		  (getMiningStructure_MiningModels(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModels"
		   });
		addAnnotation
		  (miningStructureColumnEClass,
		   source,
		   new String[] {
			   "name", "MiningStructureColumn",
			   "kind", "empty"
		   });
		addAnnotation
		  (miningStructurePermissionEClass,
		   source,
		   new String[] {
			   "name", "MiningStructurePermission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningStructurePermission_AllowDrillThrough(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowDrillThrough"
		   });
		addAnnotation
		  (getMiningStructurePermission_Write(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Write"
		   });
		addAnnotation
		  (miningStructurePermissionsTypeEClass,
		   source,
		   new String[] {
			   "name", "MiningStructurePermissions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningStructurePermissionsType_MiningStructurePermission(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructurePermission"
		   });
		addAnnotation
		  (miningStructuresTypeEClass,
		   source,
		   new String[] {
			   "name", "MiningStructures_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getMiningStructuresType_MiningStructure(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructure"
		   });
		addAnnotation
		  (modelingFlagsTypeEClass,
		   source,
		   new String[] {
			   "name", "ModelingFlags_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getModelingFlagsType_ModelingFlag(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ModelingFlag"
		   });
		addAnnotation
		  (modelingFlagsType1EClass,
		   source,
		   new String[] {
			   "name", "ModelingFlags_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getModelingFlagsType1_ModelingFlag(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ModelingFlag"
		   });
		addAnnotation
		  (modeTypeEEnum,
		   source,
		   new String[] {
			   "name", "Mode_._type"
		   });
		addAnnotation
		  (modeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Mode_._type:Object",
			   "baseType", "Mode_._type"
		   });
		addAnnotation
		  (nameColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "NameColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getNameColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (namingTemplateTranslationsTypeEClass,
		   source,
		   new String[] {
			   "name", "NamingTemplateTranslations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getNamingTemplateTranslationsType_NamingTemplateTranslation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NamingTemplateTranslation"
		   });
		addAnnotation
		  (notificationTechniqueTypeEEnum,
		   source,
		   new String[] {
			   "name", "NotificationTechnique_._type"
		   });
		addAnnotation
		  (notificationTechniqueType1EEnum,
		   source,
		   new String[] {
			   "name", "NotificationTechnique_._1_._type"
		   });
		addAnnotation
		  (notificationTechniqueTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "NotificationTechnique_._type:Object",
			   "baseType", "NotificationTechnique_._type"
		   });
		addAnnotation
		  (notificationTechniqueTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "NotificationTechnique_._1_._type:Object",
			   "baseType", "NotificationTechnique_._1_._type"
		   });
		addAnnotation
		  (notifyTableChangeEClass,
		   source,
		   new String[] {
			   "name", "NotifyTableChange",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getNotifyTableChange_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getNotifyTableChange_TableNotifications(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableNotifications"
		   });
		addAnnotation
		  (notTypeEClass,
		   source,
		   new String[] {
			   "name", "not_type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getNotType_Not(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Not"
		   });
		addAnnotation
		  (getNotType_Or(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Or"
		   });
		addAnnotation
		  (getNotType_And(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "And"
		   });
		addAnnotation
		  (getNotType_Equal(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Equal"
		   });
		addAnnotation
		  (getNotType_NotEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotEqual"
		   });
		addAnnotation
		  (getNotType_Less(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Less"
		   });
		addAnnotation
		  (getNotType_LessOrEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LessOrEqual"
		   });
		addAnnotation
		  (getNotType_Greater(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Greater"
		   });
		addAnnotation
		  (getNotType_GreaterOrEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GreaterOrEqual"
		   });
		addAnnotation
		  (getNotType_Like(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Like"
		   });
		addAnnotation
		  (getNotType_NotLike(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotLike"
		   });
		addAnnotation
		  (nullKeyConvertedToUnknownTypeEEnum,
		   source,
		   new String[] {
			   "name", "NullKeyConvertedToUnknown_._type"
		   });
		addAnnotation
		  (nullKeyConvertedToUnknownTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "NullKeyConvertedToUnknown_._type:Object",
			   "baseType", "NullKeyConvertedToUnknown_._type"
		   });
		addAnnotation
		  (nullKeyNotAllowedTypeEEnum,
		   source,
		   new String[] {
			   "name", "NullKeyNotAllowed_._type"
		   });
		addAnnotation
		  (nullKeyNotAllowedTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "NullKeyNotAllowed_._type:Object",
			   "baseType", "NullKeyNotAllowed_._type"
		   });
		addAnnotation
		  (nullProcessingTypeEEnum,
		   source,
		   new String[] {
			   "name", "NullProcessing_._type"
		   });
		addAnnotation
		  (nullProcessingTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "NullProcessing_._type:Object",
			   "baseType", "NullProcessing_._type"
		   });
		addAnnotation
		  (objectEClass,
		   source,
		   new String[] {
			   "name", "Object",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getObject_Database(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Database"
		   });
		addAnnotation
		  (getObject_Cube(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cube"
		   });
		addAnnotation
		  (getObject_Dimension(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimension"
		   });
		addAnnotation
		  (objectExpansionEEnum,
		   source,
		   new String[] {
			   "name", "ObjectExpansion"
		   });
		addAnnotation
		  (objectExpansionObjectEDataType,
		   source,
		   new String[] {
			   "name", "ObjectExpansion:Object",
			   "baseType", "ObjectExpansion"
		   });
		addAnnotation
		  (objectReferenceEClass,
		   source,
		   new String[] {
			   "name", "ObjectReference",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getObjectReference_ServerID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ServerID"
		   });
		addAnnotation
		  (getObjectReference_DatabaseID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseID"
		   });
		addAnnotation
		  (getObjectReference_RoleID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RoleID"
		   });
		addAnnotation
		  (getObjectReference_TraceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TraceID"
		   });
		addAnnotation
		  (getObjectReference_AssemblyID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AssemblyID"
		   });
		addAnnotation
		  (getObjectReference_DimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionID"
		   });
		addAnnotation
		  (getObjectReference_DimensionPermissionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionPermissionID"
		   });
		addAnnotation
		  (getObjectReference_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (getObjectReference_DataSourcePermissionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourcePermissionID"
		   });
		addAnnotation
		  (getObjectReference_DatabasePermissionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabasePermissionID"
		   });
		addAnnotation
		  (getObjectReference_DataSourceViewID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceViewID"
		   });
		addAnnotation
		  (getObjectReference_CubeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeID"
		   });
		addAnnotation
		  (getObjectReference_MiningStructureID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructureID"
		   });
		addAnnotation
		  (getObjectReference_MeasureGroupID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroupID"
		   });
		addAnnotation
		  (getObjectReference_PerspectiveID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PerspectiveID"
		   });
		addAnnotation
		  (getObjectReference_CubePermissionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubePermissionID"
		   });
		addAnnotation
		  (getObjectReference_MdxScriptID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdxScriptID"
		   });
		addAnnotation
		  (getObjectReference_PartitionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PartitionID"
		   });
		addAnnotation
		  (getObjectReference_AggregationDesignID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationDesignID"
		   });
		addAnnotation
		  (getObjectReference_MiningModelID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModelID"
		   });
		addAnnotation
		  (getObjectReference_MiningModelPermissionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModelPermissionID"
		   });
		addAnnotation
		  (getObjectReference_MiningStructurePermissionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructurePermissionID"
		   });
		addAnnotation
		  (objectTypeEClass,
		   source,
		   new String[] {
			   "name", "Object_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getObjectType_DatabaseID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseID"
		   });
		addAnnotation
		  (olapDataSourceEClass,
		   source,
		   new String[] {
			   "name", "OlapDataSource",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (onlineModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "OnlineMode_._type"
		   });
		addAnnotation
		  (onlineModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "OnlineMode_._type:Object",
			   "baseType", "OnlineMode_._type"
		   });
		addAnnotation
		  (optimizedStateTypeEEnum,
		   source,
		   new String[] {
			   "name", "OptimizedState_._type"
		   });
		addAnnotation
		  (optimizedStateTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "OptimizedState_._type:Object",
			   "baseType", "OptimizedState_._type"
		   });
		addAnnotation
		  (optionalityTypeEEnum,
		   source,
		   new String[] {
			   "name", "Optionality_._type"
		   });
		addAnnotation
		  (optionalityTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Optionality_._type:Object",
			   "baseType", "Optionality_._type"
		   });
		addAnnotation
		  (orderByTypeEEnum,
		   source,
		   new String[] {
			   "name", "OrderBy_._type"
		   });
		addAnnotation
		  (orderByTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "OrderBy_._type:Object",
			   "baseType", "OrderBy_._type"
		   });
		addAnnotation
		  (ordinalTypeEClass,
		   source,
		   new String[] {
			   "name", "Ordinal_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getOrdinalType_Ordinal(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Ordinal"
		   });
		addAnnotation
		  (outOfLineBindingEClass,
		   source,
		   new String[] {
			   "name", "OutOfLineBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getOutOfLineBinding_DatabaseID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseID"
		   });
		addAnnotation
		  (getOutOfLineBinding_DimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DimensionID"
		   });
		addAnnotation
		  (getOutOfLineBinding_CubeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeID"
		   });
		addAnnotation
		  (getOutOfLineBinding_MeasureGroupID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroupID"
		   });
		addAnnotation
		  (getOutOfLineBinding_PartitionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PartitionID"
		   });
		addAnnotation
		  (getOutOfLineBinding_MiningModelID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningModelID"
		   });
		addAnnotation
		  (getOutOfLineBinding_MiningStructureID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MiningStructureID"
		   });
		addAnnotation
		  (getOutOfLineBinding_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getOutOfLineBinding_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getOutOfLineBinding_MeasureID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureID"
		   });
		addAnnotation
		  (getOutOfLineBinding_ParentColumnID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ParentColumnID"
		   });
		addAnnotation
		  (getOutOfLineBinding_ColumnID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ColumnID"
		   });
		addAnnotation
		  (getOutOfLineBinding_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getOutOfLineBinding_NameColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NameColumn"
		   });
		addAnnotation
		  (getOutOfLineBinding_SkippedLevelsColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SkippedLevelsColumn"
		   });
		addAnnotation
		  (getOutOfLineBinding_CustomRollupColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CustomRollupColumn"
		   });
		addAnnotation
		  (getOutOfLineBinding_CustomRollupPropertiesColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CustomRollupPropertiesColumn"
		   });
		addAnnotation
		  (getOutOfLineBinding_ValueColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ValueColumn"
		   });
		addAnnotation
		  (getOutOfLineBinding_UnaryOperatorColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UnaryOperatorColumn"
		   });
		addAnnotation
		  (getOutOfLineBinding_KeyColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumns"
		   });
		addAnnotation
		  (getOutOfLineBinding_ForeignKeyColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForeignKeyColumns"
		   });
		addAnnotation
		  (getOutOfLineBinding_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (overrideBehaviorTypeEEnum,
		   source,
		   new String[] {
			   "name", "OverrideBehavior_._type"
		   });
		addAnnotation
		  (overrideBehaviorTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "OverrideBehavior_._type:Object",
			   "baseType", "OverrideBehavior_._type"
		   });
		addAnnotation
		  (parallelTypeEClass,
		   source,
		   new String[] {
			   "name", "Parallel_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getParallelType_Process(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Process"
		   });
		addAnnotation
		  (getParallelType_MaxParallel(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "MaxParallel"
		   });
		addAnnotation
		  (parametersEClass,
		   source,
		   new String[] {
			   "name", "Parameters",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getParameters_Parameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Parameter"
		   });
		addAnnotation
		  (parametersTypeEClass,
		   source,
		   new String[] {
			   "name", "Parameters_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getParametersType_Parameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Parameter"
		   });
		addAnnotation
		  (parameterTypeEEnum,
		   source,
		   new String[] {
			   "name", "Parameter_._type"
		   });
		addAnnotation
		  (parameterType1EEnum,
		   source,
		   new String[] {
			   "name", "Parameter_._1_._type"
		   });
		addAnnotation
		  (parameterType2EClass,
		   source,
		   new String[] {
			   "name", "parameter_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getParameterType2_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getParameterType2_Value(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "value"
		   });
		addAnnotation
		  (parameterTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Parameter_._type:Object",
			   "baseType", "Parameter_._type"
		   });
		addAnnotation
		  (parameterTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Parameter_._1_._type:Object",
			   "baseType", "Parameter_._1_._type"
		   });
		addAnnotation
		  (partitionEClass,
		   source,
		   new String[] {
			   "name", "Partition",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPartition_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getPartition_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getPartition_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getPartition_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getPartition_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getPartition_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getPartition_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getPartition_ProcessingPriority(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingPriority"
		   });
		addAnnotation
		  (getPartition_AggregationPrefix(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationPrefix"
		   });
		addAnnotation
		  (getPartition_StorageMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageMode"
		   });
		addAnnotation
		  (getPartition_ProcessingMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingMode"
		   });
		addAnnotation
		  (getPartition_ErrorConfiguration(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ErrorConfiguration"
		   });
		addAnnotation
		  (getPartition_StorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StorageLocation"
		   });
		addAnnotation
		  (getPartition_RemoteDatasourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RemoteDatasourceID"
		   });
		addAnnotation
		  (getPartition_Slice(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Slice"
		   });
		addAnnotation
		  (getPartition_ProactiveCaching(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProactiveCaching"
		   });
		addAnnotation
		  (getPartition_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getPartition_EstimatedSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedSize"
		   });
		addAnnotation
		  (getPartition_EstimatedRows(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EstimatedRows"
		   });
		addAnnotation
		  (getPartition_CurrentStorageMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CurrentStorageMode"
		   });
		addAnnotation
		  (getPartition_AggregationDesignID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationDesignID"
		   });
		addAnnotation
		  (getPartition_AggregationInstances(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationInstances"
		   });
		addAnnotation
		  (getPartition_AggregationInstanceSource(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationInstanceSource"
		   });
		addAnnotation
		  (getPartition_LastProcessed(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastProcessed"
		   });
		addAnnotation
		  (getPartition_State(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "State"
		   });
		addAnnotation
		  (getPartition_StringStoresCompatibilityLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StringStoresCompatibilityLevel",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (getPartition_CurrentStringStoresCompatibilityLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CurrentStringStoresCompatibilityLevel",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (getPartition_DirectQueryUsage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DirectQueryUsage",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300/300"
		   });
		addAnnotation
		  (partitionCurrentStorageModeEnumTypeEEnum,
		   source,
		   new String[] {
			   "name", "PartitionCurrentStorageModeEnumType"
		   });
		addAnnotation
		  (partitionCurrentStorageModeEnumTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "PartitionCurrentStorageModeEnumType:Object",
			   "baseType", "PartitionCurrentStorageModeEnumType"
		   });
		addAnnotation
		  (partitionModesEEnum,
		   source,
		   new String[] {
			   "name", "partitionModes"
		   });
		addAnnotation
		  (partitionModesObjectEDataType,
		   source,
		   new String[] {
			   "name", "partitionModes:Object",
			   "baseType", "partitionModes"
		   });
		addAnnotation
		  (partitionStorageModeEnumTypeEEnum,
		   source,
		   new String[] {
			   "name", "PartitionStorageModeEnumType"
		   });
		addAnnotation
		  (partitionStorageModeEnumTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "PartitionStorageModeEnumType:Object",
			   "baseType", "PartitionStorageModeEnumType"
		   });
		addAnnotation
		  (partitionsTypeEClass,
		   source,
		   new String[] {
			   "name", "Partitions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPartitionsType_Partition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Partition"
		   });
		addAnnotation
		  (permissionEClass,
		   source,
		   new String[] {
			   "name", "Permission",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPermission_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getPermission_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getPermission_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getPermission_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getPermission_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getPermission_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getPermission_RoleID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RoleID"
		   });
		addAnnotation
		  (getPermission_Process(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Process"
		   });
		addAnnotation
		  (getPermission_ReadDefinition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReadDefinition"
		   });
		addAnnotation
		  (getPermission_Read(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Read"
		   });
		addAnnotation
		  (permissionSetTypeEEnum,
		   source,
		   new String[] {
			   "name", "PermissionSet_._type"
		   });
		addAnnotation
		  (permissionSetTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "PermissionSet_._type:Object",
			   "baseType", "PermissionSet_._type"
		   });
		addAnnotation
		  (persistenceTypeEEnum,
		   source,
		   new String[] {
			   "name", "Persistence_._type"
		   });
		addAnnotation
		  (persistenceType1EEnum,
		   source,
		   new String[] {
			   "name", "Persistence_._1_._type"
		   });
		addAnnotation
		  (persistenceTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Persistence_._type:Object",
			   "baseType", "Persistence_._type"
		   });
		addAnnotation
		  (persistenceTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Persistence_._1_._type:Object",
			   "baseType", "Persistence_._1_._type"
		   });
		addAnnotation
		  (perspectiveEClass,
		   source,
		   new String[] {
			   "name", "Perspective",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspective_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getPerspective_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getPerspective_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getPerspective_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getPerspective_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getPerspective_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getPerspective_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getPerspective_DefaultMeasure(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultMeasure"
		   });
		addAnnotation
		  (getPerspective_Dimensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dimensions"
		   });
		addAnnotation
		  (getPerspective_MeasureGroups(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroups"
		   });
		addAnnotation
		  (getPerspective_Calculations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Calculations"
		   });
		addAnnotation
		  (getPerspective_Kpis(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Kpis"
		   });
		addAnnotation
		  (getPerspective_Actions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Actions"
		   });
		addAnnotation
		  (perspectiveActionEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveAction",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveAction_ActionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ActionID"
		   });
		addAnnotation
		  (getPerspectiveAction_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectiveAttributeEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveAttribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveAttribute_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getPerspectiveAttribute_AttributeHierarchyVisible(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeHierarchyVisible"
		   });
		addAnnotation
		  (getPerspectiveAttribute_DefaultMember(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultMember"
		   });
		addAnnotation
		  (getPerspectiveAttribute_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectiveCalculationEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveCalculation",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveCalculation_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getPerspectiveCalculation_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getPerspectiveCalculation_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectiveDimensionEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getPerspectiveDimension_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (getPerspectiveDimension_Hierarchies(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Hierarchies"
		   });
		addAnnotation
		  (getPerspectiveDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectiveHierarchyEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveHierarchy",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveHierarchy_HierarchyID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "HierarchyID"
		   });
		addAnnotation
		  (getPerspectiveHierarchy_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectiveKpiEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveKpi",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveKpi_KpiID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KpiID"
		   });
		addAnnotation
		  (getPerspectiveKpi_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectiveMeasureEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveMeasure",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveMeasure_MeasureID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureID"
		   });
		addAnnotation
		  (getPerspectiveMeasure_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectiveMeasureGroupEClass,
		   source,
		   new String[] {
			   "name", "PerspectiveMeasureGroup",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectiveMeasureGroup_MeasureGroupID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MeasureGroupID"
		   });
		addAnnotation
		  (getPerspectiveMeasureGroup_Measures(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Measures"
		   });
		addAnnotation
		  (getPerspectiveMeasureGroup_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (perspectivesTypeEClass,
		   source,
		   new String[] {
			   "name", "Perspectives_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPerspectivesType_Perspective(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Perspective"
		   });
		addAnnotation
		  (predLeafEClass,
		   source,
		   new String[] {
			   "name", "pred_leaf",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPredLeaf_Comparator(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "comparator"
		   });
		addAnnotation
		  (getPredLeaf_Event(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "event"
		   });
		addAnnotation
		  (getPredLeaf_Global(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "global"
		   });
		addAnnotation
		  (getPredLeaf_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "value"
		   });
		addAnnotation
		  (proactiveCachingEClass,
		   source,
		   new String[] {
			   "name", "ProactiveCaching",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProactiveCaching_OnlineMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "OnlineMode"
		   });
		addAnnotation
		  (getProactiveCaching_AggregationStorage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AggregationStorage"
		   });
		addAnnotation
		  (getProactiveCaching_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getProactiveCaching_SilenceInterval(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SilenceInterval"
		   });
		addAnnotation
		  (getProactiveCaching_Latency(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Latency"
		   });
		addAnnotation
		  (getProactiveCaching_SilenceOverrideInterval(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SilenceOverrideInterval"
		   });
		addAnnotation
		  (getProactiveCaching_ForceRebuildInterval(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForceRebuildInterval"
		   });
		addAnnotation
		  (getProactiveCaching_Enabled(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Enabled"
		   });
		addAnnotation
		  (proactiveCachingBindingEClass,
		   source,
		   new String[] {
			   "name", "ProactiveCachingBinding",
			   "kind", "empty"
		   });
		addAnnotation
		  (proactiveCachingIncrementalProcessingBindingEClass,
		   source,
		   new String[] {
			   "name", "ProactiveCachingIncrementalProcessingBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProactiveCachingIncrementalProcessingBinding_RefreshInterval(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RefreshInterval"
		   });
		addAnnotation
		  (getProactiveCachingIncrementalProcessingBinding_IncrementalProcessingNotifications(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "IncrementalProcessingNotifications"
		   });
		addAnnotation
		  (proactiveCachingInheritedBindingEClass,
		   source,
		   new String[] {
			   "name", "ProactiveCachingInheritedBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProactiveCachingInheritedBinding_NotificationTechnique(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotificationTechnique"
		   });
		addAnnotation
		  (proactiveCachingObjectNotificationBindingEClass,
		   source,
		   new String[] {
			   "name", "ProactiveCachingObjectNotificationBinding",
			   "kind", "empty"
		   });
		addAnnotation
		  (proactiveCachingQueryBindingEClass,
		   source,
		   new String[] {
			   "name", "ProactiveCachingQueryBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProactiveCachingQueryBinding_RefreshInterval(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RefreshInterval"
		   });
		addAnnotation
		  (getProactiveCachingQueryBinding_QueryNotifications(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "QueryNotifications"
		   });
		addAnnotation
		  (proactiveCachingTablesBindingEClass,
		   source,
		   new String[] {
			   "name", "ProactiveCachingTablesBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProactiveCachingTablesBinding_NotificationTechnique(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotificationTechnique"
		   });
		addAnnotation
		  (getProactiveCachingTablesBinding_TableNotifications(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableNotifications"
		   });
		addAnnotation
		  (processEClass,
		   source,
		   new String[] {
			   "name", "Process",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProcess_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getProcess_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getProcess_Bindings(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Bindings"
		   });
		addAnnotation
		  (getProcess_DataSource(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSource"
		   });
		addAnnotation
		  (getProcess_DataSourceView(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceView"
		   });
		addAnnotation
		  (getProcess_ErrorConfiguration(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ErrorConfiguration"
		   });
		addAnnotation
		  (getProcess_WriteBackTableCreation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "WriteBackTableCreation"
		   });
		addAnnotation
		  (processingGroupTypeEEnum,
		   source,
		   new String[] {
			   "name", "ProcessingGroup_._type"
		   });
		addAnnotation
		  (processingGroupTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ProcessingGroup_._type:Object",
			   "baseType", "ProcessingGroup_._type"
		   });
		addAnnotation
		  (processingModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._type"
		   });
		addAnnotation
		  (processingModeType1EEnum,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._1_._type"
		   });
		addAnnotation
		  (processingModeType2EEnum,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._2_._type"
		   });
		addAnnotation
		  (processingModeType3EEnum,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._3_._type"
		   });
		addAnnotation
		  (processingModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._type:Object",
			   "baseType", "ProcessingMode_._type"
		   });
		addAnnotation
		  (processingModeTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._2_._type:Object",
			   "baseType", "ProcessingMode_._2_._type"
		   });
		addAnnotation
		  (processingModeTypeObject2EDataType,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._1_._type:Object",
			   "baseType", "ProcessingMode_._1_._type"
		   });
		addAnnotation
		  (processingModeTypeObject3EDataType,
		   source,
		   new String[] {
			   "name", "ProcessingMode_._3_._type:Object",
			   "baseType", "ProcessingMode_._3_._type"
		   });
		addAnnotation
		  (processingStateTypeEEnum,
		   source,
		   new String[] {
			   "name", "ProcessingState_._type"
		   });
		addAnnotation
		  (processingStateTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ProcessingState_._type:Object",
			   "baseType", "ProcessingState_._type"
		   });
		addAnnotation
		  (propertiesEClass,
		   source,
		   new String[] {
			   "name", "Properties",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getProperties_PropertyList(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PropertyList"
		   });
		addAnnotation
		  (propertiesTypeEClass,
		   source,
		   new String[] {
			   "name", "Properties_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPropertiesType_PropertyList(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PropertyList"
		   });
		addAnnotation
		  (propertyListEClass,
		   source,
		   new String[] {
			   "name", "PropertyList",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPropertyList_DataSourceInfo(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceInfo"
		   });
		addAnnotation
		  (getPropertyList_Timeout(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Timeout"
		   });
		addAnnotation
		  (getPropertyList_UserName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UserName"
		   });
		addAnnotation
		  (getPropertyList_Password(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Password"
		   });
		addAnnotation
		  (getPropertyList_LocaleIdentifier(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LocaleIdentifier"
		   });
		addAnnotation
		  (getPropertyList_Catalog(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Catalog"
		   });
		addAnnotation
		  (getPropertyList_StateSupport(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StateSupport"
		   });
		addAnnotation
		  (getPropertyList_Content(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Content"
		   });
		addAnnotation
		  (getPropertyList_Format(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Format"
		   });
		addAnnotation
		  (getPropertyList_AxisFormat(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AxisFormat"
		   });
		addAnnotation
		  (getPropertyList_BeginRange(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BeginRange"
		   });
		addAnnotation
		  (getPropertyList_EndRange(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EndRange"
		   });
		addAnnotation
		  (getPropertyList_MDXSupport(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MDXSupport"
		   });
		addAnnotation
		  (getPropertyList_ProviderName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProviderName"
		   });
		addAnnotation
		  (getPropertyList_ProviderVersion(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProviderVersion"
		   });
		addAnnotation
		  (getPropertyList_DBMSVersion(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DBMSVersion"
		   });
		addAnnotation
		  (getPropertyList_ProviderType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProviderType"
		   });
		addAnnotation
		  (getPropertyList_ShowHiddenCubes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ShowHiddenCubes"
		   });
		addAnnotation
		  (getPropertyList_SQLSupport(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SQLSupport"
		   });
		addAnnotation
		  (getPropertyList_TransactionDDL(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TransactionDDL"
		   });
		addAnnotation
		  (getPropertyList_MaximumRows(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MaximumRows"
		   });
		addAnnotation
		  (getPropertyList_Roles(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Roles"
		   });
		addAnnotation
		  (getPropertyList_VisualMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "VisualMode"
		   });
		addAnnotation
		  (getPropertyList_EffectiveRoles(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EffectiveRoles"
		   });
		addAnnotation
		  (getPropertyList_EffectiveUserName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EffectiveUserName"
		   });
		addAnnotation
		  (getPropertyList_ServerName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ServerName"
		   });
		addAnnotation
		  (getPropertyList_CatalogLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CatalogLocation"
		   });
		addAnnotation
		  (getPropertyList_DbpropCatalogTerm(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropCatalogTerm"
		   });
		addAnnotation
		  (getPropertyList_DbpropCatalogUsage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropCatalogUsage"
		   });
		addAnnotation
		  (getPropertyList_DbpropColumnDefinition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropColumnDefinition"
		   });
		addAnnotation
		  (getPropertyList_DbpropConcatNullBehavior(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropConcatNullBehavior"
		   });
		addAnnotation
		  (getPropertyList_DbpropDataSourceReadOnly(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropDataSourceReadOnly"
		   });
		addAnnotation
		  (getPropertyList_DbpropGroupBy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropGroupBy"
		   });
		addAnnotation
		  (getPropertyList_DbpropHeterogeneousTables(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropHeterogeneousTables"
		   });
		addAnnotation
		  (getPropertyList_DbpropIdentifierCase(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropIdentifierCase"
		   });
		addAnnotation
		  (getPropertyList_DbpropMaxIndexSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMaxIndexSize"
		   });
		addAnnotation
		  (getPropertyList_DbpropMaxOpenChapters(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMaxOpenChapters"
		   });
		addAnnotation
		  (getPropertyList_DbpropMaxRowSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMaxRowSize"
		   });
		addAnnotation
		  (getPropertyList_DbpropMaxRowSizeIncludeBlob(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMaxRowSizeIncludeBlob"
		   });
		addAnnotation
		  (getPropertyList_DbpropMaxTablesInSelect(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMaxTablesInSelect"
		   });
		addAnnotation
		  (getPropertyList_DbpropMultiTableUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMultiTableUpdate"
		   });
		addAnnotation
		  (getPropertyList_DbpropNullCollation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropNullCollation"
		   });
		addAnnotation
		  (getPropertyList_DbpropOrderByColumnsInSelect(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropOrderByColumnsInSelect"
		   });
		addAnnotation
		  (getPropertyList_DbpropOutputParameterAvailable(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropOutputParameterAvailable"
		   });
		addAnnotation
		  (getPropertyList_DbpropPersistentIdType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropPersistentIdType"
		   });
		addAnnotation
		  (getPropertyList_DbpropPrepareAbortBehavior(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropPrepareAbortBehavior"
		   });
		addAnnotation
		  (getPropertyList_DbpropPrepareCommitBehavior(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropPrepareCommitBehavior"
		   });
		addAnnotation
		  (getPropertyList_DbpropProcedureTerm(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropProcedureTerm"
		   });
		addAnnotation
		  (getPropertyList_DbpropQuotedIdentifierCase(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropQuotedIdentifierCase"
		   });
		addAnnotation
		  (getPropertyList_DbpropSchemaUsage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropSchemaUsage"
		   });
		addAnnotation
		  (getPropertyList_DbpropSqlSupport(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropSqlSupport"
		   });
		addAnnotation
		  (getPropertyList_DbpropSubqueries(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropSubqueries"
		   });
		addAnnotation
		  (getPropertyList_DbpropSupportedTxnDdl(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropSupportedTxnDdl"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxSubqueries(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxSubqueries"
		   });
		addAnnotation
		  (getPropertyList_DbpropSupportedTxnIsoLevels(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropSupportedTxnIsoLevels"
		   });
		addAnnotation
		  (getPropertyList_DbpropSupportedTxnIsoRetain(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropSupportedTxnIsoRetain"
		   });
		addAnnotation
		  (getPropertyList_DbpropTableTerm(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropTableTerm"
		   });
		addAnnotation
		  (getPropertyList_MdpropAggregateCellUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropAggregateCellUpdate"
		   });
		addAnnotation
		  (getPropertyList_MdpropAxes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropAxes"
		   });
		addAnnotation
		  (getPropertyList_MdpropFlatteningSupport(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropFlatteningSupport"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxCaseSupport(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxCaseSupport"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxDescFlags(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxDescFlags"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxDrillFunctions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxDrillFunctions"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxFormulas(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxFormulas"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxJoinCubes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxJoinCubes"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxMemberFunctions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxMemberFunctions"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxNonMeasureExpressions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxNonMeasureExpressions"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxNumericFunctions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxNumericFunctions"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxObjQualification(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxObjQualification"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxOuterReference(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxOuterReference"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxQueryByProperty(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxQueryByProperty"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxRangeRowset(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxRangeRowset"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxSetFunctions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxSetFunctions"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxSlicer(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxSlicer"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxStringCompop(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxStringCompop"
		   });
		addAnnotation
		  (getPropertyList_MdpropNamedLevels(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropNamedLevels"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdMDXCompatibility(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdMDXCompatibility"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdSQLCompatibility(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdSQLCompatibility"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdMDXUniqueNameStyle(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdMDXUniqueNameStyle"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdCachePolicy(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdCachePolicy"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdCacheRatio(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdCacheRatio"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdCacheMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdCacheMode"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdCompareCaseSensitiveStringFlags(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdCompareCaseSensitiveStringFlags"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdCompareCaseNotSensitiveStringFlags(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdCompareCaseNotSensitiveStringFlags"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdFlattened2(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdFlattened2"
		   });
		addAnnotation
		  (getPropertyList_DbpropInitMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropInitMode"
		   });
		addAnnotation
		  (getPropertyList_SspropInitAppName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SspropInitAppName"
		   });
		addAnnotation
		  (getPropertyList_SspropInitWsid(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SspropInitWsid"
		   });
		addAnnotation
		  (getPropertyList_SspropInitPacketsize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SspropInitPacketsize"
		   });
		addAnnotation
		  (getPropertyList_ReadOnlySession(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReadOnlySession"
		   });
		addAnnotation
		  (getPropertyList_SecuredCellValue(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SecuredCellValue"
		   });
		addAnnotation
		  (getPropertyList_NonEmptyThreshold(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NonEmptyThreshold"
		   });
		addAnnotation
		  (getPropertyList_SafetyOptions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SafetyOptions"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdCacheRatio2(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdCacheRatio2"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdUseFormulaCache(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdUseFormulaCache"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdDynamicDebugLimit(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdDynamicDebugLimit"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdDebugMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdDebugMode"
		   });
		addAnnotation
		  (getPropertyList_Dialect(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Dialect"
		   });
		addAnnotation
		  (getPropertyList_ImpactAnalysis(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ImpactAnalysis"
		   });
		addAnnotation
		  (getPropertyList_SQLQueryMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SQLQueryMode"
		   });
		addAnnotation
		  (getPropertyList_ClientProcessID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ClientProcessID"
		   });
		addAnnotation
		  (getPropertyList_Cube(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cube"
		   });
		addAnnotation
		  (getPropertyList_ReturnCellProperties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReturnCellProperties"
		   });
		addAnnotation
		  (getPropertyList_CommitTimeout(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CommitTimeout"
		   });
		addAnnotation
		  (getPropertyList_ForceCommitTimeout(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForceCommitTimeout"
		   });
		addAnnotation
		  (getPropertyList_ExecutionMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ExecutionMode"
		   });
		addAnnotation
		  (getPropertyList_RealTimeOlap(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RealTimeOlap"
		   });
		addAnnotation
		  (getPropertyList_MdxMissingMemberMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdxMissingMemberMode"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxNamedSets(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxNamedSets"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdSubqueries(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdSubqueries"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdAutoExists(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdAutoExists"
		   });
		addAnnotation
		  (getPropertyList_CustomData(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CustomData"
		   });
		addAnnotation
		  (getPropertyList_DisablePrefetchFacts(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisablePrefetchFacts"
		   });
		addAnnotation
		  (getPropertyList_UpdateIsolationLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UpdateIsolationLevel"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdErrorMessageMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdErrorMessageMode"
		   });
		addAnnotation
		  (getPropertyList_MdpropMdxDdlExtensions(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MdpropMdxDdlExtensions"
		   });
		addAnnotation
		  (getPropertyList_ResponseEncoding(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ResponseEncoding"
		   });
		addAnnotation
		  (getPropertyList_MemoryLockingMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MemoryLockingMode"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdOptimizeResponse(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdOptimizeResponse"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdActivityID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdActivityID"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdRequestID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdRequestID"
		   });
		addAnnotation
		  (getPropertyList_ReturnAffectedObjects(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReturnAffectedObjects"
		   });
		addAnnotation
		  (getPropertyList_DbpropMsmdRequestMemoryLimit(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbpropMsmdRequestMemoryLimit"
		   });
		addAnnotation
		  (getPropertyList_ApplicationContext(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ApplicationContext"
		   });
		addAnnotation
		  (providerTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "ProviderType_._type"
		   });
		addAnnotation
		  (providerTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ProviderType_._type:Object",
			   "baseType", "ProviderType_._type"
		   });
		addAnnotation
		  (pushedDataSourceEClass,
		   source,
		   new String[] {
			   "name", "PushedDataSource",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getPushedDataSource_Root(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "root"
		   });
		addAnnotation
		  (getPushedDataSource_EndOfData(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EndOfData"
		   });
		addAnnotation
		  (queriesTypeEClass,
		   source,
		   new String[] {
			   "name", "Queries_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getQueriesType_Query(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Query"
		   });
		addAnnotation
		  (queryBindingEClass,
		   source,
		   new String[] {
			   "name", "QueryBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getQueryBinding_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (getQueryBinding_QueryDefinition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "QueryDefinition"
		   });
		addAnnotation
		  (queryNotificationEClass,
		   source,
		   new String[] {
			   "name", "QueryNotification",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getQueryNotification_Query(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Query"
		   });
		addAnnotation
		  (queryNotificationsTypeEClass,
		   source,
		   new String[] {
			   "name", "QueryNotifications_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getQueryNotificationsType_QueryNotification(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "QueryNotification"
		   });
		addAnnotation
		  (readDefinitionTypeEEnum,
		   source,
		   new String[] {
			   "name", "ReadDefinition_._type"
		   });
		addAnnotation
		  (readDefinitionTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ReadDefinition_._type:Object",
			   "baseType", "ReadDefinition_._type"
		   });
		addAnnotation
		  (readSourceDataTypeEEnum,
		   source,
		   new String[] {
			   "name", "ReadSourceData_._type"
		   });
		addAnnotation
		  (readSourceDataTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ReadSourceData_._type:Object",
			   "baseType", "ReadSourceData_._type"
		   });
		addAnnotation
		  (readTypeEEnum,
		   source,
		   new String[] {
			   "name", "Read_._type"
		   });
		addAnnotation
		  (readType1EEnum,
		   source,
		   new String[] {
			   "name", "Read_._1_._type"
		   });
		addAnnotation
		  (readTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Read_._type:Object",
			   "baseType", "Read_._type"
		   });
		addAnnotation
		  (readTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Read_._1_._type:Object",
			   "baseType", "Read_._1_._type"
		   });
		addAnnotation
		  (referenceMeasureGroupDimensionEClass,
		   source,
		   new String[] {
			   "name", "ReferenceMeasureGroupDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReferenceMeasureGroupDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getReferenceMeasureGroupDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getReferenceMeasureGroupDimension_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getReferenceMeasureGroupDimension_IntermediateCubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "IntermediateCubeDimensionID"
		   });
		addAnnotation
		  (getReferenceMeasureGroupDimension_IntermediateGranularityAttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "IntermediateGranularityAttributeID"
		   });
		addAnnotation
		  (getReferenceMeasureGroupDimension_Materialization(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Materialization"
		   });
		addAnnotation
		  (getReferenceMeasureGroupDimension_ProcessingState(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProcessingState",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (refreshPolicyTypeEEnum,
		   source,
		   new String[] {
			   "name", "RefreshPolicy_._type"
		   });
		addAnnotation
		  (refreshPolicyType1EEnum,
		   source,
		   new String[] {
			   "name", "RefreshPolicy_._1_._type"
		   });
		addAnnotation
		  (refreshPolicyTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "RefreshPolicy_._type:Object",
			   "baseType", "RefreshPolicy_._type"
		   });
		addAnnotation
		  (refreshPolicyTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "RefreshPolicy_._1_._type:Object",
			   "baseType", "RefreshPolicy_._1_._type"
		   });
		addAnnotation
		  (regularMeasureGroupDimensionEClass,
		   source,
		   new String[] {
			   "name", "RegularMeasureGroupDimension",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRegularMeasureGroupDimension_CubeDimensionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CubeDimensionID"
		   });
		addAnnotation
		  (getRegularMeasureGroupDimension_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getRegularMeasureGroupDimension_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getRegularMeasureGroupDimension_Cardinality(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cardinality"
		   });
		addAnnotation
		  (getRegularMeasureGroupDimension_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (relationalDataSourceEClass,
		   source,
		   new String[] {
			   "name", "RelationalDataSource",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (relationshipTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "RelationshipType_._type"
		   });
		addAnnotation
		  (relationshipTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "RelationshipType_._type:Object",
			   "baseType", "RelationshipType_._type"
		   });
		addAnnotation
		  (reportActionEClass,
		   source,
		   new String[] {
			   "name", "ReportAction",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReportAction_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getReportAction_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getReportAction_Caption(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Caption"
		   });
		addAnnotation
		  (getReportAction_CaptionIsMdx(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CaptionIsMdx"
		   });
		addAnnotation
		  (getReportAction_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getReportAction_TargetType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TargetType"
		   });
		addAnnotation
		  (getReportAction_Target(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Target"
		   });
		addAnnotation
		  (getReportAction_Condition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Condition"
		   });
		addAnnotation
		  (getReportAction_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getReportAction_Invocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Invocation"
		   });
		addAnnotation
		  (getReportAction_Application(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Application"
		   });
		addAnnotation
		  (getReportAction_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getReportAction_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getReportAction_ReportServer(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportServer"
		   });
		addAnnotation
		  (getReportAction_Path(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Path"
		   });
		addAnnotation
		  (getReportAction_ReportParameters(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportParameters"
		   });
		addAnnotation
		  (getReportAction_ReportFormatParameters(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportFormatParameters"
		   });
		addAnnotation
		  (reportFormatParameterEClass,
		   source,
		   new String[] {
			   "name", "ReportFormatParameter",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReportFormatParameter_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getReportFormatParameter_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (reportFormatParametersTypeEClass,
		   source,
		   new String[] {
			   "name", "ReportFormatParameters_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReportFormatParametersType_ReportFormatParameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportFormatParameter"
		   });
		addAnnotation
		  (reportingFirstMonthTypeEDataType,
		   source,
		   new String[] {
			   "name", "ReportingFirstMonth_._type",
			   "baseType", "http://www.eclipse.org/emf/2003/XMLType#integer",
			   "minInclusive", "1",
			   "maxInclusive", "12"
		   });
		addAnnotation
		  (reportingFirstWeekOfMonthTypeEEnum,
		   source,
		   new String[] {
			   "name", "ReportingFirstWeekOfMonth_._type"
		   });
		addAnnotation
		  (reportingFirstWeekOfMonthTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ReportingFirstWeekOfMonth_._type:Object",
			   "baseType", "ReportingFirstWeekOfMonth_._type"
		   });
		addAnnotation
		  (reportingWeekToMonthPatternTypeEEnum,
		   source,
		   new String[] {
			   "name", "ReportingWeekToMonthPattern_._type"
		   });
		addAnnotation
		  (reportingWeekToMonthPatternTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ReportingWeekToMonthPattern_._type:Object",
			   "baseType", "ReportingWeekToMonthPattern_._type"
		   });
		addAnnotation
		  (reportParameterEClass,
		   source,
		   new String[] {
			   "name", "ReportParameter",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReportParameter_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getReportParameter_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (reportParametersTypeEClass,
		   source,
		   new String[] {
			   "name", "ReportParameters_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReportParametersType_ReportParameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportParameter"
		   });
		addAnnotation
		  (requestTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "RequestType_._type"
		   });
		addAnnotation
		  (requestTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "RequestType_._type:Object",
			   "baseType", "RequestType_._type"
		   });
		addAnnotation
		  (responseEncodingTypeEEnum,
		   source,
		   new String[] {
			   "name", "ResponseEncoding_._type"
		   });
		addAnnotation
		  (responseEncodingTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ResponseEncoding_._type:Object",
			   "baseType", "ResponseEncoding_._type"
		   });
		addAnnotation
		  (restoreEClass,
		   source,
		   new String[] {
			   "name", "Restore",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRestore_DatabaseName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseName"
		   });
		addAnnotation
		  (getRestore_DatabaseID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseID"
		   });
		addAnnotation
		  (getRestore_File(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "File"
		   });
		addAnnotation
		  (getRestore_Security(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Security"
		   });
		addAnnotation
		  (getRestore_AllowOverwrite(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AllowOverwrite"
		   });
		addAnnotation
		  (getRestore_Password(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Password"
		   });
		addAnnotation
		  (getRestore_DbStorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbStorageLocation",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getRestore_ReadWriteMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReadWriteMode",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100"
		   });
		addAnnotation
		  (getRestore_Locations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Locations"
		   });
		addAnnotation
		  (restrictionListTypeEClass,
		   source,
		   new String[] {
			   "name", "RestrictionList_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRestrictionListType_Any(),
		   source,
		   new String[] {
			   "kind", "elementWildcard",
			   "wildcards", "##any",
			   "name", ":0",
			   "processing", "strict"
		   });
		addAnnotation
		  (restrictionsTypeEClass,
		   source,
		   new String[] {
			   "name", "Restrictions_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRestrictionsType_RestrictionList(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RestrictionList"
		   });
		addAnnotation
		  (resultTypeEClass,
		   source,
		   new String[] {
			   "name", "Result_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getResultType_ResultId(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ResultId"
		   });
		addAnnotation
		  (retentionModesEEnum,
		   source,
		   new String[] {
			   "name", "retentionModes"
		   });
		addAnnotation
		  (retentionModesObjectEDataType,
		   source,
		   new String[] {
			   "name", "retentionModes:Object",
			   "baseType", "retentionModes"
		   });
		addAnnotation
		  (returnEClass,
		   source,
		   new String[] {
			   "name", "return",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReturn_Root(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "root",
			   "namespace", "urn:schemas-microsoft-com:xml-analysis:mddataset"
		   });
		addAnnotation
		  (getReturn_Root1(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "root",
			   "namespace", "urn:schemas-microsoft-com:xml-analysis:rowset"
		   });
		addAnnotation
		  (getReturn_Root2(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "root",
			   "namespace", "urn:schemas-microsoft-com:xml-analysis:empty"
		   });
		addAnnotation
		  (getReturn_Results(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "results",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2003/xmla-multipleresults"
		   });
		addAnnotation
		  (returnTypeEClass,
		   source,
		   new String[] {
			   "name", "return_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getReturnType_Root(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "root",
			   "namespace", "urn:schemas-microsoft-com:xml-analysis:rowset"
		   });
		addAnnotation
		  (roleEClass,
		   source,
		   new String[] {
			   "name", "Role",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRole_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getRole_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getRole_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getRole_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getRole_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getRole_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getRole_Members(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Members"
		   });
		addAnnotation
		  (rolesTypeEClass,
		   source,
		   new String[] {
			   "name", "Roles_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRolesType_Role(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Role"
		   });
		addAnnotation
		  (rolesType1EClass,
		   source,
		   new String[] {
			   "name", "Roles_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRolesType1_Role(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Role"
		   });
		addAnnotation
		  (rollbackTransactionEClass,
		   source,
		   new String[] {
			   "name", "RollbackTransaction",
			   "kind", "empty"
		   });
		addAnnotation
		  (rootMemberIfTypeEEnum,
		   source,
		   new String[] {
			   "name", "RootMemberIf_._type"
		   });
		addAnnotation
		  (rootMemberIfTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "RootMemberIf_._type:Object",
			   "baseType", "RootMemberIf_._type"
		   });
		addAnnotation
		  (rootTypeEClass,
		   source,
		   new String[] {
			   "name", "root_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getRootType_Parameter(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "Parameter"
		   });
		addAnnotation
		  (rowBindingEClass,
		   source,
		   new String[] {
			   "name", "RowBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getRowBinding_TableID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableID"
		   });
		addAnnotation
		  (safetyOptionsTypeEEnum,
		   source,
		   new String[] {
			   "name", "SafetyOptions_._type"
		   });
		addAnnotation
		  (safetyOptionsTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "SafetyOptions_._type:Object",
			   "baseType", "SafetyOptions_._type"
		   });
		addAnnotation
		  (scalarMiningStructureColumnEClass,
		   source,
		   new String[] {
			   "name", "ScalarMiningStructureColumn",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_IsKey(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "IsKey"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Distribution(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Distribution"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_ModelingFlags(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ModelingFlags"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Content(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Content"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_ClassifiedColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ClassifiedColumns"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_DiscretizationMethod(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DiscretizationMethod"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_DiscretizationBucketCount(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DiscretizationBucketCount"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_KeyColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "KeyColumns"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_NameColumn(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NameColumn"
		   });
		addAnnotation
		  (getScalarMiningStructureColumn_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (scopeEEnum,
		   source,
		   new String[] {
			   "name", "Scope"
		   });
		addAnnotation
		  (scopeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Scope:Object",
			   "baseType", "Scope"
		   });
		addAnnotation
		  (scriptCacheProcessingModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "ScriptCacheProcessingMode_._type"
		   });
		addAnnotation
		  (scriptCacheProcessingModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ScriptCacheProcessingMode_._type:Object",
			   "baseType", "ScriptCacheProcessingMode_._type"
		   });
		addAnnotation
		  (scriptErrorHandlingModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "ScriptErrorHandlingMode_._type"
		   });
		addAnnotation
		  (scriptErrorHandlingModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ScriptErrorHandlingMode_._type:Object",
			   "baseType", "ScriptErrorHandlingMode_._type"
		   });
		addAnnotation
		  (securedCellValueTypeEEnum,
		   source,
		   new String[] {
			   "name", "SecuredCellValue_._type"
		   });
		addAnnotation
		  (securedCellValueTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "SecuredCellValue_._type:Object",
			   "baseType", "SecuredCellValue_._type"
		   });
		addAnnotation
		  (securityTypeEEnum,
		   source,
		   new String[] {
			   "name", "Security_._type"
		   });
		addAnnotation
		  (securityType1EEnum,
		   source,
		   new String[] {
			   "name", "Security_._1_._type"
		   });
		addAnnotation
		  (securityTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Security_._type:Object",
			   "baseType", "Security_._type"
		   });
		addAnnotation
		  (securityTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Security_._1_._type:Object",
			   "baseType", "Security_._1_._type"
		   });
		addAnnotation
		  (serverEClass,
		   source,
		   new String[] {
			   "name", "Server",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getServer_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getServer_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getServer_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getServer_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getServer_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getServer_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getServer_ProductName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProductName"
		   });
		addAnnotation
		  (getServer_Edition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Edition"
		   });
		addAnnotation
		  (getServer_EditionID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EditionID"
		   });
		addAnnotation
		  (getServer_Version(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Version"
		   });
		addAnnotation
		  (getServer_ServerMode(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ServerMode",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2011/engine/300"
		   });
		addAnnotation
		  (getServer_ProductLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ProductLevel"
		   });
		addAnnotation
		  (getServer_DefaultCompatibilityLevel(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultCompatibilityLevel",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2012/engine/400"
		   });
		addAnnotation
		  (getServer_SupportedCompatibilityLevels(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SupportedCompatibilityLevels",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2013/engine/600"
		   });
		addAnnotation
		  (getServer_Databases(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Databases"
		   });
		addAnnotation
		  (getServer_Assemblies(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Assemblies"
		   });
		addAnnotation
		  (getServer_Traces(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Traces"
		   });
		addAnnotation
		  (getServer_Roles(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Roles"
		   });
		addAnnotation
		  (getServer_ServerProperties(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ServerProperties"
		   });
		addAnnotation
		  (serverPropertiesTypeEClass,
		   source,
		   new String[] {
			   "name", "ServerProperties_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getServerPropertiesType_ServerProperty(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ServerProperty"
		   });
		addAnnotation
		  (serverPropertyEClass,
		   source,
		   new String[] {
			   "name", "ServerProperty",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getServerProperty_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getServerProperty_Value(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Value"
		   });
		addAnnotation
		  (getServerProperty_RequiresRestart(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "RequiresRestart"
		   });
		addAnnotation
		  (getServerProperty_PendingValue(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "PendingValue"
		   });
		addAnnotation
		  (getServerProperty_DefaultValue(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DefaultValue"
		   });
		addAnnotation
		  (getServerProperty_DisplayFlag(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisplayFlag"
		   });
		addAnnotation
		  (getServerProperty_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (sessionTypeEClass,
		   source,
		   new String[] {
			   "name", "Session_._type",
			   "kind", "empty"
		   });
		addAnnotation
		  (getSessionType_MustUnderstand(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "mustUnderstand"
		   });
		addAnnotation
		  (getSessionType_SessionId(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "SessionId"
		   });
		addAnnotation
		  (setAuthContextEClass,
		   source,
		   new String[] {
			   "name", "SetAuthContext",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getSetAuthContext_Token(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Token",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2010/engine/200/200"
		   });
		addAnnotation
		  (getSetAuthContext_DatabaseID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseID"
		   });
		addAnnotation
		  (shareDimensionStorageTypeEEnum,
		   source,
		   new String[] {
			   "name", "ShareDimensionStorage_._type"
		   });
		addAnnotation
		  (shareDimensionStorageTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "ShareDimensionStorage_._type:Object",
			   "baseType", "ShareDimensionStorage_._type"
		   });
		addAnnotation
		  (skippedLevelsColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "SkippedLevelsColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getSkippedLevelsColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (sourceEClass,
		   source,
		   new String[] {
			   "name", "Source",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getSource_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getSource_ConnectionString(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ConnectionString"
		   });
		addAnnotation
		  (sourcesTypeEClass,
		   source,
		   new String[] {
			   "name", "Sources_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getSourcesType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (sqlQueryModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "SQLQueryMode_._type"
		   });
		addAnnotation
		  (sqlQueryModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "SQLQueryMode_._type:Object",
			   "baseType", "SQLQueryMode_._type"
		   });
		addAnnotation
		  (standardActionEClass,
		   source,
		   new String[] {
			   "name", "StandardAction",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getStandardAction_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getStandardAction_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getStandardAction_Caption(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Caption"
		   });
		addAnnotation
		  (getStandardAction_CaptionIsMdx(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CaptionIsMdx"
		   });
		addAnnotation
		  (getStandardAction_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (getStandardAction_TargetType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TargetType"
		   });
		addAnnotation
		  (getStandardAction_Target(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Target"
		   });
		addAnnotation
		  (getStandardAction_Condition(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Condition"
		   });
		addAnnotation
		  (getStandardAction_Type(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Type"
		   });
		addAnnotation
		  (getStandardAction_Invocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Invocation"
		   });
		addAnnotation
		  (getStandardAction_Application(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Application"
		   });
		addAnnotation
		  (getStandardAction_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getStandardAction_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getStandardAction_Expression(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Expression"
		   });
		addAnnotation
		  (statementEClass,
		   source,
		   new String[] {
			   "name", "Statement",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getStatement_Statement(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Statement"
		   });
		addAnnotation
		  (stateSupportTypeEEnum,
		   source,
		   new String[] {
			   "name", "StateSupport_._type"
		   });
		addAnnotation
		  (stateSupportTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "StateSupport_._type:Object",
			   "baseType", "StateSupport_._type"
		   });
		addAnnotation
		  (stateTypeEEnum,
		   source,
		   new String[] {
			   "name", "State_._type"
		   });
		addAnnotation
		  (stateType1EEnum,
		   source,
		   new String[] {
			   "name", "State_._1_._type"
		   });
		addAnnotation
		  (stateType2EEnum,
		   source,
		   new String[] {
			   "name", "State_._2_._type"
		   });
		addAnnotation
		  (stateType3EEnum,
		   source,
		   new String[] {
			   "name", "State_._3_._type"
		   });
		addAnnotation
		  (stateType4EEnum,
		   source,
		   new String[] {
			   "name", "State_._4_._type"
		   });
		addAnnotation
		  (stateType5EEnum,
		   source,
		   new String[] {
			   "name", "State_._5_._type"
		   });
		addAnnotation
		  (stateType6EEnum,
		   source,
		   new String[] {
			   "name", "State_._6_._type"
		   });
		addAnnotation
		  (stateTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "State_._type:Object",
			   "baseType", "State_._type"
		   });
		addAnnotation
		  (stateTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "State_._4_._type:Object",
			   "baseType", "State_._4_._type"
		   });
		addAnnotation
		  (stateTypeObject2EDataType,
		   source,
		   new String[] {
			   "name", "State_._5_._type:Object",
			   "baseType", "State_._5_._type"
		   });
		addAnnotation
		  (stateTypeObject3EDataType,
		   source,
		   new String[] {
			   "name", "State_._1_._type:Object",
			   "baseType", "State_._1_._type"
		   });
		addAnnotation
		  (stateTypeObject4EDataType,
		   source,
		   new String[] {
			   "name", "State_._3_._type:Object",
			   "baseType", "State_._3_._type"
		   });
		addAnnotation
		  (stateTypeObject5EDataType,
		   source,
		   new String[] {
			   "name", "State_._2_._type:Object",
			   "baseType", "State_._2_._type"
		   });
		addAnnotation
		  (stateTypeObject6EDataType,
		   source,
		   new String[] {
			   "name", "State_._6_._type:Object",
			   "baseType", "State_._6_._type"
		   });
		addAnnotation
		  (storageModeTypeEClass,
		   source,
		   new String[] {
			   "name", "StorageMode_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getStorageModeType_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getStorageModeType_Valuens(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "valuens"
		   });
		addAnnotation
		  (storageModeType1EEnum,
		   source,
		   new String[] {
			   "name", "StorageMode_._1_._type"
		   });
		addAnnotation
		  (storageModeType2EClass,
		   source,
		   new String[] {
			   "name", "StorageMode_._2_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getStorageModeType2_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getStorageModeType2_Valuens(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "valuens"
		   });
		addAnnotation
		  (storageModeType3EClass,
		   source,
		   new String[] {
			   "name", "StorageMode_._3_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getStorageModeType3_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getStorageModeType3_Valuens(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "valuens"
		   });
		addAnnotation
		  (storageModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "StorageMode_._1_._type:Object",
			   "baseType", "StorageMode_._1_._type"
		   });
		addAnnotation
		  (subscribeEClass,
		   source,
		   new String[] {
			   "name", "Subscribe",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getSubscribe_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getSubscribe_SubscriptionId(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SubscriptionId",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2013/engine/800"
		   });
		addAnnotation
		  (synchronizeEClass,
		   source,
		   new String[] {
			   "name", "Synchronize",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getSynchronize_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (getSynchronize_SynchronizeSecurity(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SynchronizeSecurity"
		   });
		addAnnotation
		  (getSynchronize_ApplyCompression(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ApplyCompression"
		   });
		addAnnotation
		  (getSynchronize_DbStorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbStorageLocation",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getSynchronize_Locations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Locations"
		   });
		addAnnotation
		  (synchronizeSecurityTypeEEnum,
		   source,
		   new String[] {
			   "name", "SynchronizeSecurity_._type"
		   });
		addAnnotation
		  (synchronizeSecurityTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "SynchronizeSecurity_._type:Object",
			   "baseType", "SynchronizeSecurity_._type"
		   });
		addAnnotation
		  (tableBindingEClass,
		   source,
		   new String[] {
			   "name", "TableBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTableBinding_DataSourceID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DataSourceID"
		   });
		addAnnotation
		  (getTableBinding_DbTableName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbTableName"
		   });
		addAnnotation
		  (getTableBinding_DbSchemaName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbSchemaName"
		   });
		addAnnotation
		  (tableMiningStructureColumnEClass,
		   source,
		   new String[] {
			   "name", "TableMiningStructureColumn",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTableMiningStructureColumn_ForeignKeyColumns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ForeignKeyColumns"
		   });
		addAnnotation
		  (getTableMiningStructureColumn_SourceMeasureGroup(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SourceMeasureGroup"
		   });
		addAnnotation
		  (getTableMiningStructureColumn_Columns(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Columns"
		   });
		addAnnotation
		  (getTableMiningStructureColumn_Translations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translations"
		   });
		addAnnotation
		  (tableNotificationEClass,
		   source,
		   new String[] {
			   "name", "TableNotification",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTableNotification_DbTableName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbTableName"
		   });
		addAnnotation
		  (getTableNotification_DbSchemaName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbSchemaName"
		   });
		addAnnotation
		  (tableNotificationsTypeEClass,
		   source,
		   new String[] {
			   "name", "TableNotifications_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTableNotificationsType_TableNotification(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableNotification"
		   });
		addAnnotation
		  (tableNotificationsType1EClass,
		   source,
		   new String[] {
			   "name", "TableNotifications_._1_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTableNotificationsType1_TableNotification(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "TableNotification"
		   });
		addAnnotation
		  (tabularBindingEClass,
		   source,
		   new String[] {
			   "name", "TabularBinding",
			   "kind", "empty"
		   });
		addAnnotation
		  (targetTypeEClass,
		   source,
		   new String[] {
			   "name", "target_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTargetType_Parameter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "parameter",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (getTargetType_Module(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "module"
		   });
		addAnnotation
		  (getTargetType_Name(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "name"
		   });
		addAnnotation
		  (getTargetType_Package(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "package"
		   });
		addAnnotation
		  (targetType1EClass,
		   source,
		   new String[] {
			   "name", "Target_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTargetType1_DbStorageLocation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DbStorageLocation",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2008/engine/100/100"
		   });
		addAnnotation
		  (getTargetType1_DatabaseName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseName"
		   });
		addAnnotation
		  (getTargetType1_DatabaseID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DatabaseID"
		   });
		addAnnotation
		  (targetTypeTypeEEnum,
		   source,
		   new String[] {
			   "name", "TargetType_._type"
		   });
		addAnnotation
		  (targetTypeType1EEnum,
		   source,
		   new String[] {
			   "name", "TargetType_._1_._type"
		   });
		addAnnotation
		  (targetTypeType2EEnum,
		   source,
		   new String[] {
			   "name", "TargetType_._2_._type"
		   });
		addAnnotation
		  (targetTypeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "TargetType_._1_._type:Object",
			   "baseType", "TargetType_._1_._type"
		   });
		addAnnotation
		  (targetTypeTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "TargetType_._type:Object",
			   "baseType", "TargetType_._type"
		   });
		addAnnotation
		  (targetTypeTypeObject2EDataType,
		   source,
		   new String[] {
			   "name", "TargetType_._2_._type:Object",
			   "baseType", "TargetType_._2_._type"
		   });
		addAnnotation
		  (timeAttributeBindingEClass,
		   source,
		   new String[] {
			   "name", "TimeAttributeBinding",
			   "kind", "empty"
		   });
		addAnnotation
		  (timeBindingEClass,
		   source,
		   new String[] {
			   "name", "TimeBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTimeBinding_CalendarStartDate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalendarStartDate"
		   });
		addAnnotation
		  (getTimeBinding_CalendarEndDate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalendarEndDate"
		   });
		addAnnotation
		  (getTimeBinding_FirstDayOfWeek(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FirstDayOfWeek"
		   });
		addAnnotation
		  (getTimeBinding_CalendarLanguage(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CalendarLanguage"
		   });
		addAnnotation
		  (getTimeBinding_FiscalFirstMonth(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FiscalFirstMonth"
		   });
		addAnnotation
		  (getTimeBinding_FiscalFirstDayOfMonth(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FiscalFirstDayOfMonth"
		   });
		addAnnotation
		  (getTimeBinding_FiscalYearName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "FiscalYearName"
		   });
		addAnnotation
		  (getTimeBinding_ReportingFirstMonth(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportingFirstMonth"
		   });
		addAnnotation
		  (getTimeBinding_ReportingFirstWeekOfMonth(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportingFirstWeekOfMonth"
		   });
		addAnnotation
		  (getTimeBinding_ReportingWeekToMonthPattern(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ReportingWeekToMonthPattern"
		   });
		addAnnotation
		  (getTimeBinding_ManufacturingFirstMonth(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ManufacturingFirstMonth"
		   });
		addAnnotation
		  (getTimeBinding_ManufacturingFirstWeekOfMonth(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ManufacturingFirstWeekOfMonth"
		   });
		addAnnotation
		  (getTimeBinding_ManufacturingExtraMonthQuarter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ManufacturingExtraMonthQuarter"
		   });
		addAnnotation
		  (traceEClass,
		   source,
		   new String[] {
			   "name", "Trace",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTrace_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getTrace_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getTrace_CreatedTimestamp(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "CreatedTimestamp"
		   });
		addAnnotation
		  (getTrace_LastSchemaUpdate(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LastSchemaUpdate"
		   });
		addAnnotation
		  (getTrace_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getTrace_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (getTrace_LogFileName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LogFileName"
		   });
		addAnnotation
		  (getTrace_LogFileAppend(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LogFileAppend"
		   });
		addAnnotation
		  (getTrace_LogFileSize(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LogFileSize"
		   });
		addAnnotation
		  (getTrace_Audit(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Audit"
		   });
		addAnnotation
		  (getTrace_LogFileRollover(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LogFileRollover"
		   });
		addAnnotation
		  (getTrace_AutoRestart(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AutoRestart"
		   });
		addAnnotation
		  (getTrace_StopTime(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "StopTime"
		   });
		addAnnotation
		  (getTrace_Filter(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Filter"
		   });
		addAnnotation
		  (getTrace_EventType(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventType",
			   "namespace", "##targetNamespace"
		   });
		addAnnotation
		  (traceColumnsEClass,
		   source,
		   new String[] {
			   "name", "Trace_Columns",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTraceColumns_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data"
		   });
		addAnnotation
		  (traceDefinitionProviderInfoEClass,
		   source,
		   new String[] {
			   "name", "Trace_Definition_ProviderInfo",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTraceDefinitionProviderInfo_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data"
		   });
		addAnnotation
		  (traceEventEClass,
		   source,
		   new String[] {
			   "name", "TraceEvent",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTraceEvent_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (getTraceEvent_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (getTraceEvent_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getTraceEvent_EventColumnList(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "EventColumnList"
		   });
		addAnnotation
		  (traceEventCategoriesEClass,
		   source,
		   new String[] {
			   "name", "Trace_Event_Categories",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTraceEventCategories_Data(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Data"
		   });
		addAnnotation
		  (traceFilterEClass,
		   source,
		   new String[] {
			   "name", "TraceFilter",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTraceFilter_Not(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Not"
		   });
		addAnnotation
		  (getTraceFilter_Or(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Or"
		   });
		addAnnotation
		  (getTraceFilter_And(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "And"
		   });
		addAnnotation
		  (getTraceFilter_Equal(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Equal"
		   });
		addAnnotation
		  (getTraceFilter_NotEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotEqual"
		   });
		addAnnotation
		  (getTraceFilter_Less(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Less"
		   });
		addAnnotation
		  (getTraceFilter_LessOrEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "LessOrEqual"
		   });
		addAnnotation
		  (getTraceFilter_Greater(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Greater"
		   });
		addAnnotation
		  (getTraceFilter_GreaterOrEqual(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "GreaterOrEqual"
		   });
		addAnnotation
		  (getTraceFilter_Like(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Like"
		   });
		addAnnotation
		  (getTraceFilter_NotLike(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "NotLike"
		   });
		addAnnotation
		  (tracesTypeEClass,
		   source,
		   new String[] {
			   "name", "Traces_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTracesType_Trace(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Trace"
		   });
		addAnnotation
		  (translationEClass,
		   source,
		   new String[] {
			   "name", "Translation",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTranslation_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getTranslation_Caption(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Caption"
		   });
		addAnnotation
		  (getTranslation_Description(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Description"
		   });
		addAnnotation
		  (getTranslation_DisplayFolder(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "DisplayFolder"
		   });
		addAnnotation
		  (getTranslation_Annotations(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Annotations"
		   });
		addAnnotation
		  (translationInsertUpdateEClass,
		   source,
		   new String[] {
			   "name", "Translation_InsertUpdate",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTranslationInsertUpdate_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getTranslationInsertUpdate_Name(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Name"
		   });
		addAnnotation
		  (translationsTypeEClass,
		   source,
		   new String[] {
			   "name", "Translations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTranslationsType_Translation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Translation"
		   });
		addAnnotation
		  (translationTypeEClass,
		   source,
		   new String[] {
			   "name", "Translation_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getTranslationType_Language(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Language"
		   });
		addAnnotation
		  (getTranslationType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (trimmingTypeEEnum,
		   source,
		   new String[] {
			   "name", "Trimming_._type"
		   });
		addAnnotation
		  (trimmingTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Trimming_._type:Object",
			   "baseType", "Trimming_._type"
		   });
		addAnnotation
		  (typeTypeEEnum,
		   source,
		   new String[] {
			   "name", "Type_._type"
		   });
		addAnnotation
		  (typeType1EEnum,
		   source,
		   new String[] {
			   "name", "Type_._1_._type"
		   });
		addAnnotation
		  (typeType2EEnum,
		   source,
		   new String[] {
			   "name", "Type_._2_._type"
		   });
		addAnnotation
		  (typeType3EEnum,
		   source,
		   new String[] {
			   "name", "Type_._3_._type"
		   });
		addAnnotation
		  (typeType4EEnum,
		   source,
		   new String[] {
			   "name", "Type_._4_._type"
		   });
		addAnnotation
		  (typeType5EEnum,
		   source,
		   new String[] {
			   "name", "Type_._5_._type"
		   });
		addAnnotation
		  (typeType6EClass,
		   source,
		   new String[] {
			   "name", "Type_._6_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getTypeType6_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getTypeType6_Valuens(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "valuens"
		   });
		addAnnotation
		  (typeType7EEnum,
		   source,
		   new String[] {
			   "name", "Type_._7_._type"
		   });
		addAnnotation
		  (typeType8EEnum,
		   source,
		   new String[] {
			   "name", "Type_._8_._type"
		   });
		addAnnotation
		  (typeType9EEnum,
		   source,
		   new String[] {
			   "name", "Type_._9_._type"
		   });
		addAnnotation
		  (typeType10EEnum,
		   source,
		   new String[] {
			   "name", "Type_._10_._type"
		   });
		addAnnotation
		  (typeType11EEnum,
		   source,
		   new String[] {
			   "name", "Type_._11_._type"
		   });
		addAnnotation
		  (typeType12EEnum,
		   source,
		   new String[] {
			   "name", "Type_._12_._type"
		   });
		addAnnotation
		  (typeType13EEnum,
		   source,
		   new String[] {
			   "name", "Type_._13_._type"
		   });
		addAnnotation
		  (typeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Type_._4_._type:Object",
			   "baseType", "Type_._4_._type"
		   });
		addAnnotation
		  (typeTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Type_._5_._type:Object",
			   "baseType", "Type_._5_._type"
		   });
		addAnnotation
		  (typeTypeObject2EDataType,
		   source,
		   new String[] {
			   "name", "Type_._2_._type:Object",
			   "baseType", "Type_._2_._type"
		   });
		addAnnotation
		  (typeTypeObject3EDataType,
		   source,
		   new String[] {
			   "name", "Type_._1_._type:Object",
			   "baseType", "Type_._1_._type"
		   });
		addAnnotation
		  (typeTypeObject4EDataType,
		   source,
		   new String[] {
			   "name", "Type_._12_._type:Object",
			   "baseType", "Type_._12_._type"
		   });
		addAnnotation
		  (typeTypeObject5EDataType,
		   source,
		   new String[] {
			   "name", "Type_._type:Object",
			   "baseType", "Type_._type"
		   });
		addAnnotation
		  (typeTypeObject6EDataType,
		   source,
		   new String[] {
			   "name", "Type_._3_._type:Object",
			   "baseType", "Type_._3_._type"
		   });
		addAnnotation
		  (typeTypeObject7EDataType,
		   source,
		   new String[] {
			   "name", "Type_._9_._type:Object",
			   "baseType", "Type_._9_._type"
		   });
		addAnnotation
		  (typeTypeObject8EDataType,
		   source,
		   new String[] {
			   "name", "Type_._8_._type:Object",
			   "baseType", "Type_._8_._type"
		   });
		addAnnotation
		  (typeTypeObject9EDataType,
		   source,
		   new String[] {
			   "name", "Type_._7_._type:Object",
			   "baseType", "Type_._7_._type"
		   });
		addAnnotation
		  (typeTypeObject10EDataType,
		   source,
		   new String[] {
			   "name", "Type_._10_._type:Object",
			   "baseType", "Type_._10_._type"
		   });
		addAnnotation
		  (typeTypeObject11EDataType,
		   source,
		   new String[] {
			   "name", "Type_._11_._type:Object",
			   "baseType", "Type_._11_._type"
		   });
		addAnnotation
		  (typeTypeObject12EDataType,
		   source,
		   new String[] {
			   "name", "Type_._13_._type:Object",
			   "baseType", "Type_._13_._type"
		   });
		addAnnotation
		  (unaryExprEClass,
		   source,
		   new String[] {
			   "name", "unary_expr",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUnaryExpr_Not(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "not"
		   });
		addAnnotation
		  (getUnaryExpr_And(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "and"
		   });
		addAnnotation
		  (getUnaryExpr_Or(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "or"
		   });
		addAnnotation
		  (getUnaryExpr_Leaf(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "leaf"
		   });
		addAnnotation
		  (unaryOperatorColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "UnaryOperatorColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUnaryOperatorColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (unknownMemberEnumTypeEEnum,
		   source,
		   new String[] {
			   "name", "UnknownMemberEnumType"
		   });
		addAnnotation
		  (unknownMemberEnumTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "UnknownMemberEnumType:Object",
			   "baseType", "UnknownMemberEnumType"
		   });
		addAnnotation
		  (unknownMemberTranslationsTypeEClass,
		   source,
		   new String[] {
			   "name", "UnknownMemberTranslations_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUnknownMemberTranslationsType_UnknownMemberTranslation(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "UnknownMemberTranslation"
		   });
		addAnnotation
		  (unknownMemberTypeEClass,
		   source,
		   new String[] {
			   "name", "UnknownMember_._type",
			   "kind", "simple"
		   });
		addAnnotation
		  (getUnknownMemberType_Value(),
		   source,
		   new String[] {
			   "name", ":0",
			   "kind", "simple"
		   });
		addAnnotation
		  (getUnknownMemberType_Valuens(),
		   source,
		   new String[] {
			   "kind", "attribute",
			   "name", "valuens"
		   });
		addAnnotation
		  (unlockEClass,
		   source,
		   new String[] {
			   "name", "Unlock",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUnlock_ID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "ID"
		   });
		addAnnotation
		  (unsubscribeEClass,
		   source,
		   new String[] {
			   "name", "Unsubscribe",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUnsubscribe_SubscriptionId(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "SubscriptionId",
			   "namespace", "http://schemas.microsoft.com/analysisservices/2013/engine/800"
		   });
		addAnnotation
		  (updateEClass,
		   source,
		   new String[] {
			   "name", "Update",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUpdate_Object(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Object"
		   });
		addAnnotation
		  (getUpdate_Attributes(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attributes"
		   });
		addAnnotation
		  (getUpdate_MoveWithDescendants(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MoveWithDescendants"
		   });
		addAnnotation
		  (getUpdate_MoveToRoot(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "MoveToRoot"
		   });
		addAnnotation
		  (getUpdate_Where(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Where"
		   });
		addAnnotation
		  (updateCellsEClass,
		   source,
		   new String[] {
			   "name", "UpdateCells",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUpdateCells_Cell(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Cell"
		   });
		addAnnotation
		  (updateIsolationLevelTypeEEnum,
		   source,
		   new String[] {
			   "name", "UpdateIsolationLevel_._type"
		   });
		addAnnotation
		  (updateIsolationLevelTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "UpdateIsolationLevel_._type:Object",
			   "baseType", "UpdateIsolationLevel_._type"
		   });
		addAnnotation
		  (usageTypeEEnum,
		   source,
		   new String[] {
			   "name", "Usage_._type"
		   });
		addAnnotation
		  (usageType1EEnum,
		   source,
		   new String[] {
			   "name", "Usage_._1_._type"
		   });
		addAnnotation
		  (usageTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Usage_._type:Object",
			   "baseType", "Usage_._type"
		   });
		addAnnotation
		  (usageTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Usage_._1_._type:Object",
			   "baseType", "Usage_._1_._type"
		   });
		addAnnotation
		  (userDefinedGroupBindingEClass,
		   source,
		   new String[] {
			   "name", "UserDefinedGroupBinding",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getUserDefinedGroupBinding_AttributeID(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeID"
		   });
		addAnnotation
		  (getUserDefinedGroupBinding_Groups(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Groups"
		   });
		addAnnotation
		  (valueColumnTypeEClass,
		   source,
		   new String[] {
			   "name", "ValueColumn_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getValueColumnType_Source(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Source"
		   });
		addAnnotation
		  (valuensTypeEEnum,
		   source,
		   new String[] {
			   "name", "valuens_._type"
		   });
		addAnnotation
		  (valuensType1EEnum,
		   source,
		   new String[] {
			   "name", "valuens_._1_._type"
		   });
		addAnnotation
		  (valuensType2EEnum,
		   source,
		   new String[] {
			   "name", "valuens_._2_._type"
		   });
		addAnnotation
		  (valuensType3EEnum,
		   source,
		   new String[] {
			   "name", "valuens_._3_._type"
		   });
		addAnnotation
		  (valuensType4EEnum,
		   source,
		   new String[] {
			   "name", "valuens_._4_._type"
		   });
		addAnnotation
		  (valuensType5EEnum,
		   source,
		   new String[] {
			   "name", "valuens_._5_._type"
		   });
		addAnnotation
		  (valuensType6EEnum,
		   source,
		   new String[] {
			   "name", "valuens_._6_._type"
		   });
		addAnnotation
		  (valuensTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "valuens_._1_._type:Object",
			   "baseType", "valuens_._1_._type"
		   });
		addAnnotation
		  (valuensTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "valuens_._2_._type:Object",
			   "baseType", "valuens_._2_._type"
		   });
		addAnnotation
		  (valuensTypeObject2EDataType,
		   source,
		   new String[] {
			   "name", "valuens_._type:Object",
			   "baseType", "valuens_._type"
		   });
		addAnnotation
		  (valuensTypeObject3EDataType,
		   source,
		   new String[] {
			   "name", "valuens_._4_._type:Object",
			   "baseType", "valuens_._4_._type"
		   });
		addAnnotation
		  (valuensTypeObject4EDataType,
		   source,
		   new String[] {
			   "name", "valuens_._3_._type:Object",
			   "baseType", "valuens_._3_._type"
		   });
		addAnnotation
		  (valuensTypeObject5EDataType,
		   source,
		   new String[] {
			   "name", "valuens_._5_._type:Object",
			   "baseType", "valuens_._5_._type"
		   });
		addAnnotation
		  (valuensTypeObject6EDataType,
		   source,
		   new String[] {
			   "name", "valuens_._6_._type:Object",
			   "baseType", "valuens_._6_._type"
		   });
		addAnnotation
		  (versionTypeEClass,
		   source,
		   new String[] {
			   "name", "Version_._type",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getVersionType_Major(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Major"
		   });
		addAnnotation
		  (getVersionType_Minor(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Minor"
		   });
		addAnnotation
		  (getVersionType_BuildNumber(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "BuildNumber"
		   });
		addAnnotation
		  (visibilityTypeEEnum,
		   source,
		   new String[] {
			   "name", "Visibility_._type"
		   });
		addAnnotation
		  (visibilityTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Visibility_._type:Object",
			   "baseType", "Visibility_._type"
		   });
		addAnnotation
		  (visualModeTypeEEnum,
		   source,
		   new String[] {
			   "name", "VisualMode_._type"
		   });
		addAnnotation
		  (visualModeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "VisualMode_._type:Object",
			   "baseType", "VisualMode_._type"
		   });
		addAnnotation
		  (whereEClass,
		   source,
		   new String[] {
			   "name", "Where",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getWhere_Attribute(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Attribute"
		   });
		addAnnotation
		  (whereAttributeEClass,
		   source,
		   new String[] {
			   "name", "Where_Attribute",
			   "kind", "elementOnly"
		   });
		addAnnotation
		  (getWhereAttribute_AttributeName(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "AttributeName"
		   });
		addAnnotation
		  (getWhereAttribute_Keys(),
		   source,
		   new String[] {
			   "kind", "element",
			   "name", "Keys"
		   });
		addAnnotation
		  (writeBackTableCreationEEnum,
		   source,
		   new String[] {
			   "name", "WriteBackTableCreation"
		   });
		addAnnotation
		  (writeBackTableCreationObjectEDataType,
		   source,
		   new String[] {
			   "name", "WriteBackTableCreation:Object",
			   "baseType", "WriteBackTableCreation"
		   });
		addAnnotation
		  (writeTypeEEnum,
		   source,
		   new String[] {
			   "name", "Write_._type"
		   });
		addAnnotation
		  (writeType1EEnum,
		   source,
		   new String[] {
			   "name", "Write_._1_._type"
		   });
		addAnnotation
		  (writeType2EEnum,
		   source,
		   new String[] {
			   "name", "Write_._2_._type"
		   });
		addAnnotation
		  (writeType3EEnum,
		   source,
		   new String[] {
			   "name", "Write_._3_._type"
		   });
		addAnnotation
		  (writeType4EEnum,
		   source,
		   new String[] {
			   "name", "Write_._4_._type"
		   });
		addAnnotation
		  (writeType5EEnum,
		   source,
		   new String[] {
			   "name", "Write_._5_._type"
		   });
		addAnnotation
		  (writeType6EEnum,
		   source,
		   new String[] {
			   "name", "Write_._6_._type"
		   });
		addAnnotation
		  (writeTypeObjectEDataType,
		   source,
		   new String[] {
			   "name", "Write_._type:Object",
			   "baseType", "Write_._type"
		   });
		addAnnotation
		  (writeTypeObject1EDataType,
		   source,
		   new String[] {
			   "name", "Write_._2_._type:Object",
			   "baseType", "Write_._2_._type"
		   });
		addAnnotation
		  (writeTypeObject2EDataType,
		   source,
		   new String[] {
			   "name", "Write_._4_._type:Object",
			   "baseType", "Write_._4_._type"
		   });
		addAnnotation
		  (writeTypeObject3EDataType,
		   source,
		   new String[] {
			   "name", "Write_._1_._type:Object",
			   "baseType", "Write_._1_._type"
		   });
		addAnnotation
		  (writeTypeObject4EDataType,
		   source,
		   new String[] {
			   "name", "Write_._5_._type:Object",
			   "baseType", "Write_._5_._type"
		   });
		addAnnotation
		  (writeTypeObject5EDataType,
		   source,
		   new String[] {
			   "name", "Write_._3_._type:Object",
			   "baseType", "Write_._3_._type"
		   });
		addAnnotation
		  (writeTypeObject6EDataType,
		   source,
		   new String[] {
			   "name", "Write_._6_._type:Object",
			   "baseType", "Write_._6_._type"
		   });
	}

} //XmlaPackageImpl
