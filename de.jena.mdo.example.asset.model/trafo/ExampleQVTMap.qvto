// import UTMToDegree Blackbox
import de.mdo.jena.geo.DetectorUTMToDegBB;

// these are the model A requirements
modeltype ASSET "strict" uses asset('http://jena.de/mdo/asset/1.0');
// these are the model B requirements
modeltype TRAFFIC "strict" uses traffic('http://jena.de/mdo/traffic/1.0');



transformation ExampleQVTMap(in traffic : TRAFFIC, out asset : ASSET);

/*
/In the main() you need to specify which kind of objects you want to map from model A to model B.
/In the example below we are saying to take all the object of class ClassInModelA of the model A and to map them
/to model B through the map toModelB(), which is defined below.
*/ 
main() {
	traffic.rootObjects()[DETECTOR]->map toDetector();
}


/*
/Here you specify what the map toModelB() does. The syntax is always the same as here. In the map body you link
/the attributes in model B to the ones in model A. The notation self refers to the model A.
/With the . you map one element of A into one element of B. With -> instead you map all elements of A into all elements
/of B (use this for lists of objects). When the two properties you need to map are not of the same type you could use a 
/query to map them (see in the library).
*/
mapping traffic::DETECTOR::toDetector() : asset::Detector {
	
	id := self.NO.toString();
	name := self.NAME;
	comment := self.DET_BEM ;
	lon := self.getLongitude();
	lat := self.getLatitude();
	mode := self.DETECTORMODE;
	addedInitialMode := self.ADDEDINITIALMODE;
	code := self.CODE;
	typeNumber := self.TYPENO;
}

